(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = true;
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = true;
Main.main = function() {
	iron_object_BoneAnimation.skinMaxBones = 8;
	iron_object_LightObject.cascadeCount = 4;
	iron_object_LightObject.cascadeSplitFactor = 0.800000011920929;
	armory_system_Starter.numAssets = 19;
	armory_system_Starter.drawLoading = armory_trait_internal_LoadingScreen.render;
	armory_system_Starter.main("Scene",0,false,true,false,960,540,1,true,armory_renderpath_RenderPathCreator.get);
};
Math.__name__ = true;
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = true;
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
var UInt = {};
UInt.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
UInt.gte = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a >= b;
	}
};
UInt.toFloat = function(this1) {
	var int = this1;
	if(int < 0) {
		return 4294967296.0 + int;
	} else {
		return int + 0.0;
	}
};
var armory_data_Config = function() { };
$hxClasses["armory.data.Config"] = armory_data_Config;
armory_data_Config.__name__ = true;
var armory_data_ConstData = function() { };
$hxClasses["armory.data.ConstData"] = armory_data_ConstData;
armory_data_ConstData.__name__ = true;
armory_data_ConstData.initLTC = function() {
	armory_data_ConstData.ltcMatTex = kha_Image.fromBytes(haxe_io_Bytes.ofData(haxe_io_Float32Array.fromArray(armory_data_ConstData.ltc_mat).buffer),64,64,2);
	armory_data_ConstData.ltcMagTex = kha_Image.fromBytes(haxe_io_Bytes.ofData(haxe_io_Float32Array.fromArray(armory_data_ConstData.ltc_mag).buffer),64,64,5);
};
var armory_object_Uniforms = function() { };
$hxClasses["armory.object.Uniforms"] = armory_object_Uniforms;
armory_object_Uniforms.__name__ = true;
armory_object_Uniforms.register = function() {
	iron_object_Uniforms.externalTextureLinks = [armory_object_Uniforms.textureLink];
	iron_object_Uniforms.externalVec2Links = [armory_object_Uniforms.vec2Link];
	iron_object_Uniforms.externalVec3Links = [armory_object_Uniforms.vec3Link];
	iron_object_Uniforms.externalVec4Links = [];
	iron_object_Uniforms.externalFloatLinks = [armory_object_Uniforms.floatLink];
	iron_object_Uniforms.externalIntLinks = [];
};
armory_object_Uniforms.textureLink = function(object,mat,link) {
	switch(link) {
	case "_ltcMag":
		if(armory_data_ConstData.ltcMagTex == null) {
			armory_data_ConstData.initLTC();
		}
		return armory_data_ConstData.ltcMagTex;
	case "_ltcMat":
		if(armory_data_ConstData.ltcMatTex == null) {
			armory_data_ConstData.initLTC();
		}
		return armory_data_ConstData.ltcMatTex;
	case "_morphDataNor":
		return (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget.morphDataNor;
	case "_morphDataPos":
		return (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget.morphDataPos;
	case "_nishitaLUT":
		if(armory_renderpath_Nishita.data == null) {
			armory_renderpath_Nishita.recompute(iron_Scene.active.world);
		}
		return armory_renderpath_Nishita.data.lut;
	}
	var this1 = iron_RenderPath.active.renderTargets;
	var key = StringTools.endsWith(link,"_depth") ? HxOverrides.substr(link,0,link.length - 6) : link;
	var target = this1.h[key];
	if(target != null) {
		return target.image;
	} else {
		return null;
	}
};
armory_object_Uniforms.vec3Link = function(object,mat,link) {
	var v = null;
	switch(link) {
	case "_hosekA":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.A.x;
			v.y = armory_renderpath_HosekWilkie.data.A.y;
			v.z = armory_renderpath_HosekWilkie.data.A.z;
		}
		break;
	case "_hosekB":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.B.x;
			v.y = armory_renderpath_HosekWilkie.data.B.y;
			v.z = armory_renderpath_HosekWilkie.data.B.z;
		}
		break;
	case "_hosekC":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.C.x;
			v.y = armory_renderpath_HosekWilkie.data.C.y;
			v.z = armory_renderpath_HosekWilkie.data.C.z;
		}
		break;
	case "_hosekD":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.D.x;
			v.y = armory_renderpath_HosekWilkie.data.D.y;
			v.z = armory_renderpath_HosekWilkie.data.D.z;
		}
		break;
	case "_hosekE":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.E.x;
			v.y = armory_renderpath_HosekWilkie.data.E.y;
			v.z = armory_renderpath_HosekWilkie.data.E.z;
		}
		break;
	case "_hosekF":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.F.x;
			v.y = armory_renderpath_HosekWilkie.data.F.y;
			v.z = armory_renderpath_HosekWilkie.data.F.z;
		}
		break;
	case "_hosekG":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.G.x;
			v.y = armory_renderpath_HosekWilkie.data.G.y;
			v.z = armory_renderpath_HosekWilkie.data.G.z;
		}
		break;
	case "_hosekH":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.H.x;
			v.y = armory_renderpath_HosekWilkie.data.H.y;
			v.z = armory_renderpath_HosekWilkie.data.H.z;
		}
		break;
	case "_hosekI":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.I.x;
			v.y = armory_renderpath_HosekWilkie.data.I.y;
			v.z = armory_renderpath_HosekWilkie.data.I.z;
		}
		break;
	case "_hosekZ":
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.recompute(iron_Scene.active.world);
		}
		if(armory_renderpath_HosekWilkie.data != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = armory_renderpath_HosekWilkie.data.Z.x;
			v.y = armory_renderpath_HosekWilkie.data.Z.y;
			v.z = armory_renderpath_HosekWilkie.data.Z.z;
		}
		break;
	}
	return v;
};
armory_object_Uniforms.vec2Link = function(object,mat,link) {
	var v = null;
	if(link == "_nishitaDensity") {
		var w = iron_Scene.active.world;
		if(w != null) {
			v = iron_object_Uniforms.helpVec;
			v.x = w.raw.nishita_density.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
			v.y = w.raw.nishita_density.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		}
	}
	return v;
};
armory_object_Uniforms.floatLink = function(object,mat,link) {
	return null;
};
var armory_renderpath_HosekWilkieRadianceData = function() {
	this.Z = new kha_math_FastVector3();
	this.I = new kha_math_FastVector3();
	this.H = new kha_math_FastVector3();
	this.G = new kha_math_FastVector3();
	this.F = new kha_math_FastVector3();
	this.E = new kha_math_FastVector3();
	this.D = new kha_math_FastVector3();
	this.C = new kha_math_FastVector3();
	this.B = new kha_math_FastVector3();
	this.A = new kha_math_FastVector3();
};
$hxClasses["armory.renderpath.HosekWilkieRadianceData"] = armory_renderpath_HosekWilkieRadianceData;
armory_renderpath_HosekWilkieRadianceData.__name__ = true;
armory_renderpath_HosekWilkieRadianceData.prototype = {
	evaluateSpline: function(spline,index,stride,value) {
		return Math.pow(1 - value,5) * spline[index] + 5 * Math.pow(1 - value,4) * Math.pow(value,1) * spline[index + stride] + 10 * Math.pow(1 - value,3) * Math.pow(value,2) * spline[index + 2 * stride] + 10 * Math.pow(1 - value,2) * Math.pow(value,3) * spline[index + 3 * stride] + 5 * Math.pow(1 - value,1) * Math.pow(value,4) * spline[index + 4 * stride] + Math.pow(value,5) * spline[index + 5 * stride];
	}
	,clamp: function(n,lower,upper) {
		if(n <= lower) {
			return lower;
		} else if(n >= upper) {
			return upper;
		} else {
			return n;
		}
	}
	,clampF: function(n,lower,upper) {
		if(n <= lower) {
			return lower;
		} else if(n >= upper) {
			return upper;
		} else {
			return n;
		}
	}
	,evaluate: function(dataset,index,stride,turbidity,albedo,sunTheta) {
		var elevationK = Math.pow(Math.max(0.0,1.0 - sunTheta / (Math.PI / 2.0)),0.333333333333333315);
		var turbidity0 = this.clamp(turbidity | 0,1,10);
		var turbidity1 = Math.min(turbidity0 + 1,10) | 0;
		var turbidityK = this.clampF(turbidity - turbidity0,0.0,1.0);
		var datasetA0Index = index;
		var datasetA1Index = index + stride * 6 * 10;
		var a0t0 = this.evaluateSpline(dataset,datasetA0Index + stride * 6 * (turbidity0 - 1),stride,elevationK);
		var a1t0 = this.evaluateSpline(dataset,datasetA1Index + stride * 6 * (turbidity0 - 1),stride,elevationK);
		var a0t1 = this.evaluateSpline(dataset,datasetA0Index + stride * 6 * (turbidity1 - 1),stride,elevationK);
		var a1t1 = this.evaluateSpline(dataset,datasetA1Index + stride * 6 * (turbidity1 - 1),stride,elevationK);
		return a0t0 * (1 - albedo) * (1 - turbidityK) + a1t0 * albedo * (1 - turbidityK) + a0t1 * (1 - albedo) * turbidityK + a1t1 * albedo * turbidityK;
	}
	,hosek_wilkie: function(cos_theta,gamma,cos_gamma,A,B,C,D,E,F,G,H,I) {
		var val = 1.0 + cos_gamma * cos_gamma;
		var chix = val / Math.pow(1.0 + H.x * H.x - 2.0 * cos_gamma * H.x,1.5);
		var chiy = val / Math.pow(1.0 + H.y * H.y - 2.0 * cos_gamma * H.y,1.5);
		var chiz = val / Math.pow(1.0 + H.z * H.z - 2.0 * cos_gamma * H.z,1.5);
		var x = chix;
		var y = chiy;
		var z = chiz;
		if(z == null) {
			z = 0;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		var chi_x = x;
		var chi_y = y;
		var chi_z = z;
		var vx = (1.0 + A.x * Math.exp(B.x / (cos_theta + 0.01))) * (C.x + D.x * Math.exp(E.x * gamma) + F.x * (cos_gamma * cos_gamma) + G.x * chi_x + I.x * Math.sqrt(Math.max(0.0,cos_theta)));
		var vy = (1.0 + A.y * Math.exp(B.y / (cos_theta + 0.01))) * (C.y + D.y * Math.exp(E.y * gamma) + F.y * (cos_gamma * cos_gamma) + G.y * chi_y + I.y * Math.sqrt(Math.max(0.0,cos_theta)));
		var vz = (1.0 + A.z * Math.exp(B.z / (cos_theta + 0.01))) * (C.z + D.z * Math.exp(E.z * gamma) + F.z * (cos_gamma * cos_gamma) + G.z * chi_z + I.z * Math.sqrt(Math.max(0.0,cos_theta)));
		return new kha_math_FastVector3(vx,vy,vz);
	}
	,setVector: function(v,index,f) {
		if(index == 0) {
			v.x = f;
		} else if(index == 1) {
			v.y = f;
		} else {
			v.z = f;
		}
	}
	,recompute: function(sunTheta,turbidity,albedo,normalizedSunY) {
		var _g = 0;
		while(_g < 3) {
			var i = _g++;
			this.setVector(this.A,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],0,9,turbidity,albedo,sunTheta));
			this.setVector(this.B,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],1,9,turbidity,albedo,sunTheta));
			this.setVector(this.C,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],2,9,turbidity,albedo,sunTheta));
			this.setVector(this.D,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],3,9,turbidity,albedo,sunTheta));
			this.setVector(this.E,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],4,9,turbidity,albedo,sunTheta));
			this.setVector(this.F,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],5,9,turbidity,albedo,sunTheta));
			this.setVector(this.G,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],6,9,turbidity,albedo,sunTheta));
			this.setVector(this.H,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],8,9,turbidity,albedo,sunTheta));
			this.setVector(this.I,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],7,9,turbidity,albedo,sunTheta));
			this.setVector(this.Z,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGBRad[i],0,1,turbidity,albedo,sunTheta));
		}
		if(normalizedSunY != 0.0) {
			var S = this.hosek_wilkie(Math.cos(sunTheta),0,1.0,this.A,this.B,this.C,this.D,this.E,this.F,this.G,this.H,this.I);
			S.x *= this.Z.x;
			S.y *= this.Z.y;
			S.z *= this.Z.z;
			var x = 0.2126;
			var y = 0.7152;
			var z = 0.0722;
			if(z == null) {
				z = 0;
			}
			if(y == null) {
				y = 0;
			}
			if(x == null) {
				x = 0;
			}
			var v_x = x;
			var v_y = y;
			var v_z = z;
			var dotS = S.x * v_x + S.y * v_y + S.z * v_z;
			this.Z.x /= dotS;
			this.Z.y /= dotS;
			this.Z.z /= dotS;
			var _this = this.Z;
			this.Z = new kha_math_FastVector3(_this.x * normalizedSunY,_this.y * normalizedSunY,_this.z * normalizedSunY);
		}
	}
	,__class__: armory_renderpath_HosekWilkieRadianceData
};
var armory_renderpath_HosekWilkie = function() { };
$hxClasses["armory.renderpath.HosekWilkie"] = armory_renderpath_HosekWilkie;
armory_renderpath_HosekWilkie.__name__ = true;
armory_renderpath_HosekWilkie.recompute = function(world) {
	if(world == null || world.raw.sun_direction == null) {
		return;
	}
	if(armory_renderpath_HosekWilkie.data == null) {
		armory_renderpath_HosekWilkie.data = new armory_renderpath_HosekWilkieRadianceData();
	}
	var sunZ = world.raw.sun_direction.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) > 0 ? world.raw.sun_direction.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) : 0;
	var sunPositionX = Math.acos(sunZ);
	var normalizedSunY = 1.15;
	armory_renderpath_HosekWilkie.data.recompute(sunPositionX,world.raw.turbidity,world.raw.ground_albedo,normalizedSunY);
};
var armory_renderpath_HosekWilkieData = function() { };
$hxClasses["armory.renderpath.HosekWilkieData"] = armory_renderpath_HosekWilkieData;
armory_renderpath_HosekWilkieData.__name__ = true;
var armory_renderpath_Inc = function() { };
$hxClasses["armory.renderpath.Inc"] = armory_renderpath_Inc;
armory_renderpath_Inc.__name__ = true;
armory_renderpath_Inc.init = function(_path) {
	armory_renderpath_Inc.path = _path;
};
armory_renderpath_Inc.bindShadowMap = function() {
	var _g = 0;
	var _g1 = iron_Scene.active.lights;
	while(_g < _g1.length) {
		var l = _g1[_g];
		++_g;
		if(!l.visible || l.data.raw.type != "sun") {
			continue;
		}
		var n = "shadowMap";
		armory_renderpath_Inc.path.bindTarget(n,n);
		break;
	}
	var _g = 0;
	var _g1 = armory_renderpath_Inc.pointIndex;
	while(_g < _g1) {
		var i = _g++;
		var n = "shadowMapPoint[" + i + "]";
		armory_renderpath_Inc.path.bindTarget(n,n);
	}
	var _g = 0;
	var _g1 = armory_renderpath_Inc.spotIndex;
	while(_g < _g1) {
		var i = _g++;
		var n = "shadowMapSpot[" + i + "]";
		armory_renderpath_Inc.path.bindTarget(n,n);
	}
};
armory_renderpath_Inc.shadowMapName = function(light) {
	switch(light.data.raw.type) {
	case "point":
		return "shadowMapPoint[" + armory_renderpath_Inc.pointIndex + "]";
	case "sun":
		return "shadowMap";
	default:
		return "shadowMapSpot[" + armory_renderpath_Inc.spotIndex + "]";
	}
};
armory_renderpath_Inc.getShadowMap = function(l) {
	var target = armory_renderpath_Inc.shadowMapName(l);
	var rt = armory_renderpath_Inc.path.renderTargets.h[target];
	if(rt == null) {
		if(armory_renderpath_Inc.path.light.data.raw.shadowmap_cube) {
			var size = armory_renderpath_Inc.path.light.data.raw.shadowmap_size;
			var t = new iron_RenderTargetRaw();
			t.name = target;
			t.width = size;
			t.height = size;
			t.format = "DEPTH16";
			t.is_cubemap = true;
			rt = armory_renderpath_Inc.path.createRenderTarget(t);
		} else {
			var sizew = armory_renderpath_Inc.path.light.data.raw.shadowmap_size;
			var sizeh = sizew;
			if(l.data.raw.type == "sun") {
				sizew *= iron_object_LightObject.cascadeCount;
			}
			var t = new iron_RenderTargetRaw();
			t.name = target;
			t.width = sizew;
			t.height = sizeh;
			t.format = "DEPTH16";
			rt = armory_renderpath_Inc.path.createRenderTarget(t);
		}
	}
	return target;
};
armory_renderpath_Inc.drawShadowMap = function() {
	armory_renderpath_Inc.pointIndex = 0;
	armory_renderpath_Inc.spotIndex = 0;
	var _g = 0;
	var _g1 = iron_Scene.active.lights;
	while(_g < _g1.length) {
		var l = _g1[_g];
		++_g;
		if(!l.visible) {
			continue;
		}
		armory_renderpath_Inc.path.light = l;
		var shadowmap = armory_renderpath_Inc.getShadowMap(l);
		var faces = l.data.raw.shadowmap_cube ? 6 : 1;
		var _g2 = 0;
		var _g3 = faces;
		while(_g2 < _g3) {
			var i = _g2++;
			if(faces > 1) {
				armory_renderpath_Inc.path.currentFace = i;
			}
			armory_renderpath_Inc.path.setTarget(shadowmap);
			armory_renderpath_Inc.path.clearTarget(null,1.0);
			if(l.data.raw.cast_shadow) {
				armory_renderpath_Inc.path.drawMeshes("shadowmap");
			}
		}
		armory_renderpath_Inc.path.currentFace = -1;
		if(l.data.raw.type == "point") {
			armory_renderpath_Inc.pointIndex++;
		} else if(l.data.raw.type == "spot" || l.data.raw.type == "area") {
			armory_renderpath_Inc.spotIndex++;
		}
	}
};
var armory_renderpath_Nishita = function() { };
$hxClasses["armory.renderpath.Nishita"] = armory_renderpath_Nishita;
armory_renderpath_Nishita.__name__ = true;
armory_renderpath_Nishita.recompute = function(world) {
	if(world == null || world.raw.nishita_density == null) {
		return;
	}
	if(armory_renderpath_Nishita.data == null) {
		armory_renderpath_Nishita.data = new armory_renderpath_NishitaData();
	}
	var density = world.raw.nishita_density;
	armory_renderpath_Nishita.data.computeLUT(new iron_math_Vec3(density.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),density.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),density.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN)));
};
var iron_math_Vec3 = function(x,y,z) {
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["iron.math.Vec3"] = iron_math_Vec3;
iron_math_Vec3.__name__ = true;
iron_math_Vec3.prototype = {
	__class__: iron_math_Vec3
};
var armory_renderpath_NishitaData = function() {
};
$hxClasses["armory.renderpath.NishitaData"] = armory_renderpath_NishitaData;
armory_renderpath_NishitaData.__name__ = true;
armory_renderpath_NishitaData.prototype = {
	getOzoneDensity: function(height) {
		if(height < 10000.0 || height >= 40000.0) {
			return 0.0;
		}
		if(height < 25000.0) {
			return (height - 10000.0) / 15000.0;
		}
		return -((height - 40000.0) / 15000.0);
	}
	,raySphereIntersection: function(rayOrigin,rayDirection,sphereRadius) {
		var a = rayDirection.x * rayDirection.x + rayDirection.y * rayDirection.y + rayDirection.z * rayDirection.z;
		var b = 2.0 * (rayDirection.x * rayOrigin.x + rayDirection.y * rayOrigin.y + rayDirection.z * rayOrigin.z);
		var c = rayOrigin.x * rayOrigin.x + rayOrigin.y * rayOrigin.y + rayOrigin.z * rayOrigin.z - sphereRadius * sphereRadius;
		var d = b * b - 4.0 * a * c;
		if(d < 0.0) {
			return new iron_math_Vec2(1e5,-1e5);
		}
		return new iron_math_Vec2((-b - Math.sqrt(d)) / (2.0 * a),(-b + Math.sqrt(d)) / (2.0 * a));
	}
	,computeLUT: function(density) {
		var this1 = new Float32Array(armory_renderpath_NishitaData.lutHeightSteps * armory_renderpath_NishitaData.lutAngleSteps * 4);
		var imageData = this1;
		var _g = 0;
		var _g1 = armory_renderpath_NishitaData.lutHeightSteps;
		while(_g < _g1) {
			var x = _g++;
			var height = x / (armory_renderpath_NishitaData.lutHeightSteps - 1);
			height *= height;
			height *= armory_renderpath_NishitaData.radiusAtmo * 1000;
			var _g2 = 0;
			var _g3 = armory_renderpath_NishitaData.lutAngleSteps;
			while(_g2 < _g3) {
				var y = _g2++;
				var sunTheta = y / (armory_renderpath_NishitaData.lutAngleSteps - 1) * 2 - 1;
				sunTheta = (sunTheta == 0 ? 0 : sunTheta < 0 ? -1.0 : 1.0) * sunTheta * sunTheta;
				sunTheta = sunTheta * Math.PI / 2 + Math.PI / 2;
				var jODepth = this.sampleSecondaryRay(height,sunTheta,density);
				var pixelIndex = (x + y * armory_renderpath_NishitaData.lutHeightSteps) * 4;
				imageData[pixelIndex] = jODepth.x;
				imageData[pixelIndex + 1] = jODepth.y;
				imageData[pixelIndex + 2] = jODepth.z;
				imageData[pixelIndex + 3] = 1.0;
			}
		}
		this.lut = kha_Image.fromBytes(haxe_io_Bytes.ofData(imageData.buffer),armory_renderpath_NishitaData.lutHeightSteps,armory_renderpath_NishitaData.lutAngleSteps,2,0);
	}
	,sampleSecondaryRay: function(height,sunTheta,density) {
		var radiusPlanetMeters = armory_renderpath_NishitaData.radiusPlanet * 1000;
		var x = 0;
		var y = 0;
		var z = height + radiusPlanetMeters;
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		var iPos_x = x;
		var iPos_y = y;
		var iPos_z = z;
		var _this = new iron_math_Vec3(0.0,Math.sin(sunTheta),Math.cos(sunTheta));
		var n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		if(n > 0.0) {
			var invN = 1.0 / n;
			_this.x *= invN;
			_this.y *= invN;
			_this.z *= invN;
		}
		var pSun = _this;
		var jTime = 0.0;
		var _this = new iron_math_Vec3(iPos_x,iPos_y,iPos_z);
		_this.x *= 0.001;
		_this.y *= 0.001;
		_this.z *= 0.001;
		var jStepSize = this.raySphereIntersection(_this,pSun,armory_renderpath_NishitaData.radiusAtmo).y / armory_renderpath_NishitaData.jSteps;
		jStepSize *= 1000;
		var jODepth_x = 0.0;
		var jODepth_y = 0.0;
		var jODepth_z = 0.0;
		var _g = 0;
		var _g1 = armory_renderpath_NishitaData.jSteps;
		while(_g < _g1) {
			var i = _g++;
			var x = iPos_x;
			var y = iPos_y;
			var z = iPos_z;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			var jPos_x = x;
			var jPos_y = y;
			var jPos_z = z;
			var x1 = pSun.x;
			var y1 = pSun.y;
			var z1 = pSun.z;
			if(z1 == null) {
				z1 = 0.0;
			}
			if(y1 == null) {
				y1 = 0.0;
			}
			if(x1 == null) {
				x1 = 0.0;
			}
			var v_x = x1;
			var v_y = y1;
			var v_z = z1;
			var f = jTime + jStepSize * 0.5;
			v_x *= f;
			v_y *= f;
			v_z *= f;
			jPos_x += v_x;
			jPos_y += v_y;
			jPos_z += v_z;
			var jHeight = Math.sqrt(jPos_x * jPos_x + jPos_y * jPos_y + jPos_z * jPos_z) - radiusPlanetMeters;
			var optDepthRayleigh = Math.exp(-jHeight / armory_renderpath_NishitaData.rayleighScale) * density.x;
			var optDepthMie = Math.exp(-jHeight / armory_renderpath_NishitaData.mieScale) * density.y;
			var optDepthOzone = this.getOzoneDensity(jHeight) * density.z;
			jODepth_x += optDepthRayleigh;
			jODepth_y += optDepthMie;
			jODepth_z += optDepthOzone;
			jTime += jStepSize;
		}
		jODepth_x *= jStepSize;
		jODepth_y *= jStepSize;
		jODepth_z *= jStepSize;
		var jAttenuation = new iron_math_Vec3();
		var mie = armory_renderpath_NishitaData.mieCoeff * jODepth_y;
		jAttenuation.x += mie;
		jAttenuation.y += mie;
		jAttenuation.z += mie;
		var _this = armory_renderpath_NishitaData.rayleighCoeff;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		var v_x = x;
		var v_y = y;
		var v_z = z;
		var f = jODepth_x;
		v_x *= f;
		v_y *= f;
		v_z *= f;
		jAttenuation.x += v_x;
		jAttenuation.y += v_y;
		jAttenuation.z += v_z;
		var _this = armory_renderpath_NishitaData.ozoneCoeff;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		var v_x = x;
		var v_y = y;
		var v_z = z;
		var f = jODepth_z;
		v_x *= f;
		v_y *= f;
		v_z *= f;
		jAttenuation.x += v_x;
		jAttenuation.y += v_y;
		jAttenuation.z += v_z;
		jAttenuation.x *= -1;
		jAttenuation.y *= -1;
		jAttenuation.z *= -1;
		var v = jAttenuation;
		jAttenuation.x = Math.exp(v.x);
		jAttenuation.y = Math.exp(v.y);
		jAttenuation.z = Math.exp(v.z);
		return jAttenuation;
	}
	,__class__: armory_renderpath_NishitaData
};
var armory_renderpath_RenderPathDeferred = function() { };
$hxClasses["armory.renderpath.RenderPathDeferred"] = armory_renderpath_RenderPathDeferred;
armory_renderpath_RenderPathDeferred.__name__ = true;
armory_renderpath_RenderPathDeferred.setTargetMeshes = function() {
	armory_renderpath_RenderPathDeferred.path.setTarget("gbuffer0",["gbuffer1"]);
};
armory_renderpath_RenderPathDeferred.drawMeshes = function() {
	armory_renderpath_RenderPathDeferred.path.drawMeshes("mesh");
};
armory_renderpath_RenderPathDeferred.init = function(_path) {
	armory_renderpath_RenderPathDeferred.path = _path;
	armory_renderpath_RenderPathDeferred.path.createDepthBuffer("main","DEPTH24");
	var t = new iron_RenderTargetRaw();
	t.name = "gbuffer0";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "RGBA64";
	t.scale = armory_renderpath_Inc.superSample;
	t.depth_buffer = "main";
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	var t = new iron_RenderTargetRaw();
	t.name = "tex";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "RGBA64";
	t.scale = armory_renderpath_Inc.superSample;
	t.depth_buffer = "main";
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	var t = new iron_RenderTargetRaw();
	t.name = "buf";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "RGBA64";
	t.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	var t = new iron_RenderTargetRaw();
	t.name = "gbuffer1";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "RGBA64";
	t.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/deferred_light/deferred_light");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/ssao_pass/ssao_pass");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/blur_edge_pass/blur_edge_pass_x");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/blur_edge_pass/blur_edge_pass_y");
	var t = new iron_RenderTargetRaw();
	t.name = "singlea";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "R8";
	t.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	var t = new iron_RenderTargetRaw();
	t.name = "singleb";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "R8";
	t.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	var t = new iron_RenderTargetRaw();
	t.name = "bufa";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "RGBA32";
	t.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	var t = new iron_RenderTargetRaw();
	t.name = "bufb";
	t.width = 0;
	t.height = 0;
	t.displayp = null;
	t.format = "RGBA32";
	t.scale = armory_renderpath_Inc.superSample;
	armory_renderpath_RenderPathDeferred.path.createRenderTarget(t);
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/compositor_pass/compositor_pass");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_edge_detect/smaa_edge_detect");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_blend_weight/smaa_blend_weight");
	armory_renderpath_RenderPathDeferred.path.loadShader("shader_datas/smaa_neighborhood_blend/smaa_neighborhood_blend");
};
armory_renderpath_RenderPathDeferred.commands = function() {
	armory_renderpath_RenderPathDeferred.path.setTarget("gbuffer0");
	armory_renderpath_RenderPathDeferred.path.clearTarget(null,1.0);
	armory_renderpath_RenderPathCreator.setTargetMeshes();
	armory_renderpath_RenderPathCreator.drawMeshes();
	if(armory_data_Config.raw.rp_ssgi != false) {
		armory_renderpath_RenderPathDeferred.path.setTarget("singlea");
		armory_renderpath_RenderPathDeferred.path.bindTarget("_main","gbufferD");
		armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/ssao_pass/ssao_pass");
		armory_renderpath_RenderPathDeferred.path.setTarget("singleb");
		armory_renderpath_RenderPathDeferred.path.bindTarget("singlea","tex");
		armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/blur_edge_pass/blur_edge_pass_x");
		armory_renderpath_RenderPathDeferred.path.setTarget("singlea");
		armory_renderpath_RenderPathDeferred.path.bindTarget("singleb","tex");
		armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/blur_edge_pass/blur_edge_pass_y");
	}
	armory_renderpath_Inc.drawShadowMap();
	armory_renderpath_RenderPathDeferred.path.setDepthFrom("tex","gbuffer1");
	armory_renderpath_RenderPathDeferred.path.setTarget("tex");
	armory_renderpath_RenderPathDeferred.path.bindTarget("_main","gbufferD");
	armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer0","gbuffer0");
	armory_renderpath_RenderPathDeferred.path.bindTarget("gbuffer1","gbuffer1");
	if(armory_data_Config.raw.rp_ssgi != false) {
		armory_renderpath_RenderPathDeferred.path.bindTarget("singlea","ssaotex");
	} else {
		armory_renderpath_RenderPathDeferred.path.bindTarget("empty_white","ssaotex");
	}
	var voxelao_pass = false;
	armory_renderpath_Inc.bindShadowMap();
	if(voxelao_pass) {
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/deferred_light/deferred_light_VoxelAOvar");
	} else {
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/deferred_light/deferred_light");
	}
	armory_renderpath_RenderPathDeferred.path.setDepthFrom("tex","gbuffer0");
	if(iron_Scene.active.raw.world_ref != null) {
		armory_renderpath_RenderPathDeferred.path.setTarget("tex");
		armory_renderpath_RenderPathDeferred.path.drawSkydome("shader_datas/World_" + iron_Scene.active.raw.world_ref + "/World_" + iron_Scene.active.raw.world_ref);
	}
	var framebuffer = "";
	armory_renderpath_RenderPathCreator.finalTarget = armory_renderpath_RenderPathDeferred.path.currentTarget;
	var target = "";
	target = "buf";
	armory_renderpath_RenderPathDeferred.path.setTarget(target);
	armory_renderpath_RenderPathDeferred.path.bindTarget("tex","tex");
	var isProbe = false;
	if(!isProbe) {
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/compositor_pass/compositor_pass");
	} else {
		armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/copy_pass/copy_pass");
	}
	armory_renderpath_RenderPathDeferred.path.setTarget("bufa");
	armory_renderpath_RenderPathDeferred.path.clearTarget(0);
	armory_renderpath_RenderPathDeferred.path.bindTarget("buf","colorTex");
	armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_edge_detect/smaa_edge_detect");
	armory_renderpath_RenderPathDeferred.path.setTarget("bufb");
	armory_renderpath_RenderPathDeferred.path.clearTarget(0);
	armory_renderpath_RenderPathDeferred.path.bindTarget("bufa","edgesTex");
	armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_blend_weight/smaa_blend_weight");
	armory_renderpath_RenderPathDeferred.path.setTarget(framebuffer);
	armory_renderpath_RenderPathDeferred.path.bindTarget("buf","colorTex");
	armory_renderpath_RenderPathDeferred.path.bindTarget("bufb","blendTex");
	armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/smaa_neighborhood_blend/smaa_neighborhood_blend");
};
armory_renderpath_RenderPathDeferred.setupDepthTexture = function() {
	armory_renderpath_RenderPathDeferred.path.setDepthFrom("gbuffer0","gbuffer1");
	armory_renderpath_RenderPathDeferred.path.depthToRenderTarget.h["main"] = armory_renderpath_RenderPathDeferred.path.renderTargets.h["tex"];
	armory_renderpath_RenderPathDeferred.path.setTarget("depthtex");
	armory_renderpath_RenderPathDeferred.path.bindTarget("_main","tex");
	armory_renderpath_RenderPathDeferred.path.drawShader("shader_datas/copy_pass/copy_pass");
	armory_renderpath_RenderPathDeferred.path.setDepthFrom("gbuffer0","tex");
	armory_renderpath_RenderPathDeferred.path.depthToRenderTarget.h["main"] = armory_renderpath_RenderPathDeferred.path.renderTargets.h["gbuffer0"];
	armory_renderpath_RenderPathDeferred.path.setTarget("gbuffer0",["gbuffer1"]);
	armory_renderpath_RenderPathDeferred.path.bindTarget("depthtex","depthtex");
};
var armory_renderpath_RenderPathCreator = function() { };
$hxClasses["armory.renderpath.RenderPathCreator"] = armory_renderpath_RenderPathCreator;
armory_renderpath_RenderPathCreator.__name__ = true;
armory_renderpath_RenderPathCreator.commands = function() {
};
armory_renderpath_RenderPathCreator.get = function() {
	armory_renderpath_RenderPathCreator.path = new iron_RenderPath();
	armory_renderpath_Inc.init(armory_renderpath_RenderPathCreator.path);
	armory_renderpath_RenderPathDeferred.init(armory_renderpath_RenderPathCreator.path);
	armory_renderpath_RenderPathCreator.path.commands = function() {
		armory_renderpath_RenderPathDeferred.commands();
		armory_renderpath_RenderPathCreator.commands();
	};
	armory_renderpath_RenderPathCreator.path.setupDepthTexture = armory_renderpath_RenderPathDeferred.setupDepthTexture;
	return armory_renderpath_RenderPathCreator.path;
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = true;
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,get_message: function() {
		return this.message;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_message:"get_message"}
});
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = true;
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var armory_system_Starter = function() { };
$hxClasses["armory.system.Starter"] = armory_system_Starter;
armory_system_Starter.__name__ = true;
armory_system_Starter.main = function(scene,mode,resize,min,max,w,h,msaa,vsync,getRenderPath) {
	var tasks = 0;
	var start = function() {
		if(tasks > 0) {
			return;
		}
		if(armory_data_Config.raw == null) {
			armory_data_Config.raw = { };
		}
		var c = armory_data_Config.raw;
		if(c.window_mode == null) {
			c.window_mode = mode;
		}
		if(c.window_resizable == null) {
			c.window_resizable = resize;
		}
		if(c.window_minimizable == null) {
			c.window_minimizable = min;
		}
		if(c.window_maximizable == null) {
			c.window_maximizable = max;
		}
		if(c.window_w == null) {
			c.window_w = w;
		}
		if(c.window_h == null) {
			c.window_h = h;
		}
		if(c.window_scale == null) {
			c.window_scale = 1.0;
		}
		if(c.window_msaa == null) {
			c.window_msaa = msaa;
		}
		if(c.window_vsync == null) {
			c.window_vsync = vsync;
		}
		armory_object_Uniforms.register();
		var windowMode = c.window_mode == 0 ? 0 : 1;
		var windowFeatures = 0;
		if(c.window_resizable) {
			windowFeatures |= 1;
		}
		if(c.window_maximizable) {
			windowFeatures |= 4;
		}
		if(c.window_minimizable) {
			windowFeatures |= 2;
		}
		try {
			kha_System.start(new kha_SystemOptions("area",c.window_w,c.window_h,new kha_WindowOptions(null,-1,-1,800,600,-1,true,windowFeatures,windowMode),new kha_FramebufferOptions(60,c.window_vsync,32,16,8,c.window_msaa)),function($window) {
				iron_App.init(function() {
					var load = null;
					load = function(g) {
						if(iron_Scene.active != null && iron_Scene.active.ready) {
							iron_App.removeRender2D(load);
						} else {
							armory_system_Starter.drawLoading(g,iron_data_Data.assetsLoaded,armory_system_Starter.numAssets);
						}
					};
					iron_App.notifyOnRender2D(load);
					iron_Scene.setActive(scene,function(object) {
						iron_RenderPath.setActive(getRenderPath());
					});
				});
			});
		} catch( _g ) {
			if(!kha_SystemImpl.gl2) {
				haxe_Log.trace("This project was not compiled with legacy shaders flag - please use WebGL 2 capable browser.",{ fileName : "Sources/armory/system/Starter.hx", lineNumber : 70, className : "armory.system.Starter", methodName : "main"});
			}
		}
	};
	tasks = 1;
	tasks -= 1;
	start();
};
var iron_Trait = function() {
	this._render2D = null;
	this._render = null;
	this._lateUpdate = null;
	this._update = null;
	this._remove = null;
	this._init = null;
	this._add = null;
};
$hxClasses["iron.Trait"] = iron_Trait;
iron_Trait.__name__ = true;
iron_Trait.prototype = {
	remove: function() {
		this.object.removeTrait(this);
	}
	,notifyOnAdd: function(f) {
		if(this._add == null) {
			this._add = [];
		}
		this._add.push(f);
	}
	,notifyOnInit: function(f) {
		if(this._init == null) {
			this._init = [];
		}
		this._init.push(f);
		iron_App.notifyOnInit(f);
	}
	,notifyOnRemove: function(f) {
		if(this._remove == null) {
			this._remove = [];
		}
		this._remove.push(f);
	}
	,notifyOnUpdate: function(f) {
		if(this._update == null) {
			this._update = [];
		}
		this._update.push(f);
		iron_App.notifyOnUpdate(f);
	}
	,__class__: iron_Trait
};
var armory_trait_WalkNavigation = function() {
	this.ease = 1.0;
	this.yvec = new iron_math_Vec4();
	this.xvec = new iron_math_Vec4();
	this.dir = new iron_math_Vec4();
	this.speed = 5.0;
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["armory.trait.WalkNavigation"] = armory_trait_WalkNavigation;
armory_trait_WalkNavigation.__name__ = true;
armory_trait_WalkNavigation.__super__ = iron_Trait;
armory_trait_WalkNavigation.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		this.keyboard = iron_system_Input.getKeyboard();
		this.gamepad = iron_system_Input.getGamepad();
		this.mouse = iron_system_Input.getMouse();
		try {
			this.camera = js_Boot.__cast(this.object , iron_object_CameraObject);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(typeof(_g1) == "string") {
				var msg = _g1;
				haxe_Log.trace("Error occurred: " + msg + "\nWalkNavigation trait should be used with a camera object.",{ fileName : "Sources/armory/trait/WalkNavigation.hx", lineNumber : 39, className : "armory.trait.WalkNavigation", methodName : "init"});
			} else {
				throw _g;
			}
		}
		if(this.camera != null) {
			this.notifyOnUpdate($bind(this,this.update));
		}
	}
	,update: function() {
		if(!armory_trait_WalkNavigation.enabled || iron_system_Input.occupied) {
			return;
		}
		var moveForward = this.keyboard.down("w") || this.keyboard.down("up");
		var moveBackward = this.keyboard.down("s") || this.keyboard.down("down");
		var strafeLeft = this.keyboard.down("a") || this.keyboard.down("left");
		var strafeRight = this.keyboard.down("d") || this.keyboard.down("right");
		var strafeUp = this.keyboard.down("e");
		var strafeDown = this.keyboard.down("q");
		var fast = this.keyboard.down("shift") ? 2.0 : this.keyboard.down("alt") ? 0.5 : 1.0;
		if(this.gamepad != null) {
			var leftStickY = Math.abs(this.gamepad.leftStick.y) > 0.05;
			var leftStickX = Math.abs(this.gamepad.leftStick.x) > 0.05;
			var r1 = this.gamepad.down("r1") > 0.0;
			var l1 = this.gamepad.down("l1") > 0.0;
			var rightStickX = Math.abs(this.gamepad.rightStick.x) > 0.1;
			var rightStickY = Math.abs(this.gamepad.rightStick.y) > 0.1;
			if(leftStickY || leftStickX || r1 || l1 || rightStickX || rightStickY) {
				var _this = this.dir;
				_this.x = 0;
				_this.y = 0;
				_this.z = 0;
				_this.w = 1.0;
				if(leftStickY) {
					var _this = this.yvec;
					var _this1 = this.camera;
					var x = -_this1.transform.local.self._20;
					var y = -_this1.transform.local.self._21;
					var z = -_this1.transform.local.self._22;
					if(z == null) {
						z = 0.0;
					}
					if(y == null) {
						y = 0.0;
					}
					if(x == null) {
						x = 0.0;
					}
					var v_x = x;
					var v_y = y;
					var v_z = z;
					var v_w = 1.0;
					_this.x = v_x;
					_this.y = v_y;
					_this.z = v_z;
					_this.w = v_w;
					var _this = this.yvec;
					var f = this.gamepad.leftStick.y;
					_this.x *= f;
					_this.y *= f;
					_this.z *= f;
					var _this = this.dir;
					var v = this.yvec;
					_this.x += v.x;
					_this.y += v.y;
					_this.z += v.z;
				}
				if(leftStickX) {
					var _this = this.xvec;
					var _this1 = this.camera;
					var x = _this1.transform.local.self._00;
					var y = _this1.transform.local.self._01;
					var z = _this1.transform.local.self._02;
					if(z == null) {
						z = 0.0;
					}
					if(y == null) {
						y = 0.0;
					}
					if(x == null) {
						x = 0.0;
					}
					var v_x = x;
					var v_y = y;
					var v_z = z;
					var v_w = 1.0;
					_this.x = v_x;
					_this.y = v_y;
					_this.z = v_z;
					_this.w = v_w;
					var _this = this.xvec;
					var f = this.gamepad.leftStick.x;
					_this.x *= f;
					_this.y *= f;
					_this.z *= f;
					var _this = this.dir;
					var v = this.xvec;
					_this.x += v.x;
					_this.y += v.y;
					_this.z += v.z;
				}
				if(r1) {
					var _this = this.dir;
					_this.x += 0;
					_this.y += 0;
					_this.z += 1;
				}
				if(l1) {
					var _this = this.dir;
					_this.x += 0;
					_this.y += 0;
					_this.z += -1;
				}
				var d = iron_system_Time.get_delta() * this.speed * fast;
				this.camera.transform.move(this.dir,d);
				if(rightStickX) {
					this.camera.transform.rotate(new iron_math_Vec4(0.0,0.0,1.0),-this.gamepad.rightStick.x / 15.0);
				}
				if(rightStickY) {
					var _this = this.camera;
					this.camera.transform.rotate(new iron_math_Vec4(_this.transform.local.self._00,_this.transform.local.self._01,_this.transform.local.self._02),this.gamepad.rightStick.y / 15.0);
				}
			}
		}
		if(moveForward || moveBackward || strafeRight || strafeLeft || strafeUp || strafeDown) {
			this.ease += iron_system_Time.get_delta() * 15;
			if(this.ease > 1.0) {
				this.ease = 1.0;
			}
			var _this = this.dir;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			if(moveForward) {
				var _this = this.dir;
				var _this1 = this.camera;
				var x = -_this1.transform.local.self._20;
				var y = -_this1.transform.local.self._21;
				var z = -_this1.transform.local.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x = x;
				var inlVec4_y = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				var _this1 = this.camera;
				var x = -_this1.transform.local.self._20;
				var y = -_this1.transform.local.self._21;
				var z = -_this1.transform.local.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x1 = x;
				var inlVec4_y = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				var _this1 = this.camera;
				var x = -_this1.transform.local.self._20;
				var y = -_this1.transform.local.self._21;
				var z = -_this1.transform.local.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x1 = x;
				var inlVec4_y1 = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				_this.x += inlVec4_x;
				_this.y += inlVec4_y;
				_this.z += inlVec4_z;
			}
			if(moveBackward) {
				var _this = this.dir;
				var _this1 = this.camera;
				var x = -_this1.transform.local.self._20;
				var y = -_this1.transform.local.self._21;
				var z = -_this1.transform.local.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x = x;
				var inlVec4_y = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				var _this1 = this.camera;
				var x = -_this1.transform.local.self._20;
				var y = -_this1.transform.local.self._21;
				var z = -_this1.transform.local.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x1 = x;
				var inlVec4_y = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				var _this1 = this.camera;
				var x = -_this1.transform.local.self._20;
				var y = -_this1.transform.local.self._21;
				var z = -_this1.transform.local.self._22;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x1 = x;
				var inlVec4_y1 = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				_this.x += -inlVec4_x;
				_this.y += -inlVec4_y;
				_this.z += -inlVec4_z;
			}
			if(strafeRight) {
				var _this = this.dir;
				var _this1 = this.camera;
				var x = _this1.transform.local.self._00;
				var y = _this1.transform.local.self._01;
				var z = _this1.transform.local.self._02;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x = x;
				var inlVec4_y = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				var _this1 = this.camera;
				var x = _this1.transform.local.self._00;
				var y = _this1.transform.local.self._01;
				var z = _this1.transform.local.self._02;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x1 = x;
				var inlVec4_y = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				var _this1 = this.camera;
				var x = _this1.transform.local.self._00;
				var y = _this1.transform.local.self._01;
				var z = _this1.transform.local.self._02;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x1 = x;
				var inlVec4_y1 = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				_this.x += inlVec4_x;
				_this.y += inlVec4_y;
				_this.z += inlVec4_z;
			}
			if(strafeLeft) {
				var _this = this.dir;
				var _this1 = this.camera;
				var x = _this1.transform.local.self._00;
				var y = _this1.transform.local.self._01;
				var z = _this1.transform.local.self._02;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x = x;
				var inlVec4_y = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				var _this1 = this.camera;
				var x = _this1.transform.local.self._00;
				var y = _this1.transform.local.self._01;
				var z = _this1.transform.local.self._02;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x1 = x;
				var inlVec4_y = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				var _this1 = this.camera;
				var x = _this1.transform.local.self._00;
				var y = _this1.transform.local.self._01;
				var z = _this1.transform.local.self._02;
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var inlVec4_x1 = x;
				var inlVec4_y1 = y;
				var inlVec4_z = z;
				var inlVec4_w = 1.0;
				_this.x += -inlVec4_x;
				_this.y += -inlVec4_y;
				_this.z += -inlVec4_z;
			}
			if(strafeUp) {
				var _this = this.dir;
				_this.x += 0;
				_this.y += 0;
				_this.z += 1;
			}
			if(strafeDown) {
				var _this = this.dir;
				_this.x += 0;
				_this.y += 0;
				_this.z += -1;
			}
		} else {
			this.ease -= iron_system_Time.get_delta() * 20.0 * this.ease;
			if(this.ease < 0.0) {
				this.ease = 0.0;
			}
		}
		if(this.mouse.wheelDelta < 0) {
			this.speed *= 1.1;
		} else if(this.mouse.wheelDelta > 0) {
			this.speed *= 0.9;
			if(this.speed < 0.5) {
				this.speed = 0.5;
			}
		}
		var d = iron_system_Time.get_delta() * this.speed * fast * this.ease;
		if(d > 0.0) {
			this.camera.transform.move(this.dir,d);
		}
		if(this.mouse.down()) {
			this.camera.transform.rotate(new iron_math_Vec4(0.0,0.0,1.0),-this.mouse.movementX / 200);
			var _this = this.camera;
			this.camera.transform.rotate(new iron_math_Vec4(_this.transform.local.self._00,_this.transform.local.self._01,_this.transform.local.self._02),-this.mouse.movementY / 200);
		}
	}
	,__class__: armory_trait_WalkNavigation
});
var armory_trait_internal_LoadingScreen = function() { };
$hxClasses["armory.trait.internal.LoadingScreen"] = armory_trait_internal_LoadingScreen;
armory_trait_internal_LoadingScreen.__name__ = true;
armory_trait_internal_LoadingScreen.render = function(g,assetsLoaded,assetsTotal) {
	g.set_color(-3200189);
	g.fillRect(0,iron_App.h() - 6,iron_App.w() / assetsTotal * assetsLoaded,6);
};
var armory_trait_internal_UniformsManager = function() {
	this.uniformExists = false;
	iron_Trait.call(this);
	this.notifyOnAdd($bind(this,this.init));
	this.notifyOnRemove($bind(this,this.removeObject));
	if(!armory_trait_internal_UniformsManager.sceneRemoveInitalized) {
		iron_Scene.active.notifyOnRemove(armory_trait_internal_UniformsManager.removeScene);
	}
};
$hxClasses["armory.trait.internal.UniformsManager"] = armory_trait_internal_UniformsManager;
armory_trait_internal_UniformsManager.__name__ = true;
armory_trait_internal_UniformsManager.removeScene = function() {
	armory_trait_internal_UniformsManager.removeObjectFromAllMaps(iron_Scene.active.root);
};
armory_trait_internal_UniformsManager.register = function(type) {
	switch(type) {
	case 0:
		if(!armory_trait_internal_UniformsManager.floatsRegistered) {
			armory_trait_internal_UniformsManager.floatsRegistered = true;
			iron_object_Uniforms.externalFloatLinks.push(armory_trait_internal_UniformsManager.floatLink);
		}
		break;
	case 1:
		if(!armory_trait_internal_UniformsManager.vectorsRegistered) {
			armory_trait_internal_UniformsManager.vectorsRegistered = true;
			iron_object_Uniforms.externalVec3Links.push(armory_trait_internal_UniformsManager.vec3Link);
		}
		break;
	case 2:
		if(!armory_trait_internal_UniformsManager.texturesRegistered) {
			armory_trait_internal_UniformsManager.texturesRegistered = true;
			iron_object_Uniforms.externalTextureLinks.push(armory_trait_internal_UniformsManager.textureLink);
		}
		break;
	}
};
armory_trait_internal_UniformsManager.registerShaderUniforms = function(material) {
	var uniformExist = false;
	if(armory_trait_internal_UniformsManager.floatsMap.h.__keys__[iron_Scene.active.root.__id__] == null) {
		armory_trait_internal_UniformsManager.floatsMap.set(iron_Scene.active.root,null);
	}
	if(armory_trait_internal_UniformsManager.vectorsMap.h.__keys__[iron_Scene.active.root.__id__] == null) {
		armory_trait_internal_UniformsManager.vectorsMap.set(iron_Scene.active.root,null);
	}
	if(armory_trait_internal_UniformsManager.texturesMap.h.__keys__[iron_Scene.active.root.__id__] == null) {
		armory_trait_internal_UniformsManager.texturesMap.set(iron_Scene.active.root,null);
	}
	var _g = 0;
	var _g1 = material.shader.raw.contexts;
	while(_g < _g1.length) {
		var context = _g1[_g];
		++_g;
		var _g2 = 0;
		var _g3 = context.constants;
		while(_g2 < _g3.length) {
			var constant = _g3[_g2];
			++_g2;
			if(constant.is_arm_parameter) {
				uniformExist = true;
				var object = iron_Scene.active.root;
				switch(constant.type) {
				case "float":
					var link = constant.link;
					var value = constant.floatValue;
					armory_trait_internal_UniformsManager.setFloatValue(material,object,link,value);
					armory_trait_internal_UniformsManager.register(0);
					break;
				case "vec3":
					var vec = new iron_math_Vec4();
					vec.x = constant.vec3Value.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					vec.y = constant.vec3Value.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					vec.z = constant.vec3Value.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
					armory_trait_internal_UniformsManager.setVec3Value(material,object,constant.link,vec);
					armory_trait_internal_UniformsManager.register(1);
					break;
				}
			}
		}
		var _g4 = 0;
		var _g5 = context.texture_units;
		while(_g4 < _g5.length) {
			var texture = [_g5[_g4]];
			++_g4;
			if(texture[0].is_arm_parameter) {
				uniformExist = true;
				var object1 = [iron_Scene.active.root];
				if(texture[0].default_image_file == null) {
					armory_trait_internal_UniformsManager.setTextureValue(material,object1[0],texture[0].link,null);
				} else {
					iron_data_Data.getImage(texture[0].default_image_file,(function(object,texture) {
						return function(image) {
							armory_trait_internal_UniformsManager.setTextureValue(material,object[0],texture[0].link,image);
						};
					})(object1,texture));
				}
				armory_trait_internal_UniformsManager.register(2);
			}
		}
	}
	return uniformExist;
};
armory_trait_internal_UniformsManager.setFloatValue = function(material,object,link,value) {
	if(object == null || material == null || link == null) {
		return;
	}
	var map = armory_trait_internal_UniformsManager.floatsMap;
	var matMap = map.h[object.__id__];
	if(matMap == null) {
		matMap = new haxe_ds_ObjectMap();
		map.set(object,matMap);
	}
	var entry = matMap.h[material.__id__];
	if(entry == null) {
		entry = new haxe_ds_StringMap();
		matMap.set(material,entry);
	}
	entry.h[link] = value;
};
armory_trait_internal_UniformsManager.setVec3Value = function(material,object,link,value) {
	if(object == null || material == null || link == null) {
		return;
	}
	var map = armory_trait_internal_UniformsManager.vectorsMap;
	var matMap = map.h[object.__id__];
	if(matMap == null) {
		matMap = new haxe_ds_ObjectMap();
		map.set(object,matMap);
	}
	var entry = matMap.h[material.__id__];
	if(entry == null) {
		entry = new haxe_ds_StringMap();
		matMap.set(material,entry);
	}
	entry.h[link] = value;
};
armory_trait_internal_UniformsManager.setTextureValue = function(material,object,link,value) {
	if(object == null || material == null || link == null) {
		return;
	}
	var map = armory_trait_internal_UniformsManager.texturesMap;
	var matMap = map.h[object.__id__];
	if(matMap == null) {
		matMap = new haxe_ds_ObjectMap();
		map.set(object,matMap);
	}
	var entry = matMap.h[material.__id__];
	if(entry == null) {
		entry = new haxe_ds_StringMap();
		matMap.set(material,entry);
	}
	entry.h[link] = value;
};
armory_trait_internal_UniformsManager.floatLink = function(object,mat,link) {
	if(object == null || mat == null) {
		return null;
	}
	var res = armory_trait_internal_UniformsManager.getObjectFloatLink(object,mat,link);
	if(res == null) {
		res = armory_trait_internal_UniformsManager.getObjectFloatLink(iron_Scene.active.root,mat,link);
	}
	return res;
};
armory_trait_internal_UniformsManager.getObjectFloatLink = function(object,mat,link) {
	var material = armory_trait_internal_UniformsManager.floatsMap.h[object.__id__];
	if(material == null) {
		return null;
	}
	var entry = material.h[mat.__id__];
	if(entry == null) {
		return null;
	}
	return entry.h[link];
};
armory_trait_internal_UniformsManager.vec3Link = function(object,mat,link) {
	if(object == null || mat == null) {
		return null;
	}
	var res = armory_trait_internal_UniformsManager.getObjectVec3Link(object,mat,link);
	if(res == null) {
		res = armory_trait_internal_UniformsManager.getObjectVec3Link(iron_Scene.active.root,mat,link);
	}
	return res;
};
armory_trait_internal_UniformsManager.getObjectVec3Link = function(object,mat,link) {
	var material = armory_trait_internal_UniformsManager.vectorsMap.h[object.__id__];
	if(material == null) {
		return null;
	}
	var entry = material.h[mat.__id__];
	if(entry == null) {
		return null;
	}
	return entry.h[link];
};
armory_trait_internal_UniformsManager.textureLink = function(object,mat,link) {
	if(object == null || mat == null) {
		return null;
	}
	var res = armory_trait_internal_UniformsManager.getObjectTextureLink(object,mat,link);
	if(res == null) {
		res = armory_trait_internal_UniformsManager.getObjectTextureLink(iron_Scene.active.root,mat,link);
	}
	return res;
};
armory_trait_internal_UniformsManager.getObjectTextureLink = function(object,mat,link) {
	var material = armory_trait_internal_UniformsManager.texturesMap.h[object.__id__];
	if(material == null) {
		return null;
	}
	var entry = material.h[mat.__id__];
	if(entry == null) {
		return null;
	}
	return entry.h[link];
};
armory_trait_internal_UniformsManager.getFloatsMap = function() {
	return armory_trait_internal_UniformsManager.floatsMap;
};
armory_trait_internal_UniformsManager.getVectorsMap = function() {
	return armory_trait_internal_UniformsManager.vectorsMap;
};
armory_trait_internal_UniformsManager.getTexturesMap = function() {
	return armory_trait_internal_UniformsManager.texturesMap;
};
armory_trait_internal_UniformsManager.removeObjectFromAllMaps = function(object) {
	armory_trait_internal_UniformsManager.floatsMap.remove(object);
	armory_trait_internal_UniformsManager.vectorsMap.remove(object);
	armory_trait_internal_UniformsManager.texturesMap.remove(object);
};
armory_trait_internal_UniformsManager.removeObjectFromMap = function(object,type) {
	switch(type) {
	case 0:
		armory_trait_internal_UniformsManager.floatsMap.remove(object);
		break;
	case 1:
		armory_trait_internal_UniformsManager.vectorsMap.remove(object);
		break;
	case 2:
		armory_trait_internal_UniformsManager.texturesMap.remove(object);
		break;
	}
};
armory_trait_internal_UniformsManager.removeFloatValue = function(object,mat,link) {
	var material = armory_trait_internal_UniformsManager.floatsMap.h[object.__id__];
	if(material == null) {
		return;
	}
	var entry = material.h[mat.__id__];
	if(entry == null) {
		return;
	}
	if(Object.prototype.hasOwnProperty.call(entry.h,link)) {
		delete(entry.h[link]);
	}
	var h = entry.h;
	var inlStringMapKeyIterator_h = h;
	var inlStringMapKeyIterator_keys = Object.keys(h);
	var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
	var inlStringMapKeyIterator_current = 0;
	if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
		material.remove(mat);
	}
	if(!material.keys().hasNext()) {
		armory_trait_internal_UniformsManager.floatsMap.remove(object);
	}
};
armory_trait_internal_UniformsManager.removeVectorValue = function(object,mat,link) {
	var material = armory_trait_internal_UniformsManager.vectorsMap.h[object.__id__];
	if(material == null) {
		return;
	}
	var entry = material.h[mat.__id__];
	if(entry == null) {
		return;
	}
	if(Object.prototype.hasOwnProperty.call(entry.h,link)) {
		delete(entry.h[link]);
	}
	var h = entry.h;
	var inlStringMapKeyIterator_h = h;
	var inlStringMapKeyIterator_keys = Object.keys(h);
	var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
	var inlStringMapKeyIterator_current = 0;
	if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
		material.remove(mat);
	}
	if(!material.keys().hasNext()) {
		armory_trait_internal_UniformsManager.vectorsMap.remove(object);
	}
};
armory_trait_internal_UniformsManager.removeTextureValue = function(object,mat,link) {
	var material = armory_trait_internal_UniformsManager.texturesMap.h[object.__id__];
	if(material == null) {
		return;
	}
	var entry = material.h[mat.__id__];
	if(entry == null) {
		return;
	}
	if(Object.prototype.hasOwnProperty.call(entry.h,link)) {
		delete(entry.h[link]);
	}
	var h = entry.h;
	var inlStringMapKeyIterator_h = h;
	var inlStringMapKeyIterator_keys = Object.keys(h);
	var inlStringMapKeyIterator_length = inlStringMapKeyIterator_keys.length;
	var inlStringMapKeyIterator_current = 0;
	if(inlStringMapKeyIterator_current >= inlStringMapKeyIterator_length) {
		material.remove(mat);
	}
	if(!material.keys().hasNext()) {
		armory_trait_internal_UniformsManager.texturesMap.remove(object);
	}
};
armory_trait_internal_UniformsManager.__super__ = iron_Trait;
armory_trait_internal_UniformsManager.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		if(((this.object) instanceof iron_object_MeshObject)) {
			var materials = (js_Boot.__cast(this.object , iron_object_MeshObject)).materials;
			var _g = 0;
			while(_g < materials.length) {
				var material = materials[_g];
				++_g;
				var exists = armory_trait_internal_UniformsManager.registerShaderUniforms(material);
				if(exists) {
					this.uniformExists = true;
				}
			}
		}
	}
	,removeObject: function() {
		armory_trait_internal_UniformsManager.removeObjectFromAllMaps(this.object);
	}
	,__class__: armory_trait_internal_UniformsManager
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = true;
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = this.buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = true;
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var _this = edecl.__constructs__;
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = _this[i]._hx_name;
			}
			var tag = result[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = true;
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = true;
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	__class__: haxe_ds_StringMap
};
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = true;
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Input.hx", lineNumber : 53, className : "haxe.io.Input", methodName : "readByte"});
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readFloat: function() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	,readInt8: function() {
		var n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = true;
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: $extend(haxe_io_Input.prototype.__properties__,{set_position:"set_position"})
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = true;
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Output.hx", lineNumber : 47, className : "haxe.io.Output", methodName : "writeByte"});
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = true;
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.i32ToFloat = function(i) {
	haxe_io_FPHelper.helper.setInt32(0,i,true);
	return haxe_io_FPHelper.helper.getFloat32(0,true);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
var haxe_io_Float32Array = {};
haxe_io_Float32Array.fromArray = function(a,pos,length) {
	if(pos == null) {
		pos = 0;
	}
	if(length == null) {
		length = a.length - pos;
	}
	if(pos < 0 || length < 0 || pos + length > a.length) {
		throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
	}
	if(pos == 0 && length == a.length) {
		return new Float32Array(a);
	}
	var this1 = new Float32Array(a.length);
	var i = this1;
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var idx = _g++;
		i[idx] = a[idx + pos];
	}
	return i;
};
var haxe_io_UInt8Array = {};
haxe_io_UInt8Array.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var iron_App = function(done) {
	done();
	kha_System.notifyOnFrames(iron_App.render);
	kha_Scheduler.addTimeTask(iron_App.update,0,iron_system_Time.get_delta());
};
$hxClasses["iron.App"] = iron_App;
iron_App.__name__ = true;
iron_App.w = function() {
	return kha_System.windowWidth();
};
iron_App.h = function() {
	return kha_System.windowHeight();
};
iron_App.x = function() {
	return 0;
};
iron_App.y = function() {
	return 0;
};
iron_App.init = function(done) {
	new iron_App(done);
};
iron_App.update = function() {
	if(iron_Scene.active == null || !iron_Scene.active.ready) {
		return;
	}
	if(iron_App.pauseUpdates) {
		return;
	}
	iron_Scene.active.updateFrame();
	var i = 0;
	var l = iron_App.traitUpdates.length;
	while(i < l) {
		if(iron_App.traitInits.length > 0) {
			var _g = 0;
			var _g1 = iron_App.traitInits;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if(iron_App.traitInits.length > 0) {
					f();
				} else {
					break;
				}
			}
			iron_App.traitInits.splice(0,iron_App.traitInits.length);
		}
		iron_App.traitUpdates[i]();
		if(l <= iron_App.traitUpdates.length) {
			++i;
		} else {
			l = iron_App.traitUpdates.length;
		}
	}
	i = 0;
	l = iron_App.traitLateUpdates.length;
	while(i < l) {
		iron_App.traitLateUpdates[i]();
		if(l <= iron_App.traitLateUpdates.length) {
			++i;
		} else {
			l = iron_App.traitLateUpdates.length;
		}
	}
	if(iron_App.onEndFrames != null) {
		var _g = 0;
		var _g1 = iron_App.onEndFrames;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
	}
	if(iron_App.lastw == -1) {
		iron_App.lastw = iron_App.w();
		iron_App.lasth = iron_App.h();
	}
	if(iron_App.lastw != iron_App.w() || iron_App.lasth != iron_App.h()) {
		if(iron_App.onResize != null) {
			iron_App.onResize();
		} else if(iron_Scene.active != null && iron_Scene.active.camera != null) {
			iron_Scene.active.camera.buildProjection();
		}
	}
	iron_App.lastw = iron_App.w();
	iron_App.lasth = iron_App.h();
};
iron_App.render = function(frames) {
	var frame = frames[0];
	iron_App.framebuffer = frame;
	iron_system_Time.update();
	if(iron_Scene.active == null || !iron_Scene.active.ready) {
		iron_App.render2D(frame);
		return;
	}
	if(iron_App.traitInits.length > 0) {
		var _g = 0;
		var _g1 = iron_App.traitInits;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitInits.length > 0) {
				f();
			} else {
				break;
			}
		}
		iron_App.traitInits.splice(0,iron_App.traitInits.length);
	}
	iron_Scene.active.renderFrame(frame.get_g4());
	var _g = 0;
	var _g1 = iron_App.traitRenders;
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		if(iron_App.traitRenders.length > 0) {
			f(frame.get_g4());
		} else {
			break;
		}
	}
	iron_App.render2D(frame);
};
iron_App.render2D = function(frame) {
	if(iron_App.traitRenders2D.length > 0) {
		frame.get_g2().begin(false);
		var _g = 0;
		var _g1 = iron_App.traitRenders2D;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitRenders2D.length > 0) {
				f(frame.get_g2());
			} else {
				break;
			}
		}
		frame.get_g2().end();
	}
};
iron_App.notifyOnInit = function(f) {
	iron_App.traitInits.push(f);
};
iron_App.removeInit = function(f) {
	HxOverrides.remove(iron_App.traitInits,f);
};
iron_App.notifyOnUpdate = function(f) {
	iron_App.traitUpdates.push(f);
};
iron_App.removeUpdate = function(f) {
	HxOverrides.remove(iron_App.traitUpdates,f);
};
iron_App.removeLateUpdate = function(f) {
	HxOverrides.remove(iron_App.traitLateUpdates,f);
};
iron_App.removeRender = function(f) {
	HxOverrides.remove(iron_App.traitRenders,f);
};
iron_App.notifyOnRender2D = function(f) {
	iron_App.traitRenders2D.push(f);
};
iron_App.removeRender2D = function(f) {
	HxOverrides.remove(iron_App.traitRenders2D,f);
};
iron_App.notifyOnReset = function(f) {
	if(iron_App.onResets == null) {
		iron_App.onResets = [];
	}
	iron_App.onResets.push(f);
};
iron_App.notifyOnEndFrame = function(f) {
	if(iron_App.onEndFrames == null) {
		iron_App.onEndFrames = [];
	}
	iron_App.onEndFrames.push(f);
};
iron_App.prototype = {
	__class__: iron_App
};
var iron_RenderPath = function() {
	this.depthBuffers = [];
	this.cachedShaderContexts = new haxe_ds_StringMap();
	this.loading = 0;
	this.lastFrameTime = 0.0;
	this.viewportScaled = false;
	this.scissorSet = false;
	this.lastH = 0;
	this.lastW = 0;
	this.depthToRenderTarget = new haxe_ds_StringMap();
	this.renderTargets = new haxe_ds_StringMap();
	this.setupDepthTexture = null;
	this.commands = null;
	this.paused = false;
	this.drawOrder = 0;
	this.currentG = null;
	this.isProbe = false;
	this.isProbeCube = false;
	this.isProbePlanar = false;
	this.point = null;
	this.sun = null;
	this.light = null;
	this.currentTarget = null;
	this.frame = 0;
	this.frameTime = 0.0;
	this.frameScissorH = 0;
	this.frameScissorW = 0;
	this.frameScissorY = 0;
	this.frameScissorX = 0;
	this.frameScissor = false;
};
$hxClasses["iron.RenderPath"] = iron_RenderPath;
iron_RenderPath.__name__ = true;
iron_RenderPath.setActive = function(renderPath) {
	iron_RenderPath.active = renderPath;
};
iron_RenderPath.sortMeshesDistance = function(meshes) {
	meshes.sort(function(a,b) {
		if(a.cameraDistance >= b.cameraDistance) {
			return 1;
		} else {
			return -1;
		}
	});
};
iron_RenderPath.sortMeshesShader = function(meshes) {
	meshes.sort(function(a,b) {
		if(a.materials[0].name >= b.materials[0].name) {
			return 1;
		} else {
			return -1;
		}
	});
};
iron_RenderPath.prototype = {
	get_ready: function() {
		return this.loading == 0;
	}
	,renderFrame: function(g) {
		if(!this.get_ready() || this.paused || iron_App.w() == 0 || iron_App.h() == 0) {
			return;
		}
		if(this.lastW > 0 && (this.lastW != iron_App.w() || this.lastH != iron_App.h())) {
			this.resize();
		}
		this.lastW = iron_App.w();
		this.lastH = iron_App.h();
		this.frameTime = kha_Scheduler.time() - this.lastFrameTime;
		this.lastFrameTime = kha_Scheduler.time();
		var cam = iron_Scene.active.camera;
		this.isProbePlanar = cam != null && cam.renderTarget != null;
		this.isProbeCube = cam != null && cam.renderTargetCube != null;
		this.isProbe = this.isProbePlanar || this.isProbeCube;
		if(this.isProbePlanar) {
			this.frameG = cam.renderTarget.get_g4();
		} else if(this.isProbeCube) {
			this.frameG = cam.renderTargetCube.get_g4();
		} else {
			this.frameG = g;
		}
		this.currentW = iron_App.w();
		this.currentH = iron_App.h();
		this.currentD = 1;
		this.currentFace = -1;
		this.meshesSorted = false;
		var _g = 0;
		var _g1 = iron_Scene.active.lights;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(l.visible) {
				l.buildMatrix(iron_Scene.active.camera);
			}
			if(l.data.raw.type == "sun") {
				this.sun = l;
			} else {
				this.point = l;
			}
		}
		this.light = iron_Scene.active.lights[0];
		this.commands();
		if(!this.isProbe) {
			this.frame++;
		}
	}
	,setTarget: function(target,additional,viewportScale) {
		if(viewportScale == null) {
			viewportScale = 1.0;
		}
		if(target == "") {
			this.currentD = 1;
			this.currentTarget = null;
			this.currentFace = -1;
			if(this.isProbeCube) {
				this.currentW = iron_Scene.active.camera.renderTargetCube.get_width();
				this.currentH = iron_Scene.active.camera.renderTargetCube.get_height();
				var g = this.frameG;
				var additionalRenderTargets = null;
				var face = iron_Scene.active.camera.currentFace;
				if(face == null) {
					face = -1;
				}
				if(this.currentG != null) {
					if(this.scissorSet) {
						this.currentG.disableScissor();
						this.scissorSet = false;
					}
					this.currentG.end();
					this.currentG = null;
					this.bindParams = null;
				}
				this.currentG = g;
				this.additionalTargets = additionalRenderTargets;
				if(face >= 0) {
					g.beginFace(face);
				} else {
					g.begin(additionalRenderTargets);
				}
			} else {
				this.currentW = iron_App.w();
				this.currentH = iron_App.h();
				if(this.frameScissor) {
					this.setFrameScissor();
				}
				var g = this.frameG;
				var additionalRenderTargets = null;
				if(this.currentG != null) {
					if(this.scissorSet) {
						this.currentG.disableScissor();
						this.scissorSet = false;
					}
					this.currentG.end();
					this.currentG = null;
					this.bindParams = null;
				}
				this.currentG = g;
				this.additionalTargets = additionalRenderTargets;
				g.begin(additionalRenderTargets);
				if(!this.isProbe) {
					this.setCurrentViewport(iron_App.w(),iron_App.h());
					this.setCurrentScissor(iron_App.w(),iron_App.h());
				}
			}
		} else {
			var rt = this.renderTargets.h[target];
			this.currentTarget = rt;
			var additionalImages = null;
			if(additional != null) {
				additionalImages = [];
				var _g = 0;
				while(_g < additional.length) {
					var s = additional[_g];
					++_g;
					var t = this.renderTargets.h[s];
					additionalImages.push(t.image);
				}
			}
			var targetG = rt.isCubeMap ? rt.cubeMap.get_g4() : rt.image.get_g4();
			this.currentW = rt.isCubeMap ? rt.cubeMap.get_width() : rt.image.get_width();
			this.currentH = rt.isCubeMap ? rt.cubeMap.get_height() : rt.image.get_height();
			if(rt.is3D) {
				this.currentD = rt.image.get_depth();
			}
			var face = this.currentFace;
			if(face == null) {
				face = -1;
			}
			if(this.currentG != null) {
				if(this.scissorSet) {
					this.currentG.disableScissor();
					this.scissorSet = false;
				}
				this.currentG.end();
				this.currentG = null;
				this.bindParams = null;
			}
			this.currentG = targetG;
			this.additionalTargets = additionalImages;
			if(face >= 0) {
				targetG.beginFace(face);
			} else {
				targetG.begin(additionalImages);
			}
		}
		if(viewportScale != 1.0) {
			this.viewportScaled = true;
			var viewW = this.currentW * viewportScale | 0;
			var viewH = this.currentH * viewportScale | 0;
			this.currentG.viewport(0,viewH,viewW,viewH);
			this.currentG.scissor(0,viewH,viewW,viewH);
		} else if(this.viewportScaled) {
			this.viewportScaled = false;
			this.setCurrentViewport(this.currentW,this.currentH);
			this.setCurrentScissor(this.currentW,this.currentH);
		}
		this.bindParams = null;
	}
	,setDepthFrom: function(target,from) {
		var rt = this.renderTargets.h[target];
		rt.image.setDepthStencilFrom(this.renderTargets.h[from].image);
	}
	,setCurrentViewport: function(viewW,viewH) {
		this.currentG.viewport(iron_App.x(),this.currentH - (viewH - iron_App.y()),viewW,viewH);
	}
	,setCurrentScissor: function(viewW,viewH) {
		this.currentG.scissor(iron_App.x(),this.currentH - (viewH - iron_App.y()),viewW,viewH);
		this.scissorSet = true;
	}
	,setFrameScissor: function() {
		this.frameG.scissor(this.frameScissorX,this.currentH - (this.frameScissorH - this.frameScissorY),this.frameScissorW,this.frameScissorH);
	}
	,clearTarget: function(colorFlag,depthFlag) {
		if(colorFlag == -1) {
			if(iron_Scene.active.world != null) {
				colorFlag = iron_Scene.active.world.raw.background_color;
			} else if(iron_Scene.active.camera != null) {
				var cc = iron_Scene.active.camera.data.raw.clear_color;
				if(cc != null) {
					colorFlag = kha_Color.fromFloats(cc.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),cc.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),cc.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN));
				}
			}
		}
		this.currentG.clear(colorFlag,depthFlag,null);
	}
	,drawMeshes: function(context) {
		var isShadows = context == "shadowmap";
		if(isShadows) {
			if(this.light == null || !this.light.data.raw.cast_shadow || !this.light.visible || this.light.data.raw.strength == 0) {
				return;
			}
		}
		if(this.currentFace >= 0 && this.light != null) {
			this.light.setCubeFace(this.currentFace,iron_Scene.active.camera);
		}
		var drawn = false;
		if(isShadows && this.light.data.raw.type == "sun") {
			var step = this.currentH;
			var _g = 0;
			var _g1 = iron_object_LightObject.cascadeCount;
			while(_g < _g1) {
				var i = _g++;
				this.light.setCascade(iron_Scene.active.camera,i);
				this.currentG.viewport(i * step,0,step,step);
				this.submitDraw(context);
			}
			drawn = true;
		}
		if(!drawn) {
			this.submitDraw(context);
		}
		if(this.scissorSet) {
			this.currentG.disableScissor();
			this.scissorSet = false;
		}
		this.currentG.end();
		this.currentG = null;
		this.bindParams = null;
	}
	,submitDraw: function(context) {
		var camera = iron_Scene.active.camera;
		var meshes = iron_Scene.active.meshes;
		iron_object_MeshObject.lastPipeline = null;
		if(!this.meshesSorted && camera != null) {
			var camX = camera.transform.world.self._30;
			var camY = camera.transform.world.self._31;
			var camZ = camera.transform.world.self._32;
			var _g = 0;
			while(_g < meshes.length) {
				var mesh = meshes[_g];
				++_g;
				var vx = camX - mesh.transform.world.self._30;
				var vy = camY - mesh.transform.world.self._31;
				var vz = camZ - mesh.transform.world.self._32;
				mesh.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
			}
			if(this.drawOrder == 1) {
				iron_RenderPath.sortMeshesShader(meshes);
			} else {
				iron_RenderPath.sortMeshesDistance(meshes);
			}
			this.meshesSorted = true;
		}
		var g = this.currentG;
		var _bindParams = this.bindParams;
		var _g = 0;
		while(_g < meshes.length) {
			var m = meshes[_g];
			++_g;
			m.render(g,context,_bindParams);
		}
	}
	,drawSkydome: function(handle) {
		if(iron_data_ConstData.skydomeVB == null) {
			iron_data_ConstData.createSkydomeData();
		}
		var cc = this.cachedShaderContexts.h[handle];
		if(cc.context == null) {
			return;
		}
		this.currentG.setPipeline(cc.context.pipeState);
		iron_object_Uniforms.setContextConstants(this.currentG,cc.context,this.bindParams);
		iron_object_Uniforms.setObjectConstants(this.currentG,cc.context,null);
		this.currentG.setVertexBuffer(iron_data_ConstData.skydomeVB);
		this.currentG.setIndexBuffer(iron_data_ConstData.skydomeIB);
		this.currentG.drawIndexedVertices();
		if(this.scissorSet) {
			this.currentG.disableScissor();
			this.scissorSet = false;
		}
		this.currentG.end();
		this.currentG = null;
		this.bindParams = null;
	}
	,bindTarget: function(target,uniform) {
		if(this.bindParams != null) {
			this.bindParams.push(target);
			this.bindParams.push(uniform);
		} else {
			this.bindParams = [target,uniform];
		}
	}
	,drawShader: function(handle) {
		var cc = this.cachedShaderContexts.h[handle];
		if(iron_data_ConstData.screenAlignedVB == null) {
			iron_data_ConstData.createScreenAlignedData();
		}
		this.currentG.setPipeline(cc.context.pipeState);
		iron_object_Uniforms.setContextConstants(this.currentG,cc.context,this.bindParams);
		iron_object_Uniforms.setObjectConstants(this.currentG,cc.context,null);
		this.currentG.setVertexBuffer(iron_data_ConstData.screenAlignedVB);
		this.currentG.setIndexBuffer(iron_data_ConstData.screenAlignedIB);
		this.currentG.drawIndexedVertices();
		if(this.scissorSet) {
			this.currentG.disableScissor();
			this.scissorSet = false;
		}
		this.currentG.end();
		this.currentG = null;
		this.bindParams = null;
	}
	,loadShader: function(handle) {
		var _gthis = this;
		this.loading++;
		var cc = this.cachedShaderContexts.h[handle];
		if(cc != null) {
			this.loading--;
			return;
		}
		cc = new iron_CachedShaderContext();
		this.cachedShaderContexts.h[handle] = cc;
		var shaderPath = handle.split("/");
		iron_data_Data.getShader(shaderPath[0],shaderPath[1],function(res) {
			cc.context = res.getContext(shaderPath[2]);
			_gthis.loading--;
		});
	}
	,unloadShader: function(handle) {
		var _this = this.cachedShaderContexts;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
		var shaderPath = handle.split("/");
		var _this = iron_data_Data.cachedShaders;
		var key = shaderPath[1];
		if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
			delete(_this.h[key]);
		}
	}
	,resize: function() {
		if(kha_System.windowWidth() == 0 || kha_System.windowHeight() == 0) {
			return;
		}
		var h = this.renderTargets.h;
		var rt_h = h;
		var rt_keys = Object.keys(h);
		var rt_length = rt_keys.length;
		var rt_current = 0;
		while(rt_current < rt_length) {
			var rt = rt_h[rt_keys[rt_current++]];
			if(rt == null || rt.raw.width > 0 || rt.depthStencilFrom == "" || rt == this.depthToRenderTarget.h[rt.depthStencilFrom]) {
				continue;
			}
			var nodepth = null;
			var h = this.renderTargets.h;
			var rt2_h = h;
			var rt2_keys = Object.keys(h);
			var rt2_length = rt2_keys.length;
			var rt2_current = 0;
			while(rt2_current < rt2_length) {
				var rt2 = rt2_h[rt2_keys[rt2_current++]];
				if(rt2 == null || rt2.raw.width > 0 || rt2.depthStencilFrom != "" || this.depthToRenderTarget.h[rt2.raw.depth_buffer] != null) {
					continue;
				}
				nodepth = rt2;
				break;
			}
			if(nodepth != null) {
				rt.image.setDepthStencilFrom(nodepth.image);
			}
		}
		var h = this.renderTargets.h;
		var rt_h = h;
		var rt_keys = Object.keys(h);
		var rt_length = rt_keys.length;
		var rt_current = 0;
		while(rt_current < rt_length) {
			var rt = rt_h[rt_keys[rt_current++]];
			if(rt != null && rt.raw.width == 0) {
				iron_App.notifyOnInit(($_=rt.image,$bind($_,$_.unload)));
				rt.image = this.createImage(rt.raw,rt.depthStencil);
			}
		}
		var h = this.renderTargets.h;
		var rt_h = h;
		var rt_keys = Object.keys(h);
		var rt_length = rt_keys.length;
		var rt_current = 0;
		while(rt_current < rt_length) {
			var rt = rt_h[rt_keys[rt_current++]];
			if(rt != null && rt.depthStencilFrom != "") {
				rt.image.setDepthStencilFrom(this.depthToRenderTarget.h[rt.depthStencilFrom].image);
			}
		}
	}
	,createRenderTarget: function(t) {
		var rt = this.createTarget(t);
		this.renderTargets.h[t.name] = rt;
		return rt;
	}
	,createDepthBuffer: function(name,format) {
		this.depthBuffers.push({ name : name, format : format});
	}
	,createTarget: function(t) {
		var rt = new iron_RenderTarget(t);
		if(t.depth_buffer != null) {
			rt.hasDepth = true;
			var depthTarget = this.depthToRenderTarget.h[t.depth_buffer];
			if(depthTarget == null) {
				var _g = 0;
				var _g1 = this.depthBuffers;
				while(_g < _g1.length) {
					var db = _g1[_g];
					++_g;
					if(db.name == t.depth_buffer) {
						this.depthToRenderTarget.h[db.name] = rt;
						var s = db.format;
						var tmp;
						if(s == null || s == "") {
							tmp = 1;
						} else {
							switch(s) {
							case "DEPTH16":
								tmp = 5;
								break;
							case "DEPTH24":
								tmp = 1;
								break;
							default:
								tmp = 1;
							}
						}
						rt.depthStencil = tmp;
						rt.image = this.createImage(t,rt.depthStencil);
						break;
					}
				}
			} else {
				rt.depthStencil = 0;
				rt.depthStencilFrom = t.depth_buffer;
				rt.image = this.createImage(t,rt.depthStencil);
				rt.image.setDepthStencilFrom(depthTarget.image);
			}
		} else {
			rt.hasDepth = false;
			if(t.depth != null && t.depth > 1) {
				rt.is3D = true;
			}
			if(t.is_cubemap) {
				rt.isCubeMap = true;
				rt.depthStencil = 0;
				rt.cubeMap = this.createCubeMap(t,rt.depthStencil);
			} else {
				rt.depthStencil = 0;
				rt.image = this.createImage(t,rt.depthStencil);
			}
		}
		return rt;
	}
	,createImage: function(t,depthStencil) {
		var width = t.width == 0 ? iron_App.w() : t.width;
		var height = t.height == 0 ? iron_App.h() : t.height;
		var depth = t.depth != null ? t.depth : 0;
		if(t.displayp != null) {
			if(width > height) {
				width = width * (t.displayp / height) | 0;
				height = t.displayp;
			} else {
				height = height * (t.displayp / width) | 0;
				width = t.displayp;
			}
		}
		if(t.scale != null) {
			width = width * t.scale | 0;
			height = height * t.scale | 0;
			depth = depth * t.scale | 0;
		}
		if(width < 1) {
			width = 1;
		}
		if(height < 1) {
			height = 1;
		}
		if(t.depth != null && t.depth > 1) {
			var img;
			if(t.format != null) {
				switch(t.format) {
				case "DEPTH16":
					img = 3;
					break;
				case "R16":
					img = 6;
					break;
				case "R32":
					img = 5;
					break;
				case "R8":
					img = 1;
					break;
				case "RGBA128":
					img = 2;
					break;
				case "RGBA32":
					img = 0;
					break;
				case "RGBA64":
					img = 4;
					break;
				default:
					img = 0;
				}
			} else {
				img = 0;
			}
			var img1 = kha_Image.create3D(width,height,depth,img);
			if(t.mipmaps) {
				img1.generateMipmaps(1000);
			}
			return img1;
		} else if(t.is_image != null && t.is_image) {
			var tmp;
			if(t.format != null) {
				switch(t.format) {
				case "DEPTH16":
					tmp = 3;
					break;
				case "R16":
					tmp = 6;
					break;
				case "R32":
					tmp = 5;
					break;
				case "R8":
					tmp = 1;
					break;
				case "RGBA128":
					tmp = 2;
					break;
				case "RGBA32":
					tmp = 0;
					break;
				case "RGBA64":
					tmp = 4;
					break;
				default:
					tmp = 0;
				}
			} else {
				tmp = 0;
			}
			return kha_Image.create(width,height,tmp);
		} else {
			var tmp;
			if(t.format != null) {
				switch(t.format) {
				case "DEPTH16":
					tmp = 3;
					break;
				case "R16":
					tmp = 6;
					break;
				case "R32":
					tmp = 5;
					break;
				case "R8":
					tmp = 1;
					break;
				case "RGBA128":
					tmp = 2;
					break;
				case "RGBA32":
					tmp = 0;
					break;
				case "RGBA64":
					tmp = 4;
					break;
				default:
					tmp = 0;
				}
			} else {
				tmp = 0;
			}
			return kha_Image.createRenderTarget(width,height,tmp,depthStencil);
		}
	}
	,createCubeMap: function(t,depthStencil) {
		var tmp;
		if(t.format != null) {
			switch(t.format) {
			case "DEPTH16":
				tmp = 3;
				break;
			case "R16":
				tmp = 6;
				break;
			case "R32":
				tmp = 5;
				break;
			case "R8":
				tmp = 1;
				break;
			case "RGBA128":
				tmp = 2;
				break;
			case "RGBA32":
				tmp = 0;
				break;
			case "RGBA64":
				tmp = 4;
				break;
			default:
				tmp = 0;
			}
		} else {
			tmp = 0;
		}
		return kha_graphics4_CubeMap.createRenderTarget(t.width,tmp,depthStencil);
	}
	,__class__: iron_RenderPath
	,__properties__: {get_ready:"get_ready"}
};
var iron_RenderTargetRaw = function() {
	this.is_cubemap = null;
	this.is_image = null;
	this.depth = null;
	this.mipmaps = null;
	this.depth_buffer = null;
	this.displayp = null;
	this.scale = null;
	this.format = null;
};
$hxClasses["iron.RenderTargetRaw"] = iron_RenderTargetRaw;
iron_RenderTargetRaw.__name__ = true;
iron_RenderTargetRaw.prototype = {
	__class__: iron_RenderTargetRaw
};
var iron_RenderTarget = function(raw) {
	this.isCubeMap = false;
	this.is3D = false;
	this.hasDepth = false;
	this.cubeMap = null;
	this.image = null;
	this.depthStencilFrom = "";
	this.raw = raw;
};
$hxClasses["iron.RenderTarget"] = iron_RenderTarget;
iron_RenderTarget.__name__ = true;
iron_RenderTarget.prototype = {
	__class__: iron_RenderTarget
};
var iron_CachedShaderContext = function() {
};
$hxClasses["iron.CachedShaderContext"] = iron_CachedShaderContext;
iron_CachedShaderContext.__name__ = true;
iron_CachedShaderContext.prototype = {
	__class__: iron_CachedShaderContext
};
var iron_Scene = function() {
	this.traitRemoves = [];
	this.traitInits = [];
	this.groups = null;
	this.uid = iron_Scene.uidCounter++;
	this.meshes = [];
	this.lights = [];
	this.cameras = [];
	this.speakers = [];
	this.empties = [];
	this.animations = [];
	this.tilesheets = [];
	this.armatures = [];
	this.embedded = new haxe_ds_StringMap();
	this.root = new iron_object_Object();
	this.root.name = "Root";
	this.traitInits = [];
	this.traitRemoves = [];
	this.initializing = true;
	if(iron_Scene.global == null) {
		iron_Scene.global = new iron_object_Object();
	}
};
$hxClasses["iron.Scene"] = iron_Scene;
iron_Scene.__name__ = true;
iron_Scene.create = function(format,done) {
	iron_Scene.active = new iron_Scene();
	iron_Scene.active.ready = false;
	iron_Scene.active.raw = format;
	iron_data_Data.getWorld(format.name,format.world_ref,function(world) {
		iron_Scene.active.world = world;
		iron_Scene.active.addScene(format.name,null,function(sceneObject) {
			var _g = 0;
			var _g1 = sceneObject.getChildren(true);
			while(_g < _g1.length) {
				var object = _g1[_g];
				++_g;
				iron_Scene.createTraits(object.raw.traits,object);
			}
			if(iron_Scene.active.cameras.length == 0) {
				haxe_Log.trace("No camera found for scene \"" + format.name + "\"",{ fileName : "Sources/iron/Scene.hx", lineNumber : 138, className : "iron.Scene", methodName : "create"});
			}
			iron_Scene.active.camera = iron_Scene.active.getCamera(format.camera_ref);
			iron_Scene.active.sceneParent = sceneObject;
			iron_Scene.active.ready = true;
			var _g = 0;
			var _g1 = iron_Scene.active.traitInits;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			iron_Scene.active.traitInits = [];
			iron_Scene.active.initializing = false;
			done(sceneObject);
		});
	});
};
iron_Scene.setActive = function(sceneName,done) {
	if(!iron_Scene.framePassed) {
		return;
	}
	iron_Scene.framePassed = false;
	var removeWorldShader = null;
	if(iron_Scene.active != null) {
		if(iron_Scene.active.raw.world_ref != null) {
			removeWorldShader = "shader_datas/World_" + iron_Scene.active.raw.world_ref + "/World_" + iron_Scene.active.raw.world_ref;
		}
		iron_Scene.active.remove();
	}
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		iron_Scene.create(format,function(o) {
			if(done != null) {
				done(o);
			}
			if(removeWorldShader != null) {
				iron_RenderPath.active.unloadShader(removeWorldShader);
			}
			if(format.world_ref != null) {
				iron_RenderPath.active.loadShader("shader_datas/World_" + format.world_ref + "/World_" + format.world_ref);
			}
		});
	});
};
iron_Scene.getRawObjectByName = function(format,name) {
	return iron_Scene.traverseObjs(format.objects,name);
};
iron_Scene.traverseObjs = function(children,name) {
	var _g = 0;
	while(_g < children.length) {
		var o = children[_g];
		++_g;
		if(o.name == name) {
			return o;
		}
		if(o.children != null) {
			var res = iron_Scene.traverseObjs(o.children,name);
			if(res != null) {
				return res;
			}
		}
	}
	return null;
};
iron_Scene.generateTransform = function(object,transform) {
	var tmp;
	if(object.transform != null) {
		var a = object.transform.values;
		tmp = new iron_math_Mat4(a.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN));
	} else {
		tmp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	}
	transform.world = tmp;
	var _this = transform.world;
	var loc = transform.loc;
	var quat = transform.rot;
	var scale = transform.scale;
	loc.x = _this.self._30;
	loc.y = _this.self._31;
	loc.z = _this.self._32;
	var _this1 = iron_math_Mat4.helpVec;
	_this1.x = _this.self._00;
	_this1.y = _this.self._01;
	_this1.z = _this.self._02;
	_this1.w = 1.0;
	var _this2 = _this1;
	scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
	var _this1 = iron_math_Mat4.helpVec;
	_this1.x = _this.self._10;
	_this1.y = _this.self._11;
	_this1.z = _this.self._12;
	_this1.w = 1.0;
	var _this2 = _this1;
	scale.y = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
	var _this1 = iron_math_Mat4.helpVec;
	_this1.x = _this.self._20;
	_this1.y = _this.self._21;
	_this1.z = _this.self._22;
	_this1.w = 1.0;
	var _this2 = _this1;
	scale.z = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
	var _this1 = _this.self;
	var m3 = _this1._12;
	var m4 = _this1._22;
	var m5 = _this1._32;
	var m6 = _this1._13;
	var m7 = _this1._23;
	var m8 = _this1._33;
	var c00 = _this1._11 * (m4 * m8 - m5 * m7) - _this1._21 * (m3 * m8 - m5 * m6) + _this1._31 * (m3 * m7 - m4 * m6);
	var m3 = _this1._12;
	var m4 = _this1._22;
	var m5 = _this1._32;
	var m6 = _this1._13;
	var m7 = _this1._23;
	var m8 = _this1._33;
	var c01 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
	var m3 = _this1._11;
	var m4 = _this1._21;
	var m5 = _this1._31;
	var m6 = _this1._13;
	var m7 = _this1._23;
	var m8 = _this1._33;
	var c02 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
	var m3 = _this1._11;
	var m4 = _this1._21;
	var m5 = _this1._31;
	var m6 = _this1._12;
	var m7 = _this1._22;
	var m8 = _this1._32;
	var c03 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
	if(_this1._00 * c00 - _this1._01 * c01 + _this1._02 * c02 - _this1._03 * c03 < 0.0) {
		scale.x = -scale.x;
	}
	var invs = 1.0 / scale.x;
	iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
	iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
	iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
	invs = 1.0 / scale.y;
	iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
	iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
	iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
	invs = 1.0 / scale.z;
	iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
	iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
	iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
	var m = iron_math_Mat4.helpMat;
	var m11 = m.self._00;
	var m12 = m.self._10;
	var m13 = m.self._20;
	var m21 = m.self._01;
	var m22 = m.self._11;
	var m23 = m.self._21;
	var m31 = m.self._02;
	var m32 = m.self._12;
	var m33 = m.self._22;
	var tr = m11 + m22 + m33;
	var s = 0.0;
	if(tr > 0) {
		s = 0.5 / Math.sqrt(tr + 1.0);
		quat.w = 0.25 / s;
		quat.x = (m32 - m23) * s;
		quat.y = (m13 - m31) * s;
		quat.z = (m21 - m12) * s;
	} else if(m11 > m22 && m11 > m33) {
		s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
		quat.w = (m32 - m23) / s;
		quat.x = 0.25 * s;
		quat.y = (m12 + m21) / s;
		quat.z = (m13 + m31) / s;
	} else if(m22 > m33) {
		s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
		quat.w = (m13 - m31) / s;
		quat.x = (m12 + m21) / s;
		quat.y = 0.25 * s;
		quat.z = (m23 + m32) / s;
	} else {
		s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
		quat.w = (m21 - m12) / s;
		quat.x = (m13 + m31) / s;
		quat.y = (m23 + m32) / s;
		quat.z = 0.25 * s;
	}
	if(object.local_only != null) {
		transform.localOnly = object.local_only;
	}
	if(transform.object.parent != null) {
		transform.update();
	}
};
iron_Scene.createTraits = function(traits,object) {
	if(traits == null) {
		return;
	}
	var _g = 0;
	while(_g < traits.length) {
		var t = traits[_g];
		++_g;
		if(t.type == "Script") {
			var args = [];
			if(t.parameters != null) {
				var _g1 = 0;
				var _g2 = t.parameters;
				while(_g1 < _g2.length) {
					var param = _g2[_g1];
					++_g1;
					args.push(iron_Scene.parseArg(param));
				}
			}
			var traitInst = iron_Scene.createTraitClassInstance(t.class_name,args);
			if(traitInst == null) {
				haxe_Log.trace("Error: Trait '" + t.class_name + "' referenced in object '" + object.name + "' not found",{ fileName : "Sources/iron/Scene.hx", lineNumber : 875, className : "iron.Scene", methodName : "createTraits"});
				continue;
			}
			if(t.props != null) {
				var _g3 = 0;
				var _g4 = t.props.length / 3 | 0;
				while(_g3 < _g4) {
					var i = _g3++;
					var pname = t.props[i * 3];
					var ptype = t.props[i * 3 + 1];
					var pval = t.props[i * 3 + 2];
					if(StringTools.endsWith(ptype,"Object") && pval != "") {
						Reflect.setProperty(traitInst,pname,iron_Scene.active.getChild(pval));
					} else {
						switch(ptype) {
						case "Vec2":
							var pVec = pval;
							Reflect.setProperty(traitInst,pname,new iron_math_Vec2(pVec.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN)));
							break;
						case "Vec3":
							var pVec1 = pval;
							Reflect.setProperty(traitInst,pname,new iron_math_Vec3(pVec1.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec1.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec1.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN)));
							break;
						case "Vec4":
							var pVec2 = pval;
							Reflect.setProperty(traitInst,pname,new iron_math_Vec4(pVec2.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec2.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec2.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),pVec2.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN)));
							break;
						default:
							Reflect.setProperty(traitInst,pname,pval);
						}
					}
				}
			}
			object.addTrait(traitInst);
		}
	}
};
iron_Scene.parseArg = function(str) {
	if(str == "true") {
		return true;
	} else if(str == "false") {
		return false;
	} else if(str == "null") {
		return null;
	} else if(str.charAt(0) == "'") {
		return StringTools.replace(str,"'","");
	} else if(str.charAt(0) == "\"") {
		return StringTools.replace(str,"\"","");
	} else if(str.charAt(0) == "[") {
		str = StringTools.replace(str,"[","");
		str = StringTools.replace(str,"]","");
		str = StringTools.replace(str," ","");
		var ar = [];
		var vals = str.split(",");
		var _g = 0;
		while(_g < vals.length) {
			var v = vals[_g];
			++_g;
			ar.push(iron_Scene.parseArg(v));
		}
		return ar;
	} else if(str.charAt(0) == "{") {
		return JSON.parse(str);
	} else {
		var f = parseFloat(str);
		var i = Std.parseInt(str);
		if(f == i) {
			return i;
		} else {
			return f;
		}
	}
};
iron_Scene.createConstraints = function(constraints,object) {
	if(constraints == null) {
		return;
	}
	object.constraints = [];
	var _g = 0;
	while(_g < constraints.length) {
		var c = constraints[_g];
		++_g;
		var constr = new iron_object_Constraint(c);
		object.constraints.push(constr);
	}
};
iron_Scene.createTraitClassInstance = function(traitName,args) {
	var cname = $hxClasses[traitName];
	if(cname == null) {
		return null;
	}
	return Type.createInstance(cname,args);
};
iron_Scene.prototype = {
	remove: function() {
		var _g = 0;
		var _g1 = this.traitRemoves;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		var _g = 0;
		var _g1 = this.meshes;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.remove();
		}
		var _g = 0;
		var _g1 = this.lights;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.remove();
		}
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.remove();
		}
		var _g = 0;
		var _g1 = this.speakers;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.remove();
		}
		var _g = 0;
		var _g1 = this.empties;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.remove();
		}
		this.groups = null;
		this.root.remove();
	}
	,updateFrame: function() {
		if(!this.ready) {
			return;
		}
		var _g = 0;
		var _g1 = this.animations;
		while(_g < _g1.length) {
			var anim = _g1[_g];
			++_g;
			anim.update(iron_system_Time.get_delta());
		}
		var _g = 0;
		var _g1 = this.empties;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e != null && e.parent != null) {
				e.transform.update();
			}
		}
	}
	,renderFrame: function(g) {
		if(!this.ready || iron_RenderPath.active == null) {
			return;
		}
		iron_Scene.framePassed = true;
		var _g = 0;
		var _g1 = this.tilesheets;
		while(_g < _g1.length) {
			var tilesheet = _g1[_g];
			++_g;
			tilesheet.update();
		}
		if(this.camera != null) {
			this.camera.renderFrame(g);
		} else {
			iron_RenderPath.active.renderFrame(g);
		}
	}
	,addObject: function(parent) {
		var object = new iron_object_Object();
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	,getChild: function(name) {
		return this.root.getChild(name);
	}
	,getCamera: function(name) {
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == name) {
				return c;
			}
		}
		return null;
	}
	,addMeshObject: function(data,materials,parent) {
		var object = new iron_object_MeshObject(data,materials);
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	,addLightObject: function(data,parent) {
		var object = new iron_object_LightObject(data);
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	,addCameraObject: function(data,parent) {
		var object = new iron_object_CameraObject(data);
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	,addSpeakerObject: function(data,parent) {
		var object = new iron_object_SpeakerObject(data);
		if(parent != null) {
			object.setParent(parent);
		} else {
			object.setParent(this.root);
		}
		return object;
	}
	,addScene: function(sceneName,parent,done) {
		var _gthis = this;
		if(parent == null) {
			parent = this.addObject();
			parent.name = sceneName;
		}
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			_gthis.loadEmbeddedData(format.embedded_datas,function() {
				var objectsTraversed = 0;
				var objectsCount = _gthis.getObjectsCount(format.objects);
				var traverseObjects = null;
				traverseObjects = function(parent,objects,parentObject,done) {
					if(objects == null) {
						return;
					}
					var _g = 0;
					var _g1 = objects.length;
					while(_g < _g1) {
						var i = _g++;
						var o = [objects[i]];
						if(o[0].spawn != null && o[0].spawn == false) {
							if((objectsTraversed += 1) == objectsCount) {
								done();
							}
							continue;
						}
						_gthis.createObject(o[0],format,parent,parentObject,(function(o) {
							return function(object) {
								traverseObjects(object,o[0].children,o[0],done);
								if((objectsTraversed += 1) == objectsCount) {
									done();
								}
							};
						})(o));
					}
				};
				if(format.objects == null || format.objects.length == 0) {
					iron_Scene.createTraits(format.traits,parent);
					done(parent);
				} else {
					traverseObjects(parent,format.objects,null,function() {
						iron_Scene.createTraits(format.traits,parent);
						done(parent);
					});
				}
			});
		});
	}
	,getObjectsCount: function(objects,discardNoSpawn) {
		if(discardNoSpawn == null) {
			discardNoSpawn = true;
		}
		if(objects == null) {
			return 0;
		}
		var result = objects.length;
		var _g = 0;
		while(_g < objects.length) {
			var o = objects[_g];
			++_g;
			if(discardNoSpawn && o.spawn != null && o.spawn == false) {
				continue;
			}
			if(o.children != null) {
				result += this.getObjectsCount(o.children);
			}
		}
		return result;
	}
	,spawnObject: function(name,parent,done,spawnChildren,srcRaw) {
		if(spawnChildren == null) {
			spawnChildren = true;
		}
		var _gthis = this;
		if(srcRaw == null) {
			srcRaw = this.raw;
		}
		var objectsTraversed = 0;
		var obj = iron_Scene.getRawObjectByName(srcRaw,name);
		var objectsCount = spawnChildren ? this.getObjectsCount([obj],false) : 1;
		var rootId = -1;
		var spawnObjectTree = null;
		spawnObjectTree = function(obj,parent,parentObject,done) {
			_gthis.createObject(obj,srcRaw,parent,parentObject,function(object) {
				if(rootId == -1) {
					rootId = object.uid;
				}
				if(spawnChildren && obj.children != null) {
					var _g = 0;
					var _g1 = obj.children;
					while(_g < _g1.length) {
						var child = _g1[_g];
						++_g;
						spawnObjectTree(child,object,obj,done);
					}
				}
				if((objectsTraversed += 1) == objectsCount && done != null) {
					while(object.uid != rootId) object = object.parent;
					done(object);
				}
			});
		};
		spawnObjectTree(obj,parent,null,done);
	}
	,createObject: function(o,format,parent,parentObject,done) {
		var _gthis = this;
		var sceneName = format.name;
		if(o.type == "camera_object") {
			iron_data_Data.getCamera(sceneName,o.data_ref,function(b) {
				var object = _gthis.addCameraObject(b,parent);
				_gthis.returnObject(object,o,done);
			});
		} else if(o.type == "light_object") {
			iron_data_Data.getLight(sceneName,o.data_ref,function(b) {
				var object = _gthis.addLightObject(b,parent);
				_gthis.returnObject(object,o,done);
			});
		} else if(o.type == "mesh_object") {
			if(o.material_refs == null || o.material_refs.length == 0) {
				this.createMeshObject(o,format,parent,parentObject,null,done);
			} else {
				var this1 = new Array(o.material_refs.length);
				var materials = this1;
				var materialsLoaded = 0;
				var _g = 0;
				var _g1 = o.material_refs.length;
				while(_g < _g1) {
					var i = [_g++];
					var ref = o.material_refs[i[0]];
					iron_data_Data.getMaterial(sceneName,ref,(function(i) {
						return function(mat) {
							materials[i[0]] = mat;
							materialsLoaded += 1;
							if(materialsLoaded == o.material_refs.length) {
								_gthis.createMeshObject(o,format,parent,parentObject,materials,done);
							}
						};
					})(i));
				}
			}
		} else if(o.type == "speaker_object") {
			var object = this.addSpeakerObject(iron_data_Data.getSpeakerRawByName(format.speaker_datas,o.data_ref),parent);
			this.returnObject(object,o,done);
		} else if(o.type == "object") {
			var object = this.addObject(parent);
			this.returnObject(object,o,function(ro) {
				if(o.group_ref != null) {
					_gthis.spawnGroup(format,o.group_ref,ro,function() {
						done(ro);
					},function() {
						done(ro);
					});
				} else {
					done(ro);
				}
			});
		} else {
			done(null);
		}
	}
	,spawnGroup: function(format,groupRef,groupOwner,done,failed) {
		var _gthis = this;
		var spawned = 0;
		var object_refs = this.getGroupObjectRefs(groupRef,format);
		if(object_refs == null) {
			haxe_Log.trace("Failed to spawn group \"" + groupRef + "\", group doesn't exist",{ fileName : "Sources/iron/Scene.hx", lineNumber : 589, className : "iron.Scene", methodName : "spawnGroup"});
			if(failed != null) {
				failed();
			}
		} else if(object_refs.length == 0) {
			done();
		} else {
			var _g = 0;
			while(_g < object_refs.length) {
				var object_ref = object_refs[_g];
				++_g;
				this.spawnObject(object_ref,groupOwner,function(spawnedObject) {
					if(!_gthis.isObjectInGroup(groupRef,spawnedObject.parent,format)) {
						var _g = 0;
						var _g1 = format.groups;
						while(_g < _g1.length) {
							var group = _g1[_g];
							++_g;
							if(group.name == groupRef) {
								spawnedObject.transform.applyParent();
								spawnedObject.transform.translate(-group.instance_offset.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),-group.instance_offset.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),-group.instance_offset.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN));
								break;
							}
						}
					}
					if((spawned += 1) == object_refs.length) {
						groupOwner.transform.reset();
						done();
					}
				},true,format);
			}
		}
	}
	,getGroupObjectRefs: function(group_ref,format) {
		var _g = 0;
		var _g1 = format.groups;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.name == group_ref) {
				return g.object_refs;
			}
		}
		return null;
	}
	,getGroupObjectsRaw: function(groupRef,format) {
		var objectRefs = this.getGroupObjectRefs(groupRef,format);
		var objects = [];
		if(objectRefs == null) {
			return objects;
		}
		var _g = 0;
		while(_g < objectRefs.length) {
			var objRef = objectRefs[_g];
			++_g;
			var rawObj = iron_Scene.getRawObjectByName(format,objRef);
			objects.push(rawObj);
			var childRefs = this.getChildObjectsRaw(rawObj);
			objects = objects.concat(childRefs);
		}
		return objects;
	}
	,getChildObjectsRaw: function(rawObj,recursive) {
		if(recursive == null) {
			recursive = true;
		}
		var children = rawObj.children;
		if(children == null) {
			return [];
		}
		children = children.slice();
		if(recursive) {
			var _g = 0;
			var _g1 = rawObj.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				var childRefs = this.getChildObjectsRaw(child);
				children = children.concat(childRefs);
			}
		}
		return children;
	}
	,isObjectInGroup: function(groupRef,object,format) {
		var _g = 0;
		var _g1 = this.getGroupObjectsRaw(groupRef,format);
		while(_g < _g1.length) {
			var obj = _g1[_g];
			++_g;
			if(obj.name == object.name) {
				return true;
			}
		}
		return false;
	}
	,createMeshObject: function(o,format,parent,parentObject,materials,done) {
		var _gthis = this;
		var ref = o.data_ref.split("/");
		var object_file = "";
		var data_ref = "";
		var sceneName = format.name;
		if(ref.length == 2) {
			object_file = ref[0];
			data_ref = ref[1];
		} else {
			object_file = sceneName;
			data_ref = o.data_ref;
		}
		if(parentObject != null && parentObject.bone_actions != null) {
			var bactions = [];
			var _g = 0;
			var _g1 = parentObject.bone_actions;
			while(_g < _g1.length) {
				var ref = _g1[_g];
				++_g;
				iron_data_Data.getSceneRaw(ref,function(action) {
					bactions.push(action);
					if(bactions.length == parentObject.bone_actions.length) {
						var armature = null;
						var _g = 0;
						var _g1 = _gthis.armatures;
						while(_g < _g1.length) {
							var a = _g1[_g];
							++_g;
							if(a.uid == parent.uid) {
								armature = a;
								break;
							}
						}
						if(armature == null) {
							var _g = 0;
							var _g1 = _gthis.armatures;
							while(_g < _g1.length) {
								var a = _g1[_g];
								++_g;
								if(a.name == parent.name) {
									parent.name += "." + parent.uid;
									break;
								}
							}
							armature = new iron_data_Armature(parent.uid,parent.name,bactions);
							_gthis.armatures.push(armature);
						}
						_gthis.returnMeshObject(object_file,data_ref,sceneName,armature,materials,parent,parentObject,o,done);
					}
				});
			}
		} else {
			this.returnMeshObject(object_file,data_ref,sceneName,null,materials,parent,parentObject,o,done);
		}
	}
	,returnMeshObject: function(object_file,data_ref,sceneName,armature,materials,parent,parentObject,o,done) {
		var _gthis = this;
		iron_data_Data.getMesh(object_file,data_ref,function(mesh) {
			if(mesh.isSkinned) {
				var g = mesh.geom;
				if(armature != null) {
					g.addArmature(armature);
				} else {
					g.addAction(mesh.format.objects,"none");
				}
			}
			var object = _gthis.addMeshObject(mesh,materials,parent);
			if(o.particle_refs != null) {
				var _g = 0;
				var _g1 = o.particle_refs;
				while(_g < _g1.length) {
					var ref = _g1[_g];
					++_g;
					(js_Boot.__cast(object , iron_object_MeshObject)).setupParticleSystem(sceneName,ref);
				}
			}
			if(o.tilesheet_ref != null) {
				(js_Boot.__cast(object , iron_object_MeshObject)).setupTilesheet(sceneName,o.tilesheet_ref,o.tilesheet_action_ref);
			}
			_gthis.returnObject(object,o,done);
		});
	}
	,returnObject: function(object,o,done) {
		var _gthis = this;
		if(object != null && o.object_actions != null) {
			var oactions = [];
			while(oactions.length < o.object_actions.length) oactions.push(null);
			var actionsLoaded = 0;
			var _g = 0;
			var _g1 = o.object_actions.length;
			while(_g < _g1) {
				var i = [_g++];
				var ref = o.object_actions[i[0]];
				if(ref == "null") {
					actionsLoaded += 1;
					continue;
				}
				iron_data_Data.getSceneRaw(ref,(function(i) {
					return function(action) {
						oactions[i[0]] = action;
						actionsLoaded += 1;
						if(actionsLoaded == o.object_actions.length) {
							_gthis.returnObjectLoaded(object,o,oactions,done);
						}
					};
				})(i));
			}
		} else {
			this.returnObjectLoaded(object,o,null,done);
		}
	}
	,returnObjectLoaded: function(object,o,oactions,done) {
		if(object != null) {
			object.raw = o;
			object.name = o.name;
			if(o.visible != null) {
				object.visible = o.visible;
			}
			if(o.visible_mesh != null) {
				object.visibleMesh = o.visible_mesh;
			}
			if(o.visible_shadow != null) {
				object.visibleShadow = o.visible_shadow;
			}
			iron_Scene.createConstraints(o.constraints,object);
			iron_Scene.generateTransform(o,object.transform);
			object.setupAnimation(oactions);
			object.setupMorphTargets();
			if(o.properties != null) {
				object.properties = new haxe_ds_StringMap();
				var _g = 0;
				var _g1 = o.properties;
				while(_g < _g1.length) {
					var p = _g1[_g];
					++_g;
					object.properties.h[p.name] = p.value;
				}
			}
			if(!iron_Scene.active.initializing) {
				iron_Scene.createTraits(o.traits,object);
			}
		}
		done(object);
	}
	,loadEmbeddedData: function(datas,done) {
		if(datas == null) {
			done();
			return;
		}
		var loaded = 0;
		var _g = 0;
		while(_g < datas.length) {
			var file = datas[_g];
			++_g;
			this.embedData(file,function() {
				loaded += 1;
				if(loaded == datas.length) {
					done();
				}
			});
		}
	}
	,embedData: function(file,done) {
		var _gthis = this;
		if(StringTools.endsWith(file,".raw")) {
			iron_data_Data.getBlob(file,function(blob) {
				var b = blob.toBytes();
				var w = (Math.pow(b.length,0.333333333333333315) | 0) + 1;
				var image = kha_Image.fromBytes3D(b,w,w,w,1);
				_gthis.embedded.h[file] = image;
				done();
			});
		} else {
			iron_data_Data.getImage(file,function(image) {
				_gthis.embedded.h[file] = image;
				done();
			});
		}
	}
	,notifyOnInit: function(f) {
		if(this.ready) {
			f();
		} else {
			this.traitInits.push(f);
		}
	}
	,notifyOnRemove: function(f) {
		this.traitRemoves.push(f);
	}
	,__class__: iron_Scene
};
var iron_data_Armature = function(uid,name,actions) {
	this.matsReady = false;
	this.actions = [];
	this.uid = uid;
	this.name = name;
	var _g = 0;
	while(_g < actions.length) {
		var a = actions[_g];
		++_g;
		var _g1 = 0;
		var _g2 = a.objects;
		while(_g1 < _g2.length) {
			var o = _g2[_g1];
			++_g1;
			iron_data_Armature.setParents(o);
		}
		var bones = [[]];
		iron_data_Armature.traverseBones(a.objects,(function(bones) {
			return function(object) {
				bones[0].push(object);
			};
		})(bones));
		this.actions.push({ name : a.name, bones : bones[0], mats : null});
	}
};
$hxClasses["iron.data.Armature"] = iron_data_Armature;
iron_data_Armature.__name__ = true;
iron_data_Armature.setParents = function(object) {
	if(object.children == null) {
		return;
	}
	var _g = 0;
	var _g1 = object.children;
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		o.parent = object;
		iron_data_Armature.setParents(o);
	}
};
iron_data_Armature.traverseBones = function(objects,callback) {
	var _g = 0;
	var _g1 = objects.length;
	while(_g < _g1) {
		var i = _g++;
		iron_data_Armature.traverseBonesStep(objects[i],callback);
	}
};
iron_data_Armature.traverseBonesStep = function(object,callback) {
	if(object.type == "bone_object") {
		callback(object);
	}
	if(object.children == null) {
		return;
	}
	var _g = 0;
	var _g1 = object.children.length;
	while(_g < _g1) {
		var i = _g++;
		iron_data_Armature.traverseBonesStep(object.children[i],callback);
	}
};
iron_data_Armature.prototype = {
	initMats: function() {
		if(this.matsReady) {
			return;
		}
		this.matsReady = true;
		var _g = 0;
		var _g1 = this.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.mats != null) {
				continue;
			}
			a.mats = [];
			var _g2 = 0;
			var _g3 = a.bones;
			while(_g2 < _g3.length) {
				var b = _g3[_g2];
				++_g2;
				var a1 = b.transform.values;
				a.mats.push(new iron_math_Mat4(a1.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN),a1.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN)));
			}
		}
	}
	,getAction: function(name) {
		var _g = 0;
		var _g1 = this.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.name == name) {
				return a;
			}
		}
		return null;
	}
	,__class__: iron_data_Armature
};
var iron_data_CameraData = function(raw,done) {
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.CameraData"] = iron_data_CameraData;
iron_data_CameraData.__name__ = true;
iron_data_CameraData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getCameraRawByName(format.camera_datas,id);
		if(raw == null) {
			haxe_Log.trace("Camera data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/CameraData.hx", lineNumber : 20, className : "iron.data.CameraData", methodName : "parse"});
			done(null);
		}
		new iron_data_CameraData(raw,done);
	});
};
iron_data_CameraData.prototype = {
	__class__: iron_data_CameraData
};
var iron_data_ConstData = function() { };
$hxClasses["iron.data.ConstData"] = iron_data_ConstData;
iron_data_ConstData.__name__ = true;
iron_data_ConstData.createScreenAlignedData = function() {
	var data = [-1.0,-1.0,3.0,-1.0,-1.0,3.0];
	var indices = [0,1,2];
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",1);
	iron_data_ConstData.screenAlignedVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,0);
	var vertices = iron_data_ConstData.screenAlignedVB.lock();
	var _g = 0;
	var _g1 = vertices.byteLength / 4 | 0;
	while(_g < _g1) {
		var i = _g++;
		vertices.setFloat32(i * 4,data[i],true);
	}
	iron_data_ConstData.screenAlignedVB.unlock();
	iron_data_ConstData.screenAlignedIB = new kha_graphics4_IndexBuffer(indices.length,0);
	var id = iron_data_ConstData.screenAlignedIB.lock();
	var _g = 0;
	var _g1 = id.byteLength >> 2;
	while(_g < _g1) {
		var i = _g++;
		id.setUint32(i * 4,indices[i],kha_arrays_ByteArray.LITTLE_ENDIAN);
		var tmp = i * 4;
	}
	iron_data_ConstData.screenAlignedIB.unlock();
};
iron_data_ConstData.createSkydomeData = function() {
	var pos = iron_data_ConstData.skydomePos;
	var nor = iron_data_ConstData.skydomeNor;
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",2);
	structure.add("nor",2);
	var structLength = structure.byteSize() / 4 | 0;
	iron_data_ConstData.skydomeVB = new kha_graphics4_VertexBuffer(pos.length / 3 | 0,structure,0);
	var vertices = iron_data_ConstData.skydomeVB.lock();
	var _g = 0;
	var _g1 = vertices.byteLength / 4 / structLength | 0;
	while(_g < _g1) {
		var i = _g++;
		vertices.setFloat32(i * structLength * 4,pos[i * 3],true);
		vertices.setFloat32((i * structLength + 1) * 4,pos[i * 3 + 1],true);
		vertices.setFloat32((i * structLength + 2) * 4,pos[i * 3 + 2],true);
		vertices.setFloat32((i * structLength + 3) * 4,nor[i * 3],true);
		vertices.setFloat32((i * structLength + 4) * 4,nor[i * 3 + 1],true);
		vertices.setFloat32((i * structLength + 5) * 4,nor[i * 3 + 2],true);
	}
	iron_data_ConstData.skydomeVB.unlock();
	var indices = iron_data_ConstData.skydomeIndices;
	iron_data_ConstData.skydomeIB = new kha_graphics4_IndexBuffer(indices.length,0);
	var id = iron_data_ConstData.skydomeIB.lock();
	var _g = 0;
	var _g1 = id.byteLength >> 2;
	while(_g < _g1) {
		var i = _g++;
		id.setUint32(i * 4,indices[i],kha_arrays_ByteArray.LITTLE_ENDIAN);
		var tmp = i * 4;
	}
	iron_data_ConstData.skydomeIB.unlock();
};
var iron_data_Data = function() { };
$hxClasses["iron.data.Data"] = iron_data_Data;
iron_data_Data.__name__ = true;
iron_data_Data.getMesh = function(file,name,done) {
	var handle = file + name;
	var cached = iron_data_Data.cachedMeshes.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingMeshes.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingMeshes.h[handle] = [done];
	iron_data_MeshData.parse(file,name,function(b) {
		iron_data_Data.cachedMeshes.h[handle] = b;
		b.handle = handle;
		var _g = 0;
		var _g1 = iron_data_Data.loadingMeshes.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingMeshes;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	});
};
iron_data_Data.getLight = function(file,name,done) {
	var handle = file + name;
	var cached = iron_data_Data.cachedLights.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingLights.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingLights.h[handle] = [done];
	iron_data_LightData.parse(file,name,function(b) {
		iron_data_Data.cachedLights.h[handle] = b;
		var _g = 0;
		var _g1 = iron_data_Data.loadingLights.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingLights;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	});
};
iron_data_Data.getCamera = function(file,name,done) {
	var handle = file + name;
	var cached = iron_data_Data.cachedCameras.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingCameras.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingCameras.h[handle] = [done];
	iron_data_CameraData.parse(file,name,function(b) {
		iron_data_Data.cachedCameras.h[handle] = b;
		var _g = 0;
		var _g1 = iron_data_Data.loadingCameras.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingCameras;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	});
};
iron_data_Data.getMaterial = function(file,name,done) {
	var handle = file + name;
	var cached = iron_data_Data.cachedMaterials.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingMaterials.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingMaterials.h[handle] = [done];
	iron_data_MaterialData.parse(file,name,function(b) {
		iron_data_Data.cachedMaterials.h[handle] = b;
		var _g = 0;
		var _g1 = iron_data_Data.loadingMaterials.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingMaterials;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	});
};
iron_data_Data.getParticle = function(file,name,done) {
	var handle = file + name;
	var cached = iron_data_Data.cachedParticles.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingParticles.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingParticles.h[handle] = [done];
	iron_data_ParticleData.parse(file,name,function(b) {
		iron_data_Data.cachedParticles.h[handle] = b;
		var _g = 0;
		var _g1 = iron_data_Data.loadingParticles.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingParticles;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	});
};
iron_data_Data.getWorld = function(file,name,done) {
	if(name == null) {
		done(null);
		return;
	}
	var handle = file + name;
	var cached = iron_data_Data.cachedWorlds.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingWorlds.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingWorlds.h[handle] = [done];
	iron_data_WorldData.parse(file,name,function(b) {
		iron_data_Data.cachedWorlds.h[handle] = b;
		var _g = 0;
		var _g1 = iron_data_Data.loadingWorlds.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingWorlds;
		if(Object.prototype.hasOwnProperty.call(_this.h,handle)) {
			delete(_this.h[handle]);
		}
	});
};
iron_data_Data.getShader = function(file,name,done,overrideContext) {
	var cacheName = name;
	if(overrideContext != null) {
		cacheName += "2";
	}
	var cached = iron_data_Data.cachedShaders.h[cacheName];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingShaders.h[cacheName];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingShaders.h[cacheName] = [done];
	iron_data_ShaderData.parse(file,name,function(b) {
		iron_data_Data.cachedShaders.h[cacheName] = b;
		var _g = 0;
		var _g1 = iron_data_Data.loadingShaders.h[cacheName];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingShaders;
		if(Object.prototype.hasOwnProperty.call(_this.h,cacheName)) {
			delete(_this.h[cacheName]);
		}
	},overrideContext);
};
iron_data_Data.getSceneRaw = function(file,done) {
	var cached = iron_data_Data.cachedSceneRaws.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingSceneRaws.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingSceneRaws.h[file] = [done];
	var compressed = StringTools.endsWith(file,".lz4");
	var isJson = StringTools.endsWith(file,".json");
	var ext = compressed || isJson || StringTools.endsWith(file,".arm") ? "" : ".arm";
	iron_data_Data.getBlob(file + ext,function(b) {
		var parsed = null;
		if(isJson) {
			var s = b.toString();
			if(s.charAt(0) == "{") {
				parsed = JSON.parse(s);
			} else {
				var i = new haxe_io_BytesInput(b.toBytes());
				i.set_bigEndian(false);
				parsed = iron_system_ArmPack.read(i);
			}
		} else {
			var i = new haxe_io_BytesInput(b.toBytes());
			i.set_bigEndian(false);
			parsed = iron_system_ArmPack.read(i);
		}
		iron_data_Data.returnSceneRaw(file,parsed);
	});
};
iron_data_Data.returnSceneRaw = function(file,parsed) {
	iron_data_Data.cachedSceneRaws.h[file] = parsed;
	var _g = 0;
	var _g1 = iron_data_Data.loadingSceneRaws.h[file];
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		f(parsed);
	}
	var _this = iron_data_Data.loadingSceneRaws;
	if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
		delete(_this.h[file]);
	}
};
iron_data_Data.getMeshRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getLightRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getCameraRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getMaterialRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getParticleRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getWorldRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getShaderRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getSpeakerRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getBlob = function(file,done) {
	var cached = iron_data_Data.cachedBlobs.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingBlobs.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingBlobs.h[file] = [done];
	var tmp;
	if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
		tmp = file;
	} else {
		var slash = file.lastIndexOf("/");
		tmp = slash >= 0 ? HxOverrides.substr(file,slash + 1,null) : file;
	}
	kha_Assets.loadBlobFromPath(tmp,function(b) {
		iron_data_Data.cachedBlobs.h[file] = b;
		var _g = 0;
		var _g1 = iron_data_Data.loadingBlobs.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingBlobs;
		if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
			delete(_this.h[file]);
		}
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 424, className : "iron.data.Data", methodName : "getBlob"});
};
iron_data_Data.getImage = function(file,done,readable,format) {
	if(format == null) {
		format = "RGBA32";
	}
	if(readable == null) {
		readable = false;
	}
	var cached = iron_data_Data.cachedImages.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingImages.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingImages.h[file] = [done];
	var tmp;
	if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
		tmp = file;
	} else {
		var slash = file.lastIndexOf("/");
		tmp = slash >= 0 ? HxOverrides.substr(file,slash + 1,null) : file;
	}
	kha_Assets.loadImageFromPath(tmp,readable,function(b) {
		iron_data_Data.cachedImages.h[file] = b;
		var _g = 0;
		var _g1 = iron_data_Data.loadingImages.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		var _this = iron_data_Data.loadingImages;
		if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
			delete(_this.h[file]);
		}
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 473, className : "iron.data.Data", methodName : "getImage"});
};
iron_data_Data.getSound = function(file,done) {
	if(StringTools.endsWith(file,".wav")) {
		file = file.substring(0,file.length - 4) + ".ogg";
	}
	var cached = iron_data_Data.cachedSounds.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var loading = iron_data_Data.loadingSounds.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	iron_data_Data.loadingSounds.h[file] = [done];
	var tmp;
	if(iron_data_Data.isAbsolute(file) || file.charAt(0) == "." && file.charAt(1) == ".") {
		tmp = file;
	} else {
		var slash = file.lastIndexOf("/");
		tmp = slash >= 0 ? HxOverrides.substr(file,slash + 1,null) : file;
	}
	kha_Assets.loadSoundFromPath(tmp,function(b) {
		b.uncompress(function() {
			iron_data_Data.cachedSounds.h[file] = b;
			var _g = 0;
			var _g1 = iron_data_Data.loadingSounds.h[file];
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f(b);
			}
			var _this = iron_data_Data.loadingSounds;
			if(Object.prototype.hasOwnProperty.call(_this.h,file)) {
				delete(_this.h[file]);
			}
			iron_data_Data.assetsLoaded++;
		});
	},null,{ fileName : "Sources/iron/data/Data.hx", lineNumber : 513, className : "iron.data.Data", methodName : "getSound"});
};
iron_data_Data.isAbsolute = function(file) {
	if(!(file.charAt(0) == "/" || file.charAt(1) == ":" || file.charAt(4) == ":")) {
		if(file.charAt(0) == "\\") {
			return file.charAt(1) == "\\";
		} else {
			return false;
		}
	} else {
		return true;
	}
};
var iron_data_Geometry = function(data,indices,materialIndices,usage) {
	this.mats = null;
	this.actions = null;
	this.skeletonBoneLens = null;
	this.skeletonBoneRefs = null;
	this.skeletonTransformsI = null;
	this.skinBoneWeights = null;
	this.skinBoneIndices = null;
	this.skinBoneCounts = null;
	this.instanceCount = 0;
	this.instanced = false;
	this.instancedVB = null;
	this.numTris = 0;
	this.ready = false;
	this.name = "";
	this.count = -1;
	this.start = 0;
	this.vertexBufferMap = new haxe_ds_StringMap();
	if(usage == null) {
		usage = 0;
	}
	this.indices = indices;
	this.materialIndices = materialIndices;
	this.usage = usage;
	this.vertexArrays = data.raw.vertex_arrays;
	this.positions = this.getVArray("pos");
	this.normals = this.getVArray("nor");
	this.uvs = this.getVArray("tex");
	this.cols = this.getVArray("col");
	this.data = data;
	this.struct = iron_data_Geometry.getVertexStructure(this.vertexArrays);
	this.structLength = this.struct.byteSize() / 2 | 0;
	this.structStr = "";
	var _g = 0;
	var _g1 = this.struct.elements;
	while(_g < _g1.length) {
		var e = _g1[_g];
		++_g;
		this.structStr += e.name;
	}
};
$hxClasses["iron.data.Geometry"] = iron_data_Geometry;
iron_data_Geometry.__name__ = true;
iron_data_Geometry.getVertexStructure = function(vertexArrays) {
	var structure = new kha_graphics4_VertexStructure();
	var _g = 0;
	var _g1 = vertexArrays.length;
	while(_g < _g1) {
		var i = _g++;
		structure.add(vertexArrays[i].attrib,iron_data_Geometry.getVertexData(vertexArrays[i].data));
	}
	return structure;
};
iron_data_Geometry.getVertexData = function(data) {
	switch(data) {
	case "short2norm":
		return 23;
	case "short4norm":
		return 27;
	default:
		return 27;
	}
};
iron_data_Geometry.buildVertices = function(vertices,vertexArrays,offset,fakeUVs,uvsIndex) {
	if(uvsIndex == null) {
		uvsIndex = -1;
	}
	if(fakeUVs == null) {
		fakeUVs = false;
	}
	if(offset == null) {
		offset = 0;
	}
	var arr = vertexArrays[0];
	var numVertices = (arr.values.byteLength >> 1) / arr.size | 0;
	var di = -1 + offset;
	var _g = 0;
	var _g1 = numVertices;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = 0;
		var _g3 = vertexArrays.length;
		while(_g2 < _g3) {
			var va = _g2++;
			var l = vertexArrays[va].size;
			if(fakeUVs && va == uvsIndex) {
				var _g4 = 0;
				var _g5 = l;
				while(_g4 < _g5) {
					var j = _g4++;
					vertices.setInt16(++di * 2,0,kha_arrays_ByteArray.LITTLE_ENDIAN);
				}
				continue;
			}
			var _g6 = 0;
			var _g7 = l;
			while(_g6 < _g7) {
				var o = _g6++;
				vertices.setInt16(++di * 2,vertexArrays[va].values.getInt16((i * l + o) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN),kha_arrays_ByteArray.LITTLE_ENDIAN);
			}
			if(vertexArrays[va].padding != null) {
				if(vertexArrays[va].padding == 1) {
					vertices.setInt16(++di * 2,0,kha_arrays_ByteArray.LITTLE_ENDIAN);
				}
			}
		}
	}
};
iron_data_Geometry.prototype = {
	getVArray: function(name) {
		var _g = 0;
		var _g1 = this.vertexArrays.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.vertexArrays[i].attrib == name) {
				return this.vertexArrays[i];
			}
		}
		return null;
	}
	,setupInstanced: function(data,instancedType,usage) {
		var structure = new kha_graphics4_VertexStructure();
		structure.instanced = true;
		this.instanced = true;
		structure.add("ipos",2);
		if(instancedType == 2 || instancedType == 4) {
			structure.add("irot",2);
		}
		if(instancedType == 3 || instancedType == 4) {
			structure.add("iscl",2);
		}
		this.instanceCount = (data.byteLength >> 2) / (structure.byteSize() / 4 | 0) | 0;
		this.instancedVB = new kha_graphics4_VertexBuffer(this.instanceCount,structure,usage,1);
		var vertices = this.instancedVB.lock();
		var _g = 0;
		var _g1 = vertices.byteLength / 4 | 0;
		while(_g < _g1) {
			var i = _g++;
			vertices.setFloat32(i * 4,data.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),true);
		}
		this.instancedVB.unlock();
	}
	,get: function(vs) {
		var key = "";
		var _g = 0;
		while(_g < vs.length) {
			var e = vs[_g];
			++_g;
			key += e.name;
		}
		var vb = this.vertexBufferMap.h[key];
		if(vb == null) {
			var nVertexArrays = [];
			var atex = false;
			var texOffset = -1;
			var acol = false;
			var _g = 0;
			var _g1 = vs.length;
			while(_g < _g1) {
				var e = _g++;
				if(vs[e].name == "tex") {
					atex = true;
					texOffset = e;
				}
				if(vs[e].name == "col") {
					acol = true;
				}
				var _g2 = 0;
				var _g3 = this.vertexArrays.length;
				while(_g2 < _g3) {
					var va = _g2++;
					if(vs[e].name == this.vertexArrays[va].attrib) {
						nVertexArrays.push(this.vertexArrays[va]);
					}
				}
			}
			var struct = iron_data_Geometry.getVertexStructure(nVertexArrays);
			vb = new kha_graphics4_VertexBuffer((this.positions.values.byteLength >> 1) / this.positions.size | 0,struct,this.usage);
			this.vertices = vb.lock();
			iron_data_Geometry.buildVertices(this.vertices,nVertexArrays,0,atex && this.uvs == null,texOffset);
			vb.unlock();
			this.vertexBufferMap.h[key] = vb;
			if(atex && this.uvs == null) {
				haxe_Log.trace("Armory Warning: Geometry " + this.name + " is missing UV map",{ fileName : "Sources/iron/data/Geometry.hx", lineNumber : 228, className : "iron.data.Geometry", methodName : "get"});
			}
			if(acol && this.cols == null) {
				haxe_Log.trace("Armory Warning: Geometry " + this.name + " is missing vertex colors",{ fileName : "Sources/iron/data/Geometry.hx", lineNumber : 229, className : "iron.data.Geometry", methodName : "get"});
			}
		}
		return vb;
	}
	,build: function() {
		if(this.ready) {
			return;
		}
		this.vertexBuffer = new kha_graphics4_VertexBuffer((this.positions.values.byteLength >> 1) / this.positions.size | 0,this.struct,this.usage);
		this.vertices = this.vertexBuffer.lock();
		iron_data_Geometry.buildVertices(this.vertices,this.vertexArrays);
		this.vertexBuffer.unlock();
		this.vertexBufferMap.h[this.structStr] = this.vertexBuffer;
		this.indexBuffers = [];
		var _g = 0;
		var _g1 = this.indices;
		while(_g < _g1.length) {
			var id = _g1[_g];
			++_g;
			if(id.byteLength >> 2 == 0) {
				continue;
			}
			var indexBuffer = new kha_graphics4_IndexBuffer(id.byteLength >> 2,this.usage);
			this.numTris += (id.byteLength >> 2) / 3 | 0;
			var indicesA = indexBuffer.lock();
			var _g2 = 0;
			var _g3 = indicesA.byteLength >> 2;
			while(_g2 < _g3) {
				var i = _g2++;
				indicesA.setUint32(i * 4,id.getUint32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN),kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp = i * 4;
			}
			indexBuffer.unlock();
			this.indexBuffers.push(indexBuffer);
		}
		if(this.data.raw.instanced_data != null) {
			this.setupInstanced(this.data.raw.instanced_data,this.data.raw.instanced_type,this.usage);
		}
		this.ready = true;
	}
	,addArmature: function(armature) {
		var _g = 0;
		var _g1 = armature.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			this.addAction(a.bones,a.name);
		}
	}
	,addAction: function(bones,name) {
		if(bones == null) {
			return;
		}
		if(this.actions == null) {
			this.actions = new haxe_ds_StringMap();
			this.mats = new haxe_ds_StringMap();
		}
		if(this.actions.h[name] != null) {
			return;
		}
		var actionBones = [];
		var _g = 0;
		var _g1 = this.skeletonBoneRefs;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < bones.length) {
				var b = bones[_g2];
				++_g2;
				if(b.name == s) {
					actionBones.push(b);
				}
			}
		}
		this.actions.h[name] = actionBones;
		var actionMats = [];
		var _g = 0;
		while(_g < actionBones.length) {
			var b = actionBones[_g];
			++_g;
			var a = b.transform.values;
			actionMats.push(new iron_math_Mat4(a.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN),a.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN)));
		}
		this.mats.h[name] = actionMats;
	}
	,initSkeletonTransforms: function(transformsI) {
		this.skeletonTransformsI = [];
		var _g = 0;
		while(_g < transformsI.length) {
			var t = transformsI[_g];
			++_g;
			var mi = new iron_math_Mat4(t.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN),t.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN));
			this.skeletonTransformsI.push(mi);
		}
	}
	,__class__: iron_data_Geometry
};
var iron_data_LightData = function(raw,done) {
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.LightData"] = iron_data_LightData;
iron_data_LightData.__name__ = true;
iron_data_LightData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getLightRawByName(format.light_datas,id);
		if(raw == null) {
			haxe_Log.trace("Light data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/LightData.hx", lineNumber : 30, className : "iron.data.LightData", methodName : "parse"});
			done(null);
		}
		new iron_data_LightData(raw,done);
	});
};
iron_data_LightData.prototype = {
	__class__: iron_data_LightData
};
var iron_data_MaterialData = function(raw,done,file) {
	if(file == null) {
		file = "";
	}
	this.contexts = null;
	var _gthis = this;
	this.uid = ++iron_data_MaterialData.uidCounter;
	this.raw = raw;
	this.name = raw.name;
	var ref = raw.shader.split("/");
	var object_file = "";
	var data_ref = "";
	if(ref.length == 2) {
		object_file = ref[0];
		data_ref = ref[1];
	} else {
		object_file = file;
		data_ref = raw.shader;
	}
	iron_data_Data.getShader(object_file,data_ref,function(b) {
		_gthis.shader = b;
		_gthis.contexts = [];
		while(_gthis.contexts.length < raw.contexts.length) _gthis.contexts.push(null);
		var contextsLoaded = 0;
		var _g = 0;
		var _g1 = raw.contexts.length;
		while(_g < _g1) {
			var i = [_g++];
			var c = raw.contexts[i[0]];
			new iron_data_MaterialContext(c,(function(i) {
				return function(self) {
					_gthis.contexts[i[0]] = self;
					contextsLoaded += 1;
					if(contextsLoaded == raw.contexts.length) {
						done(_gthis);
					}
				};
			})(i));
		}
	},raw.override_context);
};
$hxClasses["iron.data.MaterialData"] = iron_data_MaterialData;
iron_data_MaterialData.__name__ = true;
iron_data_MaterialData.parse = function(file,name,done) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getMaterialRawByName(format.material_datas,name);
		if(raw == null) {
			haxe_Log.trace("Material data \"" + name + "\" not found!",{ fileName : "Sources/iron/data/MaterialData.hx", lineNumber : 58, className : "iron.data.MaterialData", methodName : "parse"});
			done(null);
		}
		new iron_data_MaterialData(raw,done,file);
	});
};
iron_data_MaterialData.prototype = {
	getContext: function(name) {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(HxOverrides.substr(c.raw.name,0,name.length) == name) {
				return c;
			}
		}
		return null;
	}
	,__class__: iron_data_MaterialData
};
var iron_data_MaterialContext = function(raw,done) {
	this.id = 0;
	this.textures = null;
	var _gthis = this;
	this.raw = raw;
	this.id = iron_data_MaterialContext.num++;
	if(raw.bind_textures != null && raw.bind_textures.length > 0) {
		var this1 = new Array(raw.bind_textures.length);
		this.textures = this1;
		var texturesLoaded = 0;
		var _g = 0;
		var _g1 = raw.bind_textures.length;
		while(_g < _g1) {
			var i = [_g++];
			var tex = [raw.bind_textures[i[0]]];
			if(tex[0].file == "" || tex[0].source == "movie") {
				texturesLoaded += 1;
				if(texturesLoaded == raw.bind_textures.length) {
					done(this);
				}
				continue;
			}
			iron_data_Data.getImage(tex[0].file,(function(tex,i) {
				return function(image) {
					_gthis.textures[i[0]] = image;
					texturesLoaded += 1;
					if(tex[0].mipmaps != null) {
						var mipmaps = [];
						while(mipmaps.length < tex[0].mipmaps.length) mipmaps.push(null);
						var mipmapsLoaded = 0;
						var _g = 0;
						var _g1 = tex[0].mipmaps.length;
						while(_g < _g1) {
							var j = [_g++];
							var name = tex[0].mipmaps[j[0]];
							iron_data_Data.getImage(name,(function(j,tex) {
								return function(mipimg) {
									mipmaps[j[0]] = mipimg;
									mipmapsLoaded += 1;
									if(mipmapsLoaded == tex[0].mipmaps.length) {
										image.setMipmaps(mipmaps);
										tex[0].mipmaps = null;
										tex[0].generate_mipmaps = false;
										if(texturesLoaded == raw.bind_textures.length) {
											done(_gthis);
										}
									}
								};
							})(j,tex));
						}
					} else if(tex[0].generate_mipmaps == true && image != null) {
						image.generateMipmaps(1000);
						tex[0].mipmaps = null;
						tex[0].generate_mipmaps = false;
						if(texturesLoaded == raw.bind_textures.length) {
							done(_gthis);
						}
					} else if(texturesLoaded == raw.bind_textures.length) {
						done(_gthis);
					}
				};
			})(tex,i),false,tex[0].format != null ? tex[0].format : "RGBA32");
		}
	} else {
		done(this);
	}
};
$hxClasses["iron.data.MaterialContext"] = iron_data_MaterialContext;
iron_data_MaterialContext.__name__ = true;
iron_data_MaterialContext.prototype = {
	setTextureParameters: function(g,textureIndex,context,unitIndex) {
		context.setTextureParameters(g,unitIndex,this.raw.bind_textures[textureIndex]);
	}
	,__class__: iron_data_MaterialContext
};
var iron_data_MeshData = function(raw,done) {
	this.scaleTex = 1.0;
	this.scalePos = 1.0;
	this.refcount = 0;
	this.raw = raw;
	this.name = raw.name;
	if(raw.scale_pos != null) {
		this.scalePos = raw.scale_pos;
	}
	if(raw.scale_tex != null) {
		this.scaleTex = raw.scale_tex;
	}
	var indices = [];
	var materialIndices = [];
	var _g = 0;
	var _g1 = raw.index_arrays;
	while(_g < _g1.length) {
		var ind = _g1[_g];
		++_g;
		indices.push(ind.values);
		materialIndices.push(ind.material);
	}
	this.isSkinned = raw.skin != null;
	var vertexArrays = raw.vertex_arrays;
	if(this.isSkinned) {
		vertexArrays.push({ attrib : "bone", values : null, data : "short4norm"});
		vertexArrays.push({ attrib : "weight", values : null, data : "short4norm"});
	}
	var _g = 0;
	var _g1 = vertexArrays.length;
	while(_g < _g1) {
		var i = _g++;
		var padding = vertexArrays[i].padding;
		vertexArrays[i].size = this.getVertexSize(vertexArrays[i].data,padding != null ? padding : 0);
	}
	var parsedUsage = 0;
	if(raw.dynamic_usage != null && raw.dynamic_usage == true) {
		parsedUsage = 1;
	}
	var usage = parsedUsage;
	if(this.isSkinned) {
		var bonea = null;
		var weighta = null;
		var vertex_length = (vertexArrays[0].values.byteLength >> 1) / vertexArrays[0].size | 0;
		var l = vertex_length * 4;
		bonea = kha_arrays_Int16Array._new(l);
		weighta = kha_arrays_Int16Array._new(l);
		var index = 0;
		var ai = 0;
		var _g = 0;
		var _g1 = vertex_length;
		while(_g < _g1) {
			var i = _g++;
			var boneCount = raw.skin.bone_count_array.getInt16(i * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
			var _g2 = index;
			var _g3 = index + boneCount;
			while(_g2 < _g3) {
				var j = _g2++;
				bonea.setInt16(ai * 2,raw.skin.bone_index_array.getInt16(j * 2,kha_arrays_ByteArray.LITTLE_ENDIAN),kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp = ai * 2;
				weighta.setInt16(ai * 2,raw.skin.bone_weight_array.getInt16(j * 2,kha_arrays_ByteArray.LITTLE_ENDIAN),kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp1 = ai * 2;
				++ai;
			}
			var _g4 = boneCount;
			var _g5 = 4;
			while(_g4 < _g5) {
				var j1 = _g4++;
				bonea.setInt16(ai * 2,0,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp2 = ai * 2;
				weighta.setInt16(ai * 2,0,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp3 = ai * 2;
				++ai;
			}
			index += boneCount;
		}
		vertexArrays[vertexArrays.length - 2].values = bonea;
		vertexArrays[vertexArrays.length - 1].values = weighta;
	}
	this.geom = new iron_data_Geometry(this,indices,materialIndices,usage);
	this.geom.name = this.name;
	done(this);
};
$hxClasses["iron.data.MeshData"] = iron_data_MeshData;
iron_data_MeshData.__name__ = true;
iron_data_MeshData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getMeshRawByName(format.mesh_datas,id);
		if(raw == null) {
			haxe_Log.trace("Mesh data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/MeshData.hx", lineNumber : 100, className : "iron.data.MeshData", methodName : "parse"});
			done(null);
		}
		new iron_data_MeshData(raw,function(dat) {
			dat.format = format;
			if(raw.skin != null) {
				dat.geom.skinBoneCounts = raw.skin.bone_count_array;
				dat.geom.skinBoneIndices = raw.skin.bone_index_array;
				dat.geom.skinBoneWeights = raw.skin.bone_weight_array;
				dat.geom.skeletonBoneRefs = raw.skin.bone_ref_array;
				dat.geom.skeletonBoneLens = raw.skin.bone_len_array;
				dat.geom.initSkeletonTransforms(raw.skin.transformsI);
			}
			done(dat);
		});
	});
};
iron_data_MeshData.prototype = {
	getVertexSize: function(vertex_data,padding) {
		if(padding == null) {
			padding = 0;
		}
		switch(vertex_data) {
		case "short2norm":
			return 2 - padding;
		case "short4norm":
			return 4 - padding;
		default:
			return 0;
		}
	}
	,__class__: iron_data_MeshData
};
var iron_data_ParticleData = function(raw,done) {
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.ParticleData"] = iron_data_ParticleData;
iron_data_ParticleData.__name__ = true;
iron_data_ParticleData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getParticleRawByName(format.particle_datas,id);
		if(raw == null) {
			haxe_Log.trace("Particle data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/ParticleData.hx", lineNumber : 21, className : "iron.data.ParticleData", methodName : "parse"});
			done(null);
		}
		new iron_data_ParticleData(raw,done);
	});
};
iron_data_ParticleData.prototype = {
	__class__: iron_data_ParticleData
};
var iron_data_ShaderData = function(raw,done,overrideContext) {
	this.contexts = [];
	var _gthis = this;
	this.raw = raw;
	this.name = raw.name;
	var _g = 0;
	var _g1 = raw.contexts;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		this.contexts.push(null);
	}
	var contextsLoaded = 0;
	var _g = 0;
	var _g1 = raw.contexts.length;
	while(_g < _g1) {
		var i = [_g++];
		var c = raw.contexts[i[0]];
		new iron_data_ShaderContext(c,(function(i) {
			return function(con) {
				_gthis.contexts[i[0]] = con;
				contextsLoaded += 1;
				if(contextsLoaded == raw.contexts.length) {
					done(_gthis);
				}
			};
		})(i),overrideContext);
	}
};
$hxClasses["iron.data.ShaderData"] = iron_data_ShaderData;
iron_data_ShaderData.__name__ = true;
iron_data_ShaderData.parse = function(file,name,done,overrideContext) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getShaderRawByName(format.shader_datas,name);
		if(raw == null) {
			haxe_Log.trace("Shader data \"" + name + "\" not found!",{ fileName : "Sources/iron/data/ShaderData.hx", lineNumber : 54, className : "iron.data.ShaderData", methodName : "parse"});
			done(null);
		}
		new iron_data_ShaderData(raw,done,overrideContext);
	});
};
iron_data_ShaderData.prototype = {
	getContext: function(name) {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.raw.name == name) {
				return c;
			}
		}
		return null;
	}
	,__class__: iron_data_ShaderData
};
var iron_data_ShaderContext = function(raw,done,overrideContext) {
	this.instancingType = 0;
	this.raw = raw;
	if(raw.name == "voxel") {
		done(this);
		return;
	}
	this.overrideContext = overrideContext;
	this.parseVertexStructure();
	this.compile(done);
};
$hxClasses["iron.data.ShaderContext"] = iron_data_ShaderContext;
iron_data_ShaderContext.__name__ = true;
iron_data_ShaderContext.parseData = function(data) {
	if(data == "float1") {
		return 0;
	} else if(data == "float2") {
		return 1;
	} else if(data == "float3") {
		return 2;
	} else if(data == "float4") {
		return 3;
	} else if(data == "short2norm") {
		return 23;
	} else if(data == "short4norm") {
		return 27;
	}
	return 0;
};
iron_data_ShaderContext.prototype = {
	compile: function(done) {
		if(this.pipeState != null) {
			this.pipeState.delete();
		}
		this.pipeState = new kha_graphics4_PipelineState();
		this.constants = [];
		this.textureUnits = [];
		if(this.instancingType > 0) {
			var instStruct = new kha_graphics4_VertexStructure();
			instStruct.add("ipos",2);
			if(this.instancingType == 2 || this.instancingType == 4) {
				instStruct.add("irot",2);
			}
			if(this.instancingType == 3 || this.instancingType == 4) {
				instStruct.add("iscl",2);
			}
			instStruct.instanced = true;
			this.pipeState.inputLayout = [this.structure,instStruct];
		} else {
			this.pipeState.inputLayout = [this.structure];
		}
		this.pipeState.depthWrite = this.raw.depth_write;
		this.pipeState.depthMode = this.getCompareMode(this.raw.compare_mode);
		this.pipeState.cullMode = this.getCullMode(this.raw.cull_mode);
		if(this.raw.blend_source != null) {
			this.pipeState.blendSource = this.getBlendingFactor(this.raw.blend_source);
		}
		if(this.raw.blend_destination != null) {
			this.pipeState.blendDestination = this.getBlendingFactor(this.raw.blend_destination);
		}
		if(this.raw.blend_operation != null) {
			this.pipeState.blendOperation = this.getBlendingOperation(this.raw.blend_operation);
		}
		if(this.raw.alpha_blend_source != null) {
			this.pipeState.alphaBlendSource = this.getBlendingFactor(this.raw.alpha_blend_source);
		}
		if(this.raw.alpha_blend_destination != null) {
			this.pipeState.alphaBlendDestination = this.getBlendingFactor(this.raw.alpha_blend_destination);
		}
		if(this.raw.alpha_blend_operation != null) {
			this.pipeState.alphaBlendOperation = this.getBlendingOperation(this.raw.alpha_blend_operation);
		}
		if(this.raw.color_writes_red != null) {
			var _g = 0;
			var _g1 = this.raw.color_writes_red.length;
			while(_g < _g1) {
				var i = _g++;
				this.pipeState.colorWriteMasksRed[i] = this.raw.color_writes_red[i];
			}
		}
		if(this.raw.color_writes_green != null) {
			var _g = 0;
			var _g1 = this.raw.color_writes_green.length;
			while(_g < _g1) {
				var i = _g++;
				this.pipeState.colorWriteMasksGreen[i] = this.raw.color_writes_green[i];
			}
		}
		if(this.raw.color_writes_blue != null) {
			var _g = 0;
			var _g1 = this.raw.color_writes_blue.length;
			while(_g < _g1) {
				var i = _g++;
				this.pipeState.colorWriteMasksBlue[i] = this.raw.color_writes_blue[i];
			}
		}
		if(this.raw.color_writes_alpha != null) {
			var _g = 0;
			var _g1 = this.raw.color_writes_alpha.length;
			while(_g < _g1) {
				var i = _g++;
				this.pipeState.colorWriteMasksAlpha[i] = this.raw.color_writes_alpha[i];
			}
		}
		if(this.raw.color_attachments != null) {
			this.pipeState.colorAttachmentCount = this.raw.color_attachments.length;
			var _g = 0;
			var _g1 = this.raw.color_attachments.length;
			while(_g < _g1) {
				var i = _g++;
				this.pipeState.colorAttachments[i] = this.getTextureFormat(this.raw.color_attachments[i]);
			}
		}
		var tmp = this.raw.depth_attachment != null;
		if(this.raw.conservative_raster != null) {
			this.pipeState.conservativeRasterization = this.raw.conservative_raster;
		}
		if(this.raw.shader_from_source) {
			this.pipeState.vertexShader = kha_graphics4_VertexShader.fromSource(this.raw.vertex_shader);
			this.pipeState.fragmentShader = kha_graphics4_FragmentShader.fromSource(this.raw.fragment_shader);
			this.finishCompile(done);
		} else {
			var tmp = StringTools.replace(this.raw.fragment_shader,".","_");
			this.pipeState.fragmentShader = Reflect.field(kha_Shaders,tmp);
			var tmp = StringTools.replace(this.raw.vertex_shader,".","_");
			this.pipeState.vertexShader = Reflect.field(kha_Shaders,tmp);
			if(this.raw.geometry_shader != null) {
				var tmp = StringTools.replace(this.raw.geometry_shader,".","_");
				this.pipeState.geometryShader = Reflect.field(kha_Shaders,tmp);
			}
			if(this.raw.tesscontrol_shader != null) {
				var tmp = StringTools.replace(this.raw.tesscontrol_shader,".","_");
				this.pipeState.tessellationControlShader = Reflect.field(kha_Shaders,tmp);
			}
			if(this.raw.tesseval_shader != null) {
				var tmp = StringTools.replace(this.raw.tesseval_shader,".","_");
				this.pipeState.tessellationEvaluationShader = Reflect.field(kha_Shaders,tmp);
			}
			this.finishCompile(done);
		}
	}
	,finishCompile: function(done) {
		if(this.overrideContext != null) {
			if(this.overrideContext.cull_mode != null) {
				this.pipeState.cullMode = this.getCullMode(this.overrideContext.cull_mode);
			}
		}
		this.pipeState.compile();
		if(this.raw.constants != null) {
			var _g = 0;
			var _g1 = this.raw.constants;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				this.addConstant(c);
			}
		}
		if(this.raw.texture_units != null) {
			var _g = 0;
			var _g1 = this.raw.texture_units;
			while(_g < _g1.length) {
				var tu = _g1[_g];
				++_g;
				this.addTexture(tu);
			}
		}
		done(this);
	}
	,parseVertexStructure: function() {
		this.structure = new kha_graphics4_VertexStructure();
		var ipos = false;
		var irot = false;
		var iscl = false;
		var _g = 0;
		var _g1 = this.raw.vertex_elements;
		while(_g < _g1.length) {
			var elem = _g1[_g];
			++_g;
			if(elem.name == "ipos") {
				ipos = true;
				continue;
			}
			if(elem.name == "irot") {
				irot = true;
				continue;
			}
			if(elem.name == "iscl") {
				iscl = true;
				continue;
			}
			this.structure.add(elem.name,iron_data_ShaderContext.parseData(elem.data));
		}
		if(ipos && !irot && !iscl) {
			this.instancingType = 1;
		} else if(ipos && irot && !iscl) {
			this.instancingType = 2;
		} else if(ipos && !irot && iscl) {
			this.instancingType = 3;
		} else if(ipos && irot && iscl) {
			this.instancingType = 4;
		}
	}
	,getCompareMode: function(s) {
		switch(s) {
		case "always":
			return 0;
		case "equal":
			return 2;
		case "greater":
			return 6;
		case "greater_equal":
			return 7;
		case "less":
			return 4;
		case "less_equal":
			return 5;
		case "never":
			return 1;
		case "not_equal":
			return 3;
		default:
			return 4;
		}
	}
	,getCullMode: function(s) {
		switch(s) {
		case "clockwise":
			return 0;
		case "none":
			return 2;
		default:
			return 1;
		}
	}
	,getBlendingOperation: function(s) {
		switch(s) {
		case "add":
			return 0;
		case "max":
			return 4;
		case "min":
			return 3;
		case "reverse_subtract":
			return 2;
		case "subtract":
			return 1;
		default:
			return 0;
		}
	}
	,getBlendingFactor: function(s) {
		switch(s) {
		case "blend_one":
			return 1;
		case "blend_zero":
			return 2;
		case "destination_alpha":
			return 4;
		case "destination_color":
			return 8;
		case "inverse_destination_alpha":
			return 6;
		case "inverse_destination_color":
			return 10;
		case "inverse_source_alpha":
			return 5;
		case "inverse_source_color":
			return 9;
		case "source_alpha":
			return 3;
		case "source_color":
			return 7;
		default:
			return 0;
		}
	}
	,getTextureAddresing: function(s) {
		switch(s) {
		case "mirror":
			return 1;
		case "repeat":
			return 0;
		default:
			return 2;
		}
	}
	,getTextureFilter: function(s) {
		switch(s) {
		case "linear":
			return 1;
		case "point":
			return 0;
		default:
			return 2;
		}
	}
	,getMipmapFilter: function(s) {
		switch(s) {
		case "no":
			return 0;
		case "point":
			return 1;
		default:
			return 2;
		}
	}
	,getTextureFormat: function(s) {
		switch(s) {
		case "DEPTH16":
			return 3;
		case "R16":
			return 6;
		case "R32":
			return 5;
		case "R8":
			return 1;
		case "RGBA128":
			return 2;
		case "RGBA32":
			return 0;
		case "RGBA64":
			return 4;
		default:
			return 0;
		}
	}
	,addConstant: function(c) {
		this.constants.push(this.pipeState.getConstantLocation(c.name));
	}
	,addTexture: function(tu) {
		var unit = this.pipeState.getTextureUnit(tu.name);
		this.textureUnits.push(unit);
	}
	,setTextureParameters: function(g,unitIndex,tex) {
		var unit = this.textureUnits[unitIndex];
		g.setTextureParameters(unit,tex.u_addressing == null ? 0 : this.getTextureAddresing(tex.u_addressing),tex.v_addressing == null ? 0 : this.getTextureAddresing(tex.v_addressing),tex.min_filter == null ? 1 : this.getTextureFilter(tex.min_filter),tex.mag_filter == null ? 1 : this.getTextureFilter(tex.mag_filter),tex.mipmap_filter == null ? 0 : this.getMipmapFilter(tex.mipmap_filter));
	}
	,__class__: iron_data_ShaderContext
};
var iron_data_WorldData = function(raw,done) {
	var _gthis = this;
	this.raw = raw;
	this.name = raw.name;
	if(raw.probe != null) {
		new iron_data_Probe(raw.probe,function(self) {
			_gthis.probe = self;
			_gthis.loadEnvmap(done);
		});
	} else {
		this.loadEnvmap(done);
	}
};
$hxClasses["iron.data.WorldData"] = iron_data_WorldData;
iron_data_WorldData.__name__ = true;
iron_data_WorldData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getWorldRawByName(format.world_datas,id);
		if(raw == null) {
			haxe_Log.trace("World data \"" + id + "\" not found!",{ fileName : "Sources/iron/data/WorldData.hx", lineNumber : 57, className : "iron.data.WorldData", methodName : "parse"});
			done(null);
		}
		new iron_data_WorldData(raw,done);
	});
};
iron_data_WorldData.getEmptyIrradiance = function() {
	if(iron_data_WorldData.emptyIrr == null) {
		iron_data_WorldData.emptyIrr = kha_arrays_Float32Array._new(28);
		var _g = 0;
		var _g1 = iron_data_WorldData.emptyIrr.byteLength >> 2;
		while(_g < _g1) {
			var i = _g++;
			iron_data_WorldData.emptyIrr.setFloat32(i * 4,0.0,true);
		}
	}
	return iron_data_WorldData.emptyIrr;
};
iron_data_WorldData.prototype = {
	loadEnvmap: function(done) {
		var _gthis = this;
		if(this.raw.envmap != null) {
			iron_data_Data.getImage(this.raw.envmap,function(image) {
				_gthis.envmap = image;
				done(_gthis);
			});
		} else {
			done(this);
		}
	}
	,__class__: iron_data_WorldData
};
var iron_data_Probe = function(raw,done) {
	this.radianceMipmaps = [];
	var _gthis = this;
	this.raw = raw;
	this.setIrradiance(function(irr) {
		_gthis.irradiance = irr;
		if(raw.radiance != null) {
			iron_data_Data.getImage(raw.radiance,function(rad) {
				_gthis.radiance = rad;
				while(_gthis.radianceMipmaps.length < raw.radiance_mipmaps) _gthis.radianceMipmaps.push(null);
				var dot = raw.radiance.lastIndexOf(".");
				var ext = raw.radiance.substring(dot);
				var base = raw.radiance.substring(0,dot);
				var mipsLoaded = 0;
				var _g = 0;
				var _g1 = raw.radiance_mipmaps;
				while(_g < _g1) {
					var i = [_g++];
					iron_data_Data.getImage(base + "_" + i[0] + ext,(function(i) {
						return function(mipimg) {
							_gthis.radianceMipmaps[i[0]] = mipimg;
							mipsLoaded += 1;
							if(mipsLoaded == raw.radiance_mipmaps) {
								_gthis.radiance.setMipmaps(_gthis.radianceMipmaps);
								done(_gthis);
							}
						};
					})(i),true);
				}
			});
		} else {
			done(_gthis);
		}
	});
};
$hxClasses["iron.data.Probe"] = iron_data_Probe;
iron_data_Probe.__name__ = true;
iron_data_Probe.prototype = {
	setIrradiance: function(done) {
		if(this.raw.irradiance == null) {
			done(iron_data_WorldData.getEmptyIrradiance());
		} else {
			var ext = StringTools.endsWith(this.raw.irradiance,".json") ? "" : ".arm";
			iron_data_Data.getBlob(this.raw.irradiance + ext,function(b) {
				var irradianceParsed;
				if(ext == "") {
					irradianceParsed = JSON.parse(b.toString());
				} else {
					var i = new haxe_io_BytesInput(b.toBytes());
					i.set_bigEndian(false);
					irradianceParsed = iron_system_ArmPack.read(i);
				}
				var irr = kha_arrays_Float32Array._new(28);
				var v = irradianceParsed.irradiance.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(0,v,true);
				var v = irradianceParsed.irradiance.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(4,v,true);
				var v = irradianceParsed.irradiance.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(8,v,true);
				var v = irradianceParsed.irradiance.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(12,v,true);
				var v = irradianceParsed.irradiance.getFloat32(16,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(16,v,true);
				var v = irradianceParsed.irradiance.getFloat32(20,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(20,v,true);
				var v = irradianceParsed.irradiance.getFloat32(24,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(24,v,true);
				var v = irradianceParsed.irradiance.getFloat32(28,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(28,v,true);
				var v = irradianceParsed.irradiance.getFloat32(32,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(32,v,true);
				var v = irradianceParsed.irradiance.getFloat32(36,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(36,v,true);
				var v = irradianceParsed.irradiance.getFloat32(40,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(40,v,true);
				var v = irradianceParsed.irradiance.getFloat32(44,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(44,v,true);
				var v = irradianceParsed.irradiance.getFloat32(48,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(48,v,true);
				var v = irradianceParsed.irradiance.getFloat32(52,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(52,v,true);
				var v = irradianceParsed.irradiance.getFloat32(56,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(56,v,true);
				var v = irradianceParsed.irradiance.getFloat32(60,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(60,v,true);
				var v = irradianceParsed.irradiance.getFloat32(64,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(64,v,true);
				var v = irradianceParsed.irradiance.getFloat32(68,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(68,v,true);
				var v = irradianceParsed.irradiance.getFloat32(72,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(72,v,true);
				var v = irradianceParsed.irradiance.getFloat32(76,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(76,v,true);
				var v = irradianceParsed.irradiance.getFloat32(80,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(80,v,true);
				var v = irradianceParsed.irradiance.getFloat32(84,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(84,v,true);
				var v = irradianceParsed.irradiance.getFloat32(88,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(88,v,true);
				var v = irradianceParsed.irradiance.getFloat32(92,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(92,v,true);
				var v = irradianceParsed.irradiance.getFloat32(96,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(96,v,true);
				var v = irradianceParsed.irradiance.getFloat32(100,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(100,v,true);
				var v = irradianceParsed.irradiance.getFloat32(104,kha_arrays_ByteArray.LITTLE_ENDIAN);
				irr.setFloat32(104,v,true);
				done(irr);
			});
		}
	}
	,__class__: iron_data_Probe
};
var iron_math_Mat3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this.self = new kha_math_FastMatrix3(_00,_10,_20,_01,_11,_21,_02,_12,_22);
};
$hxClasses["iron.math.Mat3"] = iron_math_Mat3;
iron_math_Mat3.__name__ = true;
iron_math_Mat3.prototype = {
	__class__: iron_math_Mat3
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = true;
kha_math_FastMatrix4.prototype = {
	__class__: kha_math_FastMatrix4
};
var iron_math_Vec4 = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Vec4"] = iron_math_Vec4;
iron_math_Vec4.__name__ = true;
iron_math_Vec4.prototype = {
	__class__: iron_math_Vec4
};
var iron_math_Mat4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this.self = new kha_math_FastMatrix4(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
};
$hxClasses["iron.math.Mat4"] = iron_math_Mat4;
iron_math_Mat4.__name__ = true;
iron_math_Mat4.prototype = {
	__class__: iron_math_Mat4
};
var iron_math_Quat = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Quat"] = iron_math_Quat;
iron_math_Quat.__name__ = true;
iron_math_Quat.prototype = {
	__class__: iron_math_Quat
};
var iron_math_Vec2 = function(x,y) {
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["iron.math.Vec2"] = iron_math_Vec2;
iron_math_Vec2.__name__ = true;
iron_math_Vec2.prototype = {
	__class__: iron_math_Vec2
};
var iron_object_Animation = function() {
	this.markerEvents = null;
	this.lastFrameIndex = -1;
	this.blendFactor = 0.0;
	this.blendAction = "";
	this.blendCurrent = 0.0;
	this.blendTime = 0.0;
	this.frameTime = 0.0166666666666666664;
	this.paused = false;
	this.onComplete = null;
	this.frameIndex = 0;
	this.loop = true;
	this.speed = 1.0;
	this.time = 0.0;
	this.action = "";
	iron_Scene.active.animations.push(this);
	if(iron_Scene.active.raw.frame_time != null) {
		this.frameTime = iron_Scene.active.raw.frame_time;
	}
	this.play();
};
$hxClasses["iron.object.Animation"] = iron_object_Animation;
iron_object_Animation.__name__ = true;
iron_object_Animation.prototype = {
	play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		if(blendTime > 0) {
			this.blendTime = blendTime;
			this.blendCurrent = 0.0;
			this.blendAction = this.action;
			this.frameIndex = 0;
			this.time = 0.0;
		} else {
			this.frameIndex = -1;
		}
		this.action = action;
		this.onComplete = onComplete;
		this.speed = speed;
		this.loop = loop;
		this.paused = false;
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.animations,this);
	}
	,update: function(delta) {
		if(this.paused || this.speed == 0.0) {
			return;
		}
		this.time += delta * this.speed;
		if(this.blendTime > 0 && this.blendFactor == 0) {
			this.blendCurrent += delta;
			if(this.blendCurrent >= this.blendTime) {
				this.blendTime = 0.0;
			}
		}
	}
	,isTrackEnd: function(track) {
		if(this.speed > 0) {
			return this.frameIndex >= (track.frames.byteLength >> 2) - 1;
		} else {
			return this.frameIndex <= 0;
		}
	}
	,rewind: function(track) {
		this.frameIndex = this.speed > 0 ? 0 : (track.frames.byteLength >> 2) - 1;
		this.time = track.frames.getUint32(this.frameIndex * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
	}
	,updateTrack: function(anim) {
		if(anim == null) {
			return;
		}
		var track = anim.tracks[0];
		if(this.frameIndex == -1) {
			this.rewind(track);
		}
		var sign = this.speed > 0 ? 1 : -1;
		while(true) {
			var frameValues = track.frames;
			if(!(this.speed > 0 ? this.frameIndex + 1 < frameValues.byteLength >> 2 && this.time > frameValues.getUint32((this.frameIndex + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime : this.frameIndex - 1 > -1 && this.time < frameValues.getUint32((this.frameIndex - 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime)) {
				break;
			}
			this.frameIndex += sign;
		}
		if(this.markerEvents != null && anim.marker_names != null && this.frameIndex != this.lastFrameIndex) {
			var _g = 0;
			var _g1 = anim.marker_frames.byteLength >> 2;
			while(_g < _g1) {
				var i = _g++;
				if(this.frameIndex == anim.marker_frames.getUint32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN)) {
					var ar = this.markerEvents.h[anim.marker_names[i]];
					if(ar != null) {
						var _g2 = 0;
						while(_g2 < ar.length) {
							var f = ar[_g2];
							++_g2;
							f();
						}
					}
				}
			}
			this.lastFrameIndex = this.frameIndex;
		}
		if(this.isTrackEnd(track)) {
			if(this.loop || this.blendTime > 0) {
				this.rewind(track);
			} else {
				this.frameIndex -= sign;
				this.paused = true;
			}
			if(this.onComplete != null && this.blendTime == 0) {
				this.onComplete();
			}
		}
	}
	,updateAnimSampled: function(anim,m) {
		if(anim == null) {
			return;
		}
		var track = anim.tracks[0];
		var sign = this.speed > 0 ? 1 : -1;
		var t = this.time;
		var ti = this.frameIndex;
		var t1 = track.frames.getUint32(ti * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
		var t2 = track.frames.getUint32((ti + sign) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
		var s = (t - t1) / (t2 - t1);
		var _this = iron_object_Animation.m1;
		var a = track.values;
		var offset = ti * 16;
		if(offset == null) {
			offset = 0;
		}
		_this.self._00 = a.getFloat32(offset * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._10 = a.getFloat32((1 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._20 = a.getFloat32((2 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._30 = a.getFloat32((3 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._01 = a.getFloat32((4 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._11 = a.getFloat32((5 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._21 = a.getFloat32((6 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._31 = a.getFloat32((7 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._02 = a.getFloat32((8 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._12 = a.getFloat32((9 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._22 = a.getFloat32((10 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._32 = a.getFloat32((11 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._03 = a.getFloat32((12 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._13 = a.getFloat32((13 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._23 = a.getFloat32((14 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._33 = a.getFloat32((15 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		var _this = iron_object_Animation.m2;
		var a = track.values;
		var offset = (ti + sign) * 16;
		if(offset == null) {
			offset = 0;
		}
		_this.self._00 = a.getFloat32(offset * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._10 = a.getFloat32((1 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._20 = a.getFloat32((2 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._30 = a.getFloat32((3 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._01 = a.getFloat32((4 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._11 = a.getFloat32((5 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._21 = a.getFloat32((6 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._31 = a.getFloat32((7 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._02 = a.getFloat32((8 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._12 = a.getFloat32((9 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._22 = a.getFloat32((10 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._32 = a.getFloat32((11 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._03 = a.getFloat32((12 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._13 = a.getFloat32((13 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._23 = a.getFloat32((14 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		_this.self._33 = a.getFloat32((15 + offset) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		var _this = iron_object_Animation.m1;
		var loc = iron_object_Animation.vpos;
		var quat = iron_object_Animation.q1;
		var scale = iron_object_Animation.vscl;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._10;
		_this1.y = _this.self._11;
		_this1.z = _this.self._12;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.y = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._20;
		_this1.y = _this.self._21;
		_this1.z = _this.self._22;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.z = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = _this.self;
		var m3 = _this1._12;
		var m4 = _this1._22;
		var m5 = _this1._32;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c00 = _this1._11 * (m4 * m8 - m5 * m7) - _this1._21 * (m3 * m8 - m5 * m6) + _this1._31 * (m3 * m7 - m4 * m6);
		var m3 = _this1._12;
		var m4 = _this1._22;
		var m5 = _this1._32;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c01 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		var m3 = _this1._11;
		var m4 = _this1._21;
		var m5 = _this1._31;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c02 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		var m3 = _this1._11;
		var m4 = _this1._21;
		var m5 = _this1._31;
		var m6 = _this1._12;
		var m7 = _this1._22;
		var m8 = _this1._32;
		var c03 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		if(_this1._00 * c00 - _this1._01 * c01 + _this1._02 * c02 - _this1._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		var m1 = iron_math_Mat4.helpMat;
		var m11 = m1.self._00;
		var m12 = m1.self._10;
		var m13 = m1.self._20;
		var m21 = m1.self._01;
		var m22 = m1.self._11;
		var m23 = m1.self._21;
		var m31 = m1.self._02;
		var m32 = m1.self._12;
		var m33 = m1.self._22;
		var tr = m11 + m22 + m33;
		var s1 = 0.0;
		if(tr > 0) {
			s1 = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s1;
			quat.x = (m32 - m23) * s1;
			quat.y = (m13 - m31) * s1;
			quat.z = (m21 - m12) * s1;
		} else if(m11 > m22 && m11 > m33) {
			s1 = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			quat.w = (m32 - m23) / s1;
			quat.x = 0.25 * s1;
			quat.y = (m12 + m21) / s1;
			quat.z = (m13 + m31) / s1;
		} else if(m22 > m33) {
			s1 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			quat.w = (m13 - m31) / s1;
			quat.x = (m12 + m21) / s1;
			quat.y = 0.25 * s1;
			quat.z = (m23 + m32) / s1;
		} else {
			s1 = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			quat.w = (m21 - m12) / s1;
			quat.x = (m13 + m31) / s1;
			quat.y = (m23 + m32) / s1;
			quat.z = 0.25 * s1;
		}
		var _this = iron_object_Animation.m2;
		var loc = iron_object_Animation.vpos2;
		var quat = iron_object_Animation.q2;
		var scale = iron_object_Animation.vscl2;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._10;
		_this1.y = _this.self._11;
		_this1.z = _this.self._12;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.y = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._20;
		_this1.y = _this.self._21;
		_this1.z = _this.self._22;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.z = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = _this.self;
		var m3 = _this1._12;
		var m4 = _this1._22;
		var m5 = _this1._32;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c00 = _this1._11 * (m4 * m8 - m5 * m7) - _this1._21 * (m3 * m8 - m5 * m6) + _this1._31 * (m3 * m7 - m4 * m6);
		var m3 = _this1._12;
		var m4 = _this1._22;
		var m5 = _this1._32;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c01 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		var m3 = _this1._11;
		var m4 = _this1._21;
		var m5 = _this1._31;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c02 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		var m3 = _this1._11;
		var m4 = _this1._21;
		var m5 = _this1._31;
		var m6 = _this1._12;
		var m7 = _this1._22;
		var m8 = _this1._32;
		var c03 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		if(_this1._00 * c00 - _this1._01 * c01 + _this1._02 * c02 - _this1._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		var m1 = iron_math_Mat4.helpMat;
		var m11 = m1.self._00;
		var m12 = m1.self._10;
		var m13 = m1.self._20;
		var m21 = m1.self._01;
		var m22 = m1.self._11;
		var m23 = m1.self._21;
		var m31 = m1.self._02;
		var m32 = m1.self._12;
		var m33 = m1.self._22;
		var tr = m11 + m22 + m33;
		var s1 = 0.0;
		if(tr > 0) {
			s1 = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s1;
			quat.x = (m32 - m23) * s1;
			quat.y = (m13 - m31) * s1;
			quat.z = (m21 - m12) * s1;
		} else if(m11 > m22 && m11 > m33) {
			s1 = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			quat.w = (m32 - m23) / s1;
			quat.x = 0.25 * s1;
			quat.y = (m12 + m21) / s1;
			quat.z = (m13 + m31) / s1;
		} else if(m22 > m33) {
			s1 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			quat.w = (m13 - m31) / s1;
			quat.x = (m12 + m21) / s1;
			quat.y = 0.25 * s1;
			quat.z = (m23 + m32) / s1;
		} else {
			s1 = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			quat.w = (m21 - m12) / s1;
			quat.x = (m13 + m31) / s1;
			quat.y = (m23 + m32) / s1;
			quat.z = 0.25 * s1;
		}
		var _this = iron_object_Animation.vp;
		var from = iron_object_Animation.vpos;
		var to = iron_object_Animation.vpos2;
		_this.x = from.x + (to.x - from.x) * s;
		_this.y = from.y + (to.y - from.y) * s;
		_this.z = from.z + (to.z - from.z) * s;
		var _this = iron_object_Animation.vs;
		var from = iron_object_Animation.vscl;
		var to = iron_object_Animation.vscl2;
		_this.x = from.x + (to.x - from.x) * s;
		_this.y = from.y + (to.y - from.y) * s;
		_this.z = from.z + (to.z - from.z) * s;
		var _this = iron_object_Animation.q3;
		var from = iron_object_Animation.q1;
		var to = iron_object_Animation.q2;
		var fromx = from.x;
		var fromy = from.y;
		var fromz = from.z;
		var fromw = from.w;
		var dot = from.x * to.x + from.y * to.y + from.z * to.z + from.w * to.w;
		if(dot < 0.0) {
			fromx = -fromx;
			fromy = -fromy;
			fromz = -fromz;
			fromw = -fromw;
		}
		_this.x = fromx + (to.x - fromx) * s;
		_this.y = fromy + (to.y - fromy) * s;
		_this.z = fromz + (to.z - fromz) * s;
		_this.w = fromw + (to.w - fromw) * s;
		var l = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z + _this.w * _this.w);
		if(l == 0.0) {
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 0;
		} else {
			l = 1.0 / l;
			_this.x *= l;
			_this.y *= l;
			_this.z *= l;
			_this.w *= l;
		}
		var q = iron_object_Animation.q3;
		var x = q.x;
		var y = q.y;
		var z = q.z;
		var w = q.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		m.self._00 = 1.0 - (yy + zz);
		m.self._10 = xy - wz;
		m.self._20 = xz + wy;
		m.self._01 = xy + wz;
		m.self._11 = 1.0 - (xx + zz);
		m.self._21 = yz - wx;
		m.self._02 = xz - wy;
		m.self._12 = yz + wx;
		m.self._22 = 1.0 - (xx + yy);
		m.self._03 = 0.0;
		m.self._13 = 0.0;
		m.self._23 = 0.0;
		m.self._30 = 0.0;
		m.self._31 = 0.0;
		m.self._32 = 0.0;
		m.self._33 = 1.0;
		var v = iron_object_Animation.vs;
		var x = v.x;
		var y = v.y;
		var z = v.z;
		m.self._00 *= x;
		m.self._01 *= x;
		m.self._02 *= x;
		m.self._03 *= x;
		m.self._10 *= y;
		m.self._11 *= y;
		m.self._12 *= y;
		m.self._13 *= y;
		m.self._20 *= z;
		m.self._21 *= z;
		m.self._22 *= z;
		m.self._23 *= z;
		m.self._30 = iron_object_Animation.vp.x;
		m.self._31 = iron_object_Animation.vp.y;
		m.self._32 = iron_object_Animation.vp.z;
	}
	,__class__: iron_object_Animation
};
var iron_object_BoneAnimation = function(armatureName) {
	if(armatureName == null) {
		armatureName = "";
	}
	this.onUpdates = null;
	this.relativeBoneConstraints = false;
	this.constraintMats = null;
	this.constraintTargetsI = null;
	this.constraintTargets = null;
	this.boneChildren = null;
	this.matsFastBlendSort = [];
	this.matsFastBlend = [];
	this.matsFastSort = [];
	this.matsFast = [];
	this.applyParent = null;
	this.absMats = null;
	this.skeletonMatsBlend = null;
	this.skeletonBonesBlend = null;
	this.skeletonMats = null;
	this.skeletonBones = null;
	iron_object_Animation.call(this);
	this.isSampled = false;
	var _g = 0;
	var _g1 = iron_Scene.active.armatures;
	while(_g < _g1.length) {
		var a = _g1[_g];
		++_g;
		if(a.name == armatureName) {
			this.armature = a;
			break;
		}
	}
};
$hxClasses["iron.object.BoneAnimation"] = iron_object_BoneAnimation;
iron_object_BoneAnimation.__name__ = true;
iron_object_BoneAnimation.__super__ = iron_object_Animation;
iron_object_BoneAnimation.prototype = $extend(iron_object_Animation.prototype,{
	setSkin: function(mo) {
		var _gthis = this;
		this.object = mo;
		this.data = mo != null ? mo.data : null;
		this.isSkinned = this.data != null && this.data.isSkinned;
		if(this.isSkinned) {
			var boneSize = 8;
			this.skinBuffer = kha_arrays_Float32Array._new(iron_object_BoneAnimation.skinMaxBones * boneSize);
			var _g = 0;
			var _g1 = this.skinBuffer.byteLength >> 2;
			while(_g < _g1) {
				var i = _g++;
				this.skinBuffer.setFloat32(i * 4,0,true);
			}
			var _this = this.object.transform.rot;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1;
			this.object.transform.buildMatrix();
			var refs = mo.parent.raw.bone_actions;
			if(refs != null && refs.length > 0) {
				iron_data_Data.getSceneRaw(refs[0],function(action) {
					_gthis.play(action.name);
				});
			}
		}
		if(this.object.parent.raw.relative_bone_constraints) {
			this.relativeBoneConstraints = true;
		}
	}
	,addBoneChild: function(bone,o) {
		if(this.boneChildren == null) {
			this.boneChildren = new haxe_ds_StringMap();
		}
		var ar = this.boneChildren.h[bone];
		if(ar == null) {
			ar = [];
			this.boneChildren.h[bone] = ar;
		}
		ar.push(o);
	}
	,updateBoneChildren: function(bone,bm) {
		var ar = this.boneChildren.h[bone.name];
		if(ar == null) {
			return;
		}
		var _g = 0;
		while(_g < ar.length) {
			var o = ar[_g];
			++_g;
			var t = o.transform;
			if(t.boneParent == null) {
				t.boneParent = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			}
			if(o.raw.parent_bone_tail != null) {
				if(o.raw.parent_bone_connected || this.isSkinned) {
					var v = o.raw.parent_bone_tail;
					var _this = t.boneParent;
					var x = v.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var y = v.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var z = v.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
					if(z == null) {
						z = 0.0;
					}
					if(y == null) {
						y = 0.0;
					}
					if(x == null) {
						x = 0.0;
					}
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = x;
					_this.self._31 = y;
					_this.self._32 = z;
					_this.self._33 = 1.0;
					var _this1 = t.boneParent;
					var a00 = _this1.self._00;
					var a01 = _this1.self._01;
					var a02 = _this1.self._02;
					var a03 = _this1.self._03;
					var a10 = _this1.self._10;
					var a11 = _this1.self._11;
					var a12 = _this1.self._12;
					var a13 = _this1.self._13;
					var a20 = _this1.self._20;
					var a21 = _this1.self._21;
					var a22 = _this1.self._22;
					var a23 = _this1.self._23;
					var a30 = _this1.self._30;
					var a31 = _this1.self._31;
					var a32 = _this1.self._32;
					var a33 = _this1.self._33;
					var b0 = bm.self._00;
					var b1 = bm.self._10;
					var b2 = bm.self._20;
					var b3 = bm.self._30;
					_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._01;
					b1 = bm.self._11;
					b2 = bm.self._21;
					b3 = bm.self._31;
					_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._02;
					b1 = bm.self._12;
					b2 = bm.self._22;
					b3 = bm.self._32;
					_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = bm.self._03;
					b1 = bm.self._13;
					b2 = bm.self._23;
					b3 = bm.self._33;
					_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				} else {
					var v1 = o.raw.parent_bone_tail_pose;
					var _this2 = t.boneParent;
					_this2.self._00 = bm.self._00;
					_this2.self._01 = bm.self._01;
					_this2.self._02 = bm.self._02;
					_this2.self._03 = bm.self._03;
					_this2.self._10 = bm.self._10;
					_this2.self._11 = bm.self._11;
					_this2.self._12 = bm.self._12;
					_this2.self._13 = bm.self._13;
					_this2.self._20 = bm.self._20;
					_this2.self._21 = bm.self._21;
					_this2.self._22 = bm.self._22;
					_this2.self._23 = bm.self._23;
					_this2.self._30 = bm.self._30;
					_this2.self._31 = bm.self._31;
					_this2.self._32 = bm.self._32;
					_this2.self._33 = bm.self._33;
					var _this3 = t.boneParent;
					var x1 = v1.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var y1 = v1.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var z1 = v1.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
					_this3.self._00 += x1 * _this3.self._03;
					_this3.self._01 += y1 * _this3.self._03;
					_this3.self._02 += z1 * _this3.self._03;
					_this3.self._10 += x1 * _this3.self._13;
					_this3.self._11 += y1 * _this3.self._13;
					_this3.self._12 += z1 * _this3.self._13;
					_this3.self._20 += x1 * _this3.self._23;
					_this3.self._21 += y1 * _this3.self._23;
					_this3.self._22 += z1 * _this3.self._23;
					_this3.self._30 += x1 * _this3.self._33;
					_this3.self._31 += y1 * _this3.self._33;
					_this3.self._32 += z1 * _this3.self._33;
				}
			} else {
				var _this4 = t.boneParent;
				_this4.self._00 = bm.self._00;
				_this4.self._01 = bm.self._01;
				_this4.self._02 = bm.self._02;
				_this4.self._03 = bm.self._03;
				_this4.self._10 = bm.self._10;
				_this4.self._11 = bm.self._11;
				_this4.self._12 = bm.self._12;
				_this4.self._13 = bm.self._13;
				_this4.self._20 = bm.self._20;
				_this4.self._21 = bm.self._21;
				_this4.self._22 = bm.self._22;
				_this4.self._23 = bm.self._23;
				_this4.self._30 = bm.self._30;
				_this4.self._31 = bm.self._31;
				_this4.self._32 = bm.self._32;
				_this4.self._33 = bm.self._33;
			}
			t.buildMatrix();
		}
	}
	,numParents: function(b) {
		var i = 0;
		var p = b.parent;
		while(p != null) {
			++i;
			p = p.parent;
		}
		return i;
	}
	,setMats: function() {
		var _gthis = this;
		while(this.matsFast.length < this.skeletonBones.length) {
			this.matsFast.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
			this.matsFastSort.push(this.matsFastSort.length);
		}
		this.matsFastSort.sort(function(a,b) {
			var i = _gthis.numParents(_gthis.skeletonBones[a]);
			var j = _gthis.numParents(_gthis.skeletonBones[b]);
			if(i < j) {
				return -1;
			} else if(i > j) {
				return 1;
			} else {
				return 0;
			}
		});
		if(this.skeletonBonesBlend != null) {
			while(this.matsFastBlend.length < this.skeletonBonesBlend.length) {
				this.matsFastBlend.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
				this.matsFastBlendSort.push(this.matsFastBlendSort.length);
			}
			this.matsFastBlendSort.sort(function(a,b) {
				var i = _gthis.numParents(_gthis.skeletonBonesBlend[a]);
				var j = _gthis.numParents(_gthis.skeletonBonesBlend[b]);
				if(i < j) {
					return -1;
				} else if(i > j) {
					return 1;
				} else {
					return 0;
				}
			});
		}
	}
	,setAction: function(action) {
		if(this.isSkinned) {
			this.skeletonBones = this.data.geom.actions.h[action];
			this.skeletonMats = this.data.geom.mats.h[action];
			this.skeletonBonesBlend = null;
			this.skeletonMatsBlend = null;
		} else {
			this.armature.initMats();
			var a = this.armature.getAction(action);
			this.skeletonBones = a.bones;
			this.skeletonMats = a.mats;
		}
		this.setMats();
	}
	,setActionBlend: function(action) {
		if(this.isSkinned) {
			this.skeletonBonesBlend = this.skeletonBones;
			this.skeletonMatsBlend = this.skeletonMats;
			this.skeletonBones = this.data.geom.actions.h[action];
			this.skeletonMats = this.data.geom.mats.h[action];
		} else {
			this.armature.initMats();
			var a = this.armature.getAction(action);
			this.skeletonBones = a.bones;
			this.skeletonMats = a.mats;
		}
		this.setMats();
	}
	,play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.2;
		}
		if(action == null) {
			action = "";
		}
		iron_object_Animation.prototype.play.call(this,action,onComplete,blendTime,speed,loop);
		if(action != "") {
			if(blendTime > 0) {
				this.setActionBlend(action);
			} else {
				this.setAction(action);
			}
		}
		this.blendFactor = 0.0;
	}
	,update: function(delta) {
		if(!this.isSkinned && this.skeletonBones == null) {
			this.setAction(this.armature.actions[0].name);
		}
		if(this.object != null && (!this.object.visible || this.object.culled)) {
			return;
		}
		if(this.skeletonBones == null || this.skeletonBones.length == 0) {
			return;
		}
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.paused || this.speed == 0.0) {
			return;
		}
		var lastBones = this.skeletonBones;
		var _g = 0;
		var _g1 = this.skeletonBones;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.anim != null) {
				this.updateTrack(b.anim);
				break;
			}
		}
		if(lastBones != this.skeletonBones) {
			return;
		}
		var _g = 0;
		var _g1 = this.skeletonBones.length;
		while(_g < _g1) {
			var i = _g++;
			if(!this.skeletonBones[i].is_ik_fk_only) {
				this.updateAnimSampled(this.skeletonBones[i].anim,this.skeletonMats[i]);
			}
		}
		if(this.blendTime > 0 && this.skeletonBonesBlend != null) {
			var _g = 0;
			var _g1 = this.skeletonBonesBlend;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				if(b.anim != null) {
					this.updateTrack(b.anim);
					break;
				}
			}
			var _g = 0;
			var _g1 = this.skeletonBonesBlend.length;
			while(_g < _g1) {
				var i = _g++;
				this.updateAnimSampled(this.skeletonBonesBlend[i].anim,this.skeletonMatsBlend[i]);
			}
		}
		this.updateConstraints();
		if(this.onUpdates != null) {
			var i = 0;
			var l = this.onUpdates.length;
			while(i < l) {
				this.onUpdates[i]();
				if(l <= this.onUpdates.length) {
					++i;
				} else {
					l = this.onUpdates.length;
				}
			}
		}
		var _g = 0;
		var _g1 = this.skeletonBones.length;
		while(_g < _g1) {
			var i = _g++;
			this.multParent(this.matsFastSort[i],this.matsFast,this.skeletonBones,this.skeletonMats);
		}
		if(this.skeletonBonesBlend != null) {
			var _g = 0;
			var _g1 = this.skeletonBonesBlend.length;
			while(_g < _g1) {
				var i = _g++;
				this.multParent(this.matsFastBlendSort[i],this.matsFastBlend,this.skeletonBonesBlend,this.skeletonMatsBlend);
			}
		}
		if(this.isSkinned) {
			this.updateSkinGpu();
		} else {
			this.updateBonesOnly();
		}
	}
	,multParent: function(i,fasts,bones,mats) {
		var f = fasts[i];
		if(this.applyParent != null && !this.applyParent[i]) {
			var m = mats[i];
			f.self._00 = m.self._00;
			f.self._01 = m.self._01;
			f.self._02 = m.self._02;
			f.self._03 = m.self._03;
			f.self._10 = m.self._10;
			f.self._11 = m.self._11;
			f.self._12 = m.self._12;
			f.self._13 = m.self._13;
			f.self._20 = m.self._20;
			f.self._21 = m.self._21;
			f.self._22 = m.self._22;
			f.self._23 = m.self._23;
			f.self._30 = m.self._30;
			f.self._31 = m.self._31;
			f.self._32 = m.self._32;
			f.self._33 = m.self._33;
			return;
		}
		var p = bones[i].parent;
		var bi = this.getBoneIndex(p,bones);
		if(p == null || bi == -1) {
			var m = mats[i];
			f.self._00 = m.self._00;
			f.self._01 = m.self._01;
			f.self._02 = m.self._02;
			f.self._03 = m.self._03;
			f.self._10 = m.self._10;
			f.self._11 = m.self._11;
			f.self._12 = m.self._12;
			f.self._13 = m.self._13;
			f.self._20 = m.self._20;
			f.self._21 = m.self._21;
			f.self._22 = m.self._22;
			f.self._23 = m.self._23;
			f.self._30 = m.self._30;
			f.self._31 = m.self._31;
			f.self._32 = m.self._32;
			f.self._33 = m.self._33;
		} else {
			var b = fasts[bi];
			var a = mats[i];
			var a00 = a.self._00;
			var a01 = a.self._01;
			var a02 = a.self._02;
			var a03 = a.self._03;
			var a10 = a.self._10;
			var a11 = a.self._11;
			var a12 = a.self._12;
			var a13 = a.self._13;
			var a20 = a.self._20;
			var a21 = a.self._21;
			var a22 = a.self._22;
			var a23 = a.self._23;
			var a30 = a.self._30;
			var a31 = a.self._31;
			var a32 = a.self._32;
			var a33 = a.self._33;
			var b0 = b.self._00;
			var b1 = b.self._10;
			var b2 = b.self._20;
			var b3 = b.self._30;
			f.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			f.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			f.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._03;
			b1 = b.self._13;
			b2 = b.self._23;
			b3 = b.self._33;
			f.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			f.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			f.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			f.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		}
	}
	,getConstraintsFromScene: function(cs) {
		if(this.constraintTargets == null) {
			this.constraintTargets = [];
			this.constraintTargetsI = [];
			var _g = 0;
			while(_g < cs.length) {
				var c = cs[_g];
				++_g;
				var o = iron_Scene.active.getChild(c.target);
				this.constraintTargets.push(o);
				var m = null;
				if(o != null) {
					var _this = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
					var m1 = o.transform.world;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
					m = _this;
					var a00 = m.self._00;
					var a01 = m.self._01;
					var a02 = m.self._02;
					var a03 = m.self._03;
					var a10 = m.self._10;
					var a11 = m.self._11;
					var a12 = m.self._12;
					var a13 = m.self._13;
					var a20 = m.self._20;
					var a21 = m.self._21;
					var a22 = m.self._22;
					var a23 = m.self._23;
					var a30 = m.self._30;
					var a31 = m.self._31;
					var a32 = m.self._32;
					var a33 = m.self._33;
					var b00 = a00 * a11 - a01 * a10;
					var b01 = a00 * a12 - a02 * a10;
					var b02 = a00 * a13 - a03 * a10;
					var b03 = a01 * a12 - a02 * a11;
					var b04 = a01 * a13 - a03 * a11;
					var b05 = a02 * a13 - a03 * a12;
					var b06 = a20 * a31 - a21 * a30;
					var b07 = a20 * a32 - a22 * a30;
					var b08 = a20 * a33 - a23 * a30;
					var b09 = a21 * a32 - a22 * a31;
					var b10 = a21 * a33 - a23 * a31;
					var b11 = a22 * a33 - a23 * a32;
					var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
					if(det == 0.0) {
						m.self._00 = 1.0;
						m.self._01 = 0.0;
						m.self._02 = 0.0;
						m.self._03 = 0.0;
						m.self._10 = 0.0;
						m.self._11 = 1.0;
						m.self._12 = 0.0;
						m.self._13 = 0.0;
						m.self._20 = 0.0;
						m.self._21 = 0.0;
						m.self._22 = 1.0;
						m.self._23 = 0.0;
						m.self._30 = 0.0;
						m.self._31 = 0.0;
						m.self._32 = 0.0;
						m.self._33 = 1.0;
					} else {
						det = 1.0 / det;
						m.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
						m.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
						m.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
						m.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
						m.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
						m.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
						m.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
						m.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
						m.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
						m.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
						m.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
						m.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
						m.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
						m.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
						m.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
						m.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
					}
				}
				this.constraintTargetsI.push(m);
			}
			this.constraintMats = new haxe_ds_ObjectMap();
		}
	}
	,getConstraintsFromParentRelative: function(cs) {
		if(this.constraintTargets == null) {
			this.constraintTargets = [];
			this.constraintTargetsI = [];
			var conParent = this.object.parent.parent;
			if(conParent == null) {
				return;
			}
			var _g = 0;
			while(_g < cs.length) {
				var c = cs[_g];
				++_g;
				var o = conParent.getChild(c.target);
				this.constraintTargets.push(o);
				var m = null;
				if(o != null) {
					var _this = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
					var m1 = o.transform.world;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
					m = _this;
					var a00 = m.self._00;
					var a01 = m.self._01;
					var a02 = m.self._02;
					var a03 = m.self._03;
					var a10 = m.self._10;
					var a11 = m.self._11;
					var a12 = m.self._12;
					var a13 = m.self._13;
					var a20 = m.self._20;
					var a21 = m.self._21;
					var a22 = m.self._22;
					var a23 = m.self._23;
					var a30 = m.self._30;
					var a31 = m.self._31;
					var a32 = m.self._32;
					var a33 = m.self._33;
					var b00 = a00 * a11 - a01 * a10;
					var b01 = a00 * a12 - a02 * a10;
					var b02 = a00 * a13 - a03 * a10;
					var b03 = a01 * a12 - a02 * a11;
					var b04 = a01 * a13 - a03 * a11;
					var b05 = a02 * a13 - a03 * a12;
					var b06 = a20 * a31 - a21 * a30;
					var b07 = a20 * a32 - a22 * a30;
					var b08 = a20 * a33 - a23 * a30;
					var b09 = a21 * a32 - a22 * a31;
					var b10 = a21 * a33 - a23 * a31;
					var b11 = a22 * a33 - a23 * a32;
					var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
					if(det == 0.0) {
						m.self._00 = 1.0;
						m.self._01 = 0.0;
						m.self._02 = 0.0;
						m.self._03 = 0.0;
						m.self._10 = 0.0;
						m.self._11 = 1.0;
						m.self._12 = 0.0;
						m.self._13 = 0.0;
						m.self._20 = 0.0;
						m.self._21 = 0.0;
						m.self._22 = 1.0;
						m.self._23 = 0.0;
						m.self._30 = 0.0;
						m.self._31 = 0.0;
						m.self._32 = 0.0;
						m.self._33 = 1.0;
					} else {
						det = 1.0 / det;
						m.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
						m.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
						m.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
						m.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
						m.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
						m.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
						m.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
						m.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
						m.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
						m.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
						m.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
						m.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
						m.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
						m.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
						m.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
						m.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
					}
				}
				this.constraintTargetsI.push(m);
			}
			this.constraintMats = new haxe_ds_ObjectMap();
		}
	}
	,updateConstraints: function() {
		if(this.data == null) {
			return;
		}
		var cs = this.data.raw.skin.constraints;
		if(cs == null) {
			return;
		}
		if(this.relativeBoneConstraints) {
			this.getConstraintsFromParentRelative(cs);
		} else {
			this.getConstraintsFromScene(cs);
		}
		var _g = 0;
		var _g1 = cs.length;
		while(_g < _g1) {
			var i = _g++;
			var c = cs[i];
			var bone = this.getBone(c.bone);
			if(bone == null) {
				continue;
			}
			var o = this.constraintTargets[i];
			if(o == null) {
				continue;
			}
			if(c.type == "CHILD_OF") {
				var m = this.constraintMats.h[bone.__id__];
				if(m == null) {
					m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
					this.constraintMats.set(bone,m);
				}
				var m1 = this.object.parent.transform.world;
				m.self._00 = m1.self._00;
				m.self._01 = m1.self._01;
				m.self._02 = m1.self._02;
				m.self._03 = m1.self._03;
				m.self._10 = m1.self._10;
				m.self._11 = m1.self._11;
				m.self._12 = m1.self._12;
				m.self._13 = m1.self._13;
				m.self._20 = m1.self._20;
				m.self._21 = m1.self._21;
				m.self._22 = m1.self._22;
				m.self._23 = m1.self._23;
				m.self._30 = m1.self._30;
				m.self._31 = m1.self._31;
				m.self._32 = m1.self._32;
				m.self._33 = m1.self._33;
				var m2 = this.constraintTargetsI[i];
				var a00 = m.self._00;
				var a01 = m.self._01;
				var a02 = m.self._02;
				var a03 = m.self._03;
				var a10 = m.self._10;
				var a11 = m.self._11;
				var a12 = m.self._12;
				var a13 = m.self._13;
				var a20 = m.self._20;
				var a21 = m.self._21;
				var a22 = m.self._22;
				var a23 = m.self._23;
				var a30 = m.self._30;
				var a31 = m.self._31;
				var a32 = m.self._32;
				var a33 = m.self._33;
				var b0 = m2.self._00;
				var b1 = m2.self._10;
				var b2 = m2.self._20;
				var b3 = m2.self._30;
				m.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				m.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				m.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				m.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m2.self._01;
				b1 = m2.self._11;
				b2 = m2.self._21;
				b3 = m2.self._31;
				m.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				m.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				m.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				m.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m2.self._02;
				b1 = m2.self._12;
				b2 = m2.self._22;
				b3 = m2.self._32;
				m.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				m.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				m.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				m.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m2.self._03;
				b1 = m2.self._13;
				b2 = m2.self._23;
				b3 = m2.self._33;
				m.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				m.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				m.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				m.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				var m3 = o.transform.world;
				var a001 = m.self._00;
				var a011 = m.self._01;
				var a021 = m.self._02;
				var a031 = m.self._03;
				var a101 = m.self._10;
				var a111 = m.self._11;
				var a121 = m.self._12;
				var a131 = m.self._13;
				var a201 = m.self._20;
				var a211 = m.self._21;
				var a221 = m.self._22;
				var a231 = m.self._23;
				var a301 = m.self._30;
				var a311 = m.self._31;
				var a321 = m.self._32;
				var a331 = m.self._33;
				var b01 = m3.self._00;
				var b11 = m3.self._10;
				var b21 = m3.self._20;
				var b31 = m3.self._30;
				m.self._00 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
				m.self._10 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
				m.self._20 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
				m.self._30 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
				b01 = m3.self._01;
				b11 = m3.self._11;
				b21 = m3.self._21;
				b31 = m3.self._31;
				m.self._01 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
				m.self._11 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
				m.self._21 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
				m.self._31 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
				b01 = m3.self._02;
				b11 = m3.self._12;
				b21 = m3.self._22;
				b31 = m3.self._32;
				m.self._02 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
				m.self._12 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
				m.self._22 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
				m.self._32 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
				b01 = m3.self._03;
				b11 = m3.self._13;
				b21 = m3.self._23;
				b31 = m3.self._33;
				m.self._03 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
				m.self._13 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
				m.self._23 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
				m.self._33 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
				var _this = iron_object_BoneAnimation.m1;
				var m4 = this.object.parent.transform.world;
				var a002 = m4.self._00;
				var a012 = m4.self._01;
				var a022 = m4.self._02;
				var a032 = m4.self._03;
				var a102 = m4.self._10;
				var a112 = m4.self._11;
				var a122 = m4.self._12;
				var a132 = m4.self._13;
				var a202 = m4.self._20;
				var a212 = m4.self._21;
				var a222 = m4.self._22;
				var a232 = m4.self._23;
				var a302 = m4.self._30;
				var a312 = m4.self._31;
				var a322 = m4.self._32;
				var a332 = m4.self._33;
				var b00 = a002 * a112 - a012 * a102;
				var b011 = a002 * a122 - a022 * a102;
				var b02 = a002 * a132 - a032 * a102;
				var b03 = a012 * a122 - a022 * a112;
				var b04 = a012 * a132 - a032 * a112;
				var b05 = a022 * a132 - a032 * a122;
				var b06 = a202 * a312 - a212 * a302;
				var b07 = a202 * a322 - a222 * a302;
				var b08 = a202 * a332 - a232 * a302;
				var b09 = a212 * a322 - a222 * a312;
				var b10 = a212 * a332 - a232 * a312;
				var b111 = a222 * a332 - a232 * a322;
				var det = b00 * b111 - b011 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
				if(det == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det = 1.0 / det;
					_this.self._00 = (a112 * b111 - a122 * b10 + a132 * b09) * det;
					_this.self._01 = (a022 * b10 - a012 * b111 - a032 * b09) * det;
					_this.self._02 = (a312 * b05 - a322 * b04 + a332 * b03) * det;
					_this.self._03 = (a222 * b04 - a212 * b05 - a232 * b03) * det;
					_this.self._10 = (a122 * b08 - a102 * b111 - a132 * b07) * det;
					_this.self._11 = (a002 * b111 - a022 * b08 + a032 * b07) * det;
					_this.self._12 = (a322 * b02 - a302 * b05 - a332 * b011) * det;
					_this.self._13 = (a202 * b05 - a222 * b02 + a232 * b011) * det;
					_this.self._20 = (a102 * b10 - a112 * b08 + a132 * b06) * det;
					_this.self._21 = (a012 * b08 - a002 * b10 - a032 * b06) * det;
					_this.self._22 = (a302 * b04 - a312 * b02 + a332 * b00) * det;
					_this.self._23 = (a212 * b02 - a202 * b04 - a232 * b00) * det;
					_this.self._30 = (a112 * b07 - a102 * b09 - a122 * b06) * det;
					_this.self._31 = (a002 * b09 - a012 * b07 + a022 * b06) * det;
					_this.self._32 = (a312 * b011 - a302 * b03 - a322 * b00) * det;
					_this.self._33 = (a202 * b03 - a212 * b011 + a222 * b00) * det;
				}
				var m5 = iron_object_BoneAnimation.m1;
				var a003 = m.self._00;
				var a013 = m.self._01;
				var a023 = m.self._02;
				var a033 = m.self._03;
				var a103 = m.self._10;
				var a113 = m.self._11;
				var a123 = m.self._12;
				var a133 = m.self._13;
				var a203 = m.self._20;
				var a213 = m.self._21;
				var a223 = m.self._22;
				var a233 = m.self._23;
				var a303 = m.self._30;
				var a313 = m.self._31;
				var a323 = m.self._32;
				var a333 = m.self._33;
				var b010 = m5.self._00;
				var b12 = m5.self._10;
				var b22 = m5.self._20;
				var b32 = m5.self._30;
				m.self._00 = a003 * b010 + a013 * b12 + a023 * b22 + a033 * b32;
				m.self._10 = a103 * b010 + a113 * b12 + a123 * b22 + a133 * b32;
				m.self._20 = a203 * b010 + a213 * b12 + a223 * b22 + a233 * b32;
				m.self._30 = a303 * b010 + a313 * b12 + a323 * b22 + a333 * b32;
				b010 = m5.self._01;
				b12 = m5.self._11;
				b22 = m5.self._21;
				b32 = m5.self._31;
				m.self._01 = a003 * b010 + a013 * b12 + a023 * b22 + a033 * b32;
				m.self._11 = a103 * b010 + a113 * b12 + a123 * b22 + a133 * b32;
				m.self._21 = a203 * b010 + a213 * b12 + a223 * b22 + a233 * b32;
				m.self._31 = a303 * b010 + a313 * b12 + a323 * b22 + a333 * b32;
				b010 = m5.self._02;
				b12 = m5.self._12;
				b22 = m5.self._22;
				b32 = m5.self._32;
				m.self._02 = a003 * b010 + a013 * b12 + a023 * b22 + a033 * b32;
				m.self._12 = a103 * b010 + a113 * b12 + a123 * b22 + a133 * b32;
				m.self._22 = a203 * b010 + a213 * b12 + a223 * b22 + a233 * b32;
				m.self._32 = a303 * b010 + a313 * b12 + a323 * b22 + a333 * b32;
				b010 = m5.self._03;
				b12 = m5.self._13;
				b22 = m5.self._23;
				b32 = m5.self._33;
				m.self._03 = a003 * b010 + a013 * b12 + a023 * b22 + a033 * b32;
				m.self._13 = a103 * b010 + a113 * b12 + a123 * b22 + a133 * b32;
				m.self._23 = a203 * b010 + a213 * b12 + a223 * b22 + a233 * b32;
				m.self._33 = a303 * b010 + a313 * b12 + a323 * b22 + a333 * b32;
			}
		}
	}
	,updateBonesOnly: function() {
		if(this.boneChildren != null) {
			var _g = 0;
			var _g1 = this.skeletonBones.length;
			while(_g < _g1) {
				var i = _g++;
				var b = this.skeletonBones[i];
				var _this = iron_object_BoneAnimation.m;
				var m = this.matsFast[i];
				_this.self._00 = m.self._00;
				_this.self._01 = m.self._01;
				_this.self._02 = m.self._02;
				_this.self._03 = m.self._03;
				_this.self._10 = m.self._10;
				_this.self._11 = m.self._11;
				_this.self._12 = m.self._12;
				_this.self._13 = m.self._13;
				_this.self._20 = m.self._20;
				_this.self._21 = m.self._21;
				_this.self._22 = m.self._22;
				_this.self._23 = m.self._23;
				_this.self._30 = m.self._30;
				_this.self._31 = m.self._31;
				_this.self._32 = m.self._32;
				_this.self._33 = m.self._33;
				this.updateBoneChildren(b,iron_object_BoneAnimation.m);
			}
		}
	}
	,updateSkinGpu: function() {
		var bones = this.skeletonBones;
		var s = this.blendCurrent / this.blendTime;
		s = s * s * (3.0 - 2.0 * s);
		if(this.blendFactor != 0.0) {
			s = 1.0 - this.blendFactor;
		}
		var _g = 0;
		var _g1 = bones.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.constraintMats != null) {
				var m = this.constraintMats.h[bones[i].__id__];
				if(m != null) {
					this.updateSkinBuffer(m,i);
					continue;
				}
			}
			var _this = iron_object_BoneAnimation.m;
			var m1 = this.matsFast[i];
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			if(this.blendTime > 0 && this.skeletonBonesBlend != null) {
				var _this1 = iron_object_BoneAnimation.m1;
				var m2 = this.matsFastBlend[i];
				_this1.self._00 = m2.self._00;
				_this1.self._01 = m2.self._01;
				_this1.self._02 = m2.self._02;
				_this1.self._03 = m2.self._03;
				_this1.self._10 = m2.self._10;
				_this1.self._11 = m2.self._11;
				_this1.self._12 = m2.self._12;
				_this1.self._13 = m2.self._13;
				_this1.self._20 = m2.self._20;
				_this1.self._21 = m2.self._21;
				_this1.self._22 = m2.self._22;
				_this1.self._23 = m2.self._23;
				_this1.self._30 = m2.self._30;
				_this1.self._31 = m2.self._31;
				_this1.self._32 = m2.self._32;
				_this1.self._33 = m2.self._33;
				var _this2 = iron_object_BoneAnimation.m1;
				var loc = iron_object_BoneAnimation.vpos;
				var quat = iron_object_BoneAnimation.q1;
				var scale = iron_object_BoneAnimation.vscl;
				loc.x = _this2.self._30;
				loc.y = _this2.self._31;
				loc.z = _this2.self._32;
				var _this3 = iron_math_Mat4.helpVec;
				_this3.x = _this2.self._00;
				_this3.y = _this2.self._01;
				_this3.z = _this2.self._02;
				_this3.w = 1.0;
				var _this4 = _this3;
				scale.x = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
				var _this5 = iron_math_Mat4.helpVec;
				_this5.x = _this2.self._10;
				_this5.y = _this2.self._11;
				_this5.z = _this2.self._12;
				_this5.w = 1.0;
				var _this6 = _this5;
				scale.y = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
				var _this7 = iron_math_Mat4.helpVec;
				_this7.x = _this2.self._20;
				_this7.y = _this2.self._21;
				_this7.z = _this2.self._22;
				_this7.w = 1.0;
				var _this8 = _this7;
				scale.z = Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
				var _this9 = _this2.self;
				var m3 = _this9._12;
				var m4 = _this9._22;
				var m5 = _this9._32;
				var m6 = _this9._13;
				var m7 = _this9._23;
				var m8 = _this9._33;
				var c00 = _this9._11 * (m4 * m8 - m5 * m7) - _this9._21 * (m3 * m8 - m5 * m6) + _this9._31 * (m3 * m7 - m4 * m6);
				var m31 = _this9._12;
				var m41 = _this9._22;
				var m51 = _this9._32;
				var m61 = _this9._13;
				var m71 = _this9._23;
				var m81 = _this9._33;
				var c01 = _this9._10 * (m41 * m81 - m51 * m71) - _this9._20 * (m31 * m81 - m51 * m61) + _this9._30 * (m31 * m71 - m41 * m61);
				var m32 = _this9._11;
				var m42 = _this9._21;
				var m52 = _this9._31;
				var m62 = _this9._13;
				var m72 = _this9._23;
				var m82 = _this9._33;
				var c02 = _this9._10 * (m42 * m82 - m52 * m72) - _this9._20 * (m32 * m82 - m52 * m62) + _this9._30 * (m32 * m72 - m42 * m62);
				var m33 = _this9._11;
				var m43 = _this9._21;
				var m53 = _this9._31;
				var m63 = _this9._12;
				var m73 = _this9._22;
				var m83 = _this9._32;
				var c03 = _this9._10 * (m43 * m83 - m53 * m73) - _this9._20 * (m33 * m83 - m53 * m63) + _this9._30 * (m33 * m73 - m43 * m63);
				if(_this9._00 * c00 - _this9._01 * c01 + _this9._02 * c02 - _this9._03 * c03 < 0.0) {
					scale.x = -scale.x;
				}
				var invs = 1.0 / scale.x;
				iron_math_Mat4.helpMat.self._00 = _this2.self._00 * invs;
				iron_math_Mat4.helpMat.self._01 = _this2.self._01 * invs;
				iron_math_Mat4.helpMat.self._02 = _this2.self._02 * invs;
				invs = 1.0 / scale.y;
				iron_math_Mat4.helpMat.self._10 = _this2.self._10 * invs;
				iron_math_Mat4.helpMat.self._11 = _this2.self._11 * invs;
				iron_math_Mat4.helpMat.self._12 = _this2.self._12 * invs;
				invs = 1.0 / scale.z;
				iron_math_Mat4.helpMat.self._20 = _this2.self._20 * invs;
				iron_math_Mat4.helpMat.self._21 = _this2.self._21 * invs;
				iron_math_Mat4.helpMat.self._22 = _this2.self._22 * invs;
				var m9 = iron_math_Mat4.helpMat;
				var m11 = m9.self._00;
				var m12 = m9.self._10;
				var m13 = m9.self._20;
				var m21 = m9.self._01;
				var m22 = m9.self._11;
				var m23 = m9.self._21;
				var m311 = m9.self._02;
				var m321 = m9.self._12;
				var m331 = m9.self._22;
				var tr = m11 + m22 + m331;
				var s1 = 0.0;
				if(tr > 0) {
					s1 = 0.5 / Math.sqrt(tr + 1.0);
					quat.w = 0.25 / s1;
					quat.x = (m321 - m23) * s1;
					quat.y = (m13 - m311) * s1;
					quat.z = (m21 - m12) * s1;
				} else if(m11 > m22 && m11 > m331) {
					s1 = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
					quat.w = (m321 - m23) / s1;
					quat.x = 0.25 * s1;
					quat.y = (m12 + m21) / s1;
					quat.z = (m13 + m311) / s1;
				} else if(m22 > m331) {
					s1 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
					quat.w = (m13 - m311) / s1;
					quat.x = (m12 + m21) / s1;
					quat.y = 0.25 * s1;
					quat.z = (m23 + m321) / s1;
				} else {
					s1 = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
					quat.w = (m21 - m12) / s1;
					quat.x = (m13 + m311) / s1;
					quat.y = (m23 + m321) / s1;
					quat.z = 0.25 * s1;
				}
				var _this10 = iron_object_BoneAnimation.m;
				var loc1 = iron_object_BoneAnimation.vpos2;
				var quat1 = iron_object_BoneAnimation.q2;
				var scale1 = iron_object_BoneAnimation.vscl2;
				loc1.x = _this10.self._30;
				loc1.y = _this10.self._31;
				loc1.z = _this10.self._32;
				var _this11 = iron_math_Mat4.helpVec;
				_this11.x = _this10.self._00;
				_this11.y = _this10.self._01;
				_this11.z = _this10.self._02;
				_this11.w = 1.0;
				var _this12 = _this11;
				scale1.x = Math.sqrt(_this12.x * _this12.x + _this12.y * _this12.y + _this12.z * _this12.z);
				var _this13 = iron_math_Mat4.helpVec;
				_this13.x = _this10.self._10;
				_this13.y = _this10.self._11;
				_this13.z = _this10.self._12;
				_this13.w = 1.0;
				var _this14 = _this13;
				scale1.y = Math.sqrt(_this14.x * _this14.x + _this14.y * _this14.y + _this14.z * _this14.z);
				var _this15 = iron_math_Mat4.helpVec;
				_this15.x = _this10.self._20;
				_this15.y = _this10.self._21;
				_this15.z = _this10.self._22;
				_this15.w = 1.0;
				var _this16 = _this15;
				scale1.z = Math.sqrt(_this16.x * _this16.x + _this16.y * _this16.y + _this16.z * _this16.z);
				var _this17 = _this10.self;
				var m34 = _this17._12;
				var m44 = _this17._22;
				var m54 = _this17._32;
				var m64 = _this17._13;
				var m74 = _this17._23;
				var m84 = _this17._33;
				var c001 = _this17._11 * (m44 * m84 - m54 * m74) - _this17._21 * (m34 * m84 - m54 * m64) + _this17._31 * (m34 * m74 - m44 * m64);
				var m35 = _this17._12;
				var m45 = _this17._22;
				var m55 = _this17._32;
				var m65 = _this17._13;
				var m75 = _this17._23;
				var m85 = _this17._33;
				var c011 = _this17._10 * (m45 * m85 - m55 * m75) - _this17._20 * (m35 * m85 - m55 * m65) + _this17._30 * (m35 * m75 - m45 * m65);
				var m36 = _this17._11;
				var m46 = _this17._21;
				var m56 = _this17._31;
				var m66 = _this17._13;
				var m76 = _this17._23;
				var m86 = _this17._33;
				var c021 = _this17._10 * (m46 * m86 - m56 * m76) - _this17._20 * (m36 * m86 - m56 * m66) + _this17._30 * (m36 * m76 - m46 * m66);
				var m37 = _this17._11;
				var m47 = _this17._21;
				var m57 = _this17._31;
				var m67 = _this17._12;
				var m77 = _this17._22;
				var m87 = _this17._32;
				var c031 = _this17._10 * (m47 * m87 - m57 * m77) - _this17._20 * (m37 * m87 - m57 * m67) + _this17._30 * (m37 * m77 - m47 * m67);
				if(_this17._00 * c001 - _this17._01 * c011 + _this17._02 * c021 - _this17._03 * c031 < 0.0) {
					scale1.x = -scale1.x;
				}
				var invs1 = 1.0 / scale1.x;
				iron_math_Mat4.helpMat.self._00 = _this10.self._00 * invs1;
				iron_math_Mat4.helpMat.self._01 = _this10.self._01 * invs1;
				iron_math_Mat4.helpMat.self._02 = _this10.self._02 * invs1;
				invs1 = 1.0 / scale1.y;
				iron_math_Mat4.helpMat.self._10 = _this10.self._10 * invs1;
				iron_math_Mat4.helpMat.self._11 = _this10.self._11 * invs1;
				iron_math_Mat4.helpMat.self._12 = _this10.self._12 * invs1;
				invs1 = 1.0 / scale1.z;
				iron_math_Mat4.helpMat.self._20 = _this10.self._20 * invs1;
				iron_math_Mat4.helpMat.self._21 = _this10.self._21 * invs1;
				iron_math_Mat4.helpMat.self._22 = _this10.self._22 * invs1;
				var m10 = iron_math_Mat4.helpMat;
				var m111 = m10.self._00;
				var m121 = m10.self._10;
				var m131 = m10.self._20;
				var m211 = m10.self._01;
				var m221 = m10.self._11;
				var m231 = m10.self._21;
				var m312 = m10.self._02;
				var m322 = m10.self._12;
				var m332 = m10.self._22;
				var tr1 = m111 + m221 + m332;
				var s2 = 0.0;
				if(tr1 > 0) {
					s2 = 0.5 / Math.sqrt(tr1 + 1.0);
					quat1.w = 0.25 / s2;
					quat1.x = (m322 - m231) * s2;
					quat1.y = (m131 - m312) * s2;
					quat1.z = (m211 - m121) * s2;
				} else if(m111 > m221 && m111 > m332) {
					s2 = 2.0 * Math.sqrt(1.0 + m111 - m221 - m332);
					quat1.w = (m322 - m231) / s2;
					quat1.x = 0.25 * s2;
					quat1.y = (m121 + m211) / s2;
					quat1.z = (m131 + m312) / s2;
				} else if(m221 > m332) {
					s2 = 2.0 * Math.sqrt(1.0 + m221 - m111 - m332);
					quat1.w = (m131 - m312) / s2;
					quat1.x = (m121 + m211) / s2;
					quat1.y = 0.25 * s2;
					quat1.z = (m231 + m322) / s2;
				} else {
					s2 = 2.0 * Math.sqrt(1.0 + m332 - m111 - m221);
					quat1.w = (m211 - m121) / s2;
					quat1.x = (m131 + m312) / s2;
					quat1.y = (m231 + m322) / s2;
					quat1.z = 0.25 * s2;
				}
				var _this18 = iron_object_BoneAnimation.v1;
				var from = iron_object_BoneAnimation.vpos;
				var to = iron_object_BoneAnimation.vpos2;
				_this18.x = from.x + (to.x - from.x) * s;
				_this18.y = from.y + (to.y - from.y) * s;
				_this18.z = from.z + (to.z - from.z) * s;
				var _this19 = iron_object_BoneAnimation.v2;
				var from1 = iron_object_BoneAnimation.vscl;
				var to1 = iron_object_BoneAnimation.vscl2;
				_this19.x = from1.x + (to1.x - from1.x) * s;
				_this19.y = from1.y + (to1.y - from1.y) * s;
				_this19.z = from1.z + (to1.z - from1.z) * s;
				var _this20 = iron_object_BoneAnimation.q3;
				var from2 = iron_object_BoneAnimation.q1;
				var to2 = iron_object_BoneAnimation.q2;
				var fromx = from2.x;
				var fromy = from2.y;
				var fromz = from2.z;
				var fromw = from2.w;
				var dot = from2.x * to2.x + from2.y * to2.y + from2.z * to2.z + from2.w * to2.w;
				if(dot < 0.0) {
					fromx = -fromx;
					fromy = -fromy;
					fromz = -fromz;
					fromw = -fromw;
				}
				_this20.x = fromx + (to2.x - fromx) * s;
				_this20.y = fromy + (to2.y - fromy) * s;
				_this20.z = fromz + (to2.z - fromz) * s;
				_this20.w = fromw + (to2.w - fromw) * s;
				var l = Math.sqrt(_this20.x * _this20.x + _this20.y * _this20.y + _this20.z * _this20.z + _this20.w * _this20.w);
				if(l == 0.0) {
					_this20.x = 0;
					_this20.y = 0;
					_this20.z = 0;
					_this20.w = 0;
				} else {
					l = 1.0 / l;
					_this20.x *= l;
					_this20.y *= l;
					_this20.z *= l;
					_this20.w *= l;
				}
				var _this21 = iron_object_BoneAnimation.m;
				var q = iron_object_BoneAnimation.q3;
				var x = q.x;
				var y = q.y;
				var z = q.z;
				var w = q.w;
				var x2 = x + x;
				var y2 = y + y;
				var z2 = z + z;
				var xx = x * x2;
				var xy = x * y2;
				var xz = x * z2;
				var yy = y * y2;
				var yz = y * z2;
				var zz = z * z2;
				var wx = w * x2;
				var wy = w * y2;
				var wz = w * z2;
				_this21.self._00 = 1.0 - (yy + zz);
				_this21.self._10 = xy - wz;
				_this21.self._20 = xz + wy;
				_this21.self._01 = xy + wz;
				_this21.self._11 = 1.0 - (xx + zz);
				_this21.self._21 = yz - wx;
				_this21.self._02 = xz - wy;
				_this21.self._12 = yz + wx;
				_this21.self._22 = 1.0 - (xx + yy);
				_this21.self._03 = 0.0;
				_this21.self._13 = 0.0;
				_this21.self._23 = 0.0;
				_this21.self._30 = 0.0;
				_this21.self._31 = 0.0;
				_this21.self._32 = 0.0;
				_this21.self._33 = 1.0;
				var _this22 = iron_object_BoneAnimation.m;
				var v = iron_object_BoneAnimation.v2;
				var x1 = v.x;
				var y1 = v.y;
				var z1 = v.z;
				_this22.self._00 *= x1;
				_this22.self._01 *= x1;
				_this22.self._02 *= x1;
				_this22.self._03 *= x1;
				_this22.self._10 *= y1;
				_this22.self._11 *= y1;
				_this22.self._12 *= y1;
				_this22.self._13 *= y1;
				_this22.self._20 *= z1;
				_this22.self._21 *= z1;
				_this22.self._22 *= z1;
				_this22.self._23 *= z1;
				iron_object_BoneAnimation.m.self._30 = iron_object_BoneAnimation.v1.x;
				iron_object_BoneAnimation.m.self._31 = iron_object_BoneAnimation.v1.y;
				iron_object_BoneAnimation.m.self._32 = iron_object_BoneAnimation.v1.z;
			}
			if(this.absMats != null && i < this.absMats.length) {
				var _this23 = this.absMats[i];
				var m14 = iron_object_BoneAnimation.m;
				_this23.self._00 = m14.self._00;
				_this23.self._01 = m14.self._01;
				_this23.self._02 = m14.self._02;
				_this23.self._03 = m14.self._03;
				_this23.self._10 = m14.self._10;
				_this23.self._11 = m14.self._11;
				_this23.self._12 = m14.self._12;
				_this23.self._13 = m14.self._13;
				_this23.self._20 = m14.self._20;
				_this23.self._21 = m14.self._21;
				_this23.self._22 = m14.self._22;
				_this23.self._23 = m14.self._23;
				_this23.self._30 = m14.self._30;
				_this23.self._31 = m14.self._31;
				_this23.self._32 = m14.self._32;
				_this23.self._33 = m14.self._33;
			}
			if(this.boneChildren != null) {
				this.updateBoneChildren(bones[i],iron_object_BoneAnimation.m);
			}
			var _this24 = iron_object_BoneAnimation.m;
			var b = iron_object_BoneAnimation.m;
			var a = this.data.geom.skeletonTransformsI[i];
			var a00 = a.self._00;
			var a01 = a.self._01;
			var a02 = a.self._02;
			var a03 = a.self._03;
			var a10 = a.self._10;
			var a11 = a.self._11;
			var a12 = a.self._12;
			var a13 = a.self._13;
			var a20 = a.self._20;
			var a21 = a.self._21;
			var a22 = a.self._22;
			var a23 = a.self._23;
			var a30 = a.self._30;
			var a31 = a.self._31;
			var a32 = a.self._32;
			var a33 = a.self._33;
			var b0 = b.self._00;
			var b1 = b.self._10;
			var b2 = b.self._20;
			var b3 = b.self._30;
			_this24.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this24.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this24.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this24.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			_this24.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this24.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this24.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this24.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			_this24.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this24.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this24.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this24.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._03;
			b1 = b.self._13;
			b2 = b.self._23;
			b3 = b.self._33;
			_this24.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this24.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this24.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this24.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			this.updateSkinBuffer(iron_object_BoneAnimation.m,i);
		}
	}
	,updateSkinBuffer: function(m,i) {
		var loc = iron_object_BoneAnimation.vpos;
		var quat = iron_object_BoneAnimation.q1;
		var scale = iron_object_BoneAnimation.vscl;
		loc.x = m.self._30;
		loc.y = m.self._31;
		loc.z = m.self._32;
		var _this = iron_math_Mat4.helpVec;
		_this.x = m.self._00;
		_this.y = m.self._01;
		_this.z = m.self._02;
		_this.w = 1.0;
		var _this1 = _this;
		scale.x = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		var _this = iron_math_Mat4.helpVec;
		_this.x = m.self._10;
		_this.y = m.self._11;
		_this.z = m.self._12;
		_this.w = 1.0;
		var _this1 = _this;
		scale.y = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		var _this = iron_math_Mat4.helpVec;
		_this.x = m.self._20;
		_this.y = m.self._21;
		_this.z = m.self._22;
		_this.w = 1.0;
		var _this1 = _this;
		scale.z = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		var _this = m.self;
		var m3 = _this._12;
		var m4 = _this._22;
		var m5 = _this._32;
		var m6 = _this._13;
		var m7 = _this._23;
		var m8 = _this._33;
		var c00 = _this._11 * (m4 * m8 - m5 * m7) - _this._21 * (m3 * m8 - m5 * m6) + _this._31 * (m3 * m7 - m4 * m6);
		var m3 = _this._12;
		var m4 = _this._22;
		var m5 = _this._32;
		var m6 = _this._13;
		var m7 = _this._23;
		var m8 = _this._33;
		var c01 = _this._10 * (m4 * m8 - m5 * m7) - _this._20 * (m3 * m8 - m5 * m6) + _this._30 * (m3 * m7 - m4 * m6);
		var m3 = _this._11;
		var m4 = _this._21;
		var m5 = _this._31;
		var m6 = _this._13;
		var m7 = _this._23;
		var m8 = _this._33;
		var c02 = _this._10 * (m4 * m8 - m5 * m7) - _this._20 * (m3 * m8 - m5 * m6) + _this._30 * (m3 * m7 - m4 * m6);
		var m3 = _this._11;
		var m4 = _this._21;
		var m5 = _this._31;
		var m6 = _this._12;
		var m7 = _this._22;
		var m8 = _this._32;
		var c03 = _this._10 * (m4 * m8 - m5 * m7) - _this._20 * (m3 * m8 - m5 * m6) + _this._30 * (m3 * m7 - m4 * m6);
		if(_this._00 * c00 - _this._01 * c01 + _this._02 * c02 - _this._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = m.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = m.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = m.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = m.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = m.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = m.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = m.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = m.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = m.self._22 * invs;
		var m = iron_math_Mat4.helpMat;
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m31 = m.self._02;
		var m32 = m.self._12;
		var m33 = m.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m32 - m23) * s;
			quat.y = (m13 - m31) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			quat.w = (m32 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			quat.w = (m13 - m31) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m31) / s;
			quat.y = (m23 + m32) / s;
			quat.z = 0.25 * s;
		}
		var _this = iron_object_BoneAnimation.q1;
		var l = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z + _this.w * _this.w);
		if(l == 0.0) {
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 0;
		} else {
			l = 1.0 / l;
			_this.x *= l;
			_this.y *= l;
			_this.z *= l;
			_this.w *= l;
		}
		var _this = iron_object_BoneAnimation.q2;
		_this.x = iron_object_BoneAnimation.vpos.x;
		_this.y = iron_object_BoneAnimation.vpos.y;
		_this.z = iron_object_BoneAnimation.vpos.z;
		_this.w = 0.0;
		var _this = iron_object_BoneAnimation.q2;
		var q1 = iron_object_BoneAnimation.q2;
		var q2 = iron_object_BoneAnimation.q1;
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		_this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		var v = iron_object_BoneAnimation.q1.x;
		this.skinBuffer.setFloat32(i * 8 * 4,v,true);
		var v = iron_object_BoneAnimation.q1.y;
		this.skinBuffer.setFloat32((i * 8 + 1) * 4,v,true);
		var v = iron_object_BoneAnimation.q1.z;
		this.skinBuffer.setFloat32((i * 8 + 2) * 4,v,true);
		var v = iron_object_BoneAnimation.q1.w;
		this.skinBuffer.setFloat32((i * 8 + 3) * 4,v,true);
		var v = iron_object_BoneAnimation.q2.x * 0.5;
		this.skinBuffer.setFloat32((i * 8 + 4) * 4,v,true);
		var v = iron_object_BoneAnimation.q2.y * 0.5;
		this.skinBuffer.setFloat32((i * 8 + 5) * 4,v,true);
		var v = iron_object_BoneAnimation.q2.z * 0.5;
		this.skinBuffer.setFloat32((i * 8 + 6) * 4,v,true);
		var v = iron_object_BoneAnimation.q2.w * 0.5;
		this.skinBuffer.setFloat32((i * 8 + 7) * 4,v,true);
	}
	,getBone: function(name) {
		if(this.skeletonBones == null) {
			return null;
		}
		var _g = 0;
		var _g1 = this.skeletonBones;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.name == name) {
				return b;
			}
		}
		return null;
	}
	,getBoneIndex: function(bone,bones) {
		if(bones == null) {
			bones = this.skeletonBones;
		}
		if(bones != null) {
			var _g = 0;
			var _g1 = bones.length;
			while(_g < _g1) {
				var i = _g++;
				if(bones[i] == bone) {
					return i;
				}
			}
		}
		return -1;
	}
	,__class__: iron_object_BoneAnimation
});
var iron_object_Object = function() {
	this.isEmpty = false;
	this.properties = null;
	this.culledShadow = false;
	this.culledMesh = false;
	this.culled = false;
	this.visibleShadow = true;
	this.visibleMesh = true;
	this.visible = true;
	this.animation = null;
	this.lods = null;
	this.children = [];
	this.parent = null;
	this.traits = [];
	this.constraints = null;
	this.name = "";
	this.raw = null;
	this.uid = iron_object_Object.uidCounter++;
	this.urandom = iron_object_Object.seededRandom();
	this.transform = new iron_object_Transform(this);
	this.isEmpty = js_Boot.getClass(this) == iron_object_Object;
	if(this.isEmpty && iron_Scene.active != null) {
		iron_Scene.active.empties.push(this);
	}
};
$hxClasses["iron.object.Object"] = iron_object_Object;
iron_object_Object.__name__ = true;
iron_object_Object.seededRandom = function() {
	iron_object_Object.seed = (iron_object_Object.seed * 9301 + 49297) % 233280;
	return iron_object_Object.seed / 233280.0;
};
iron_object_Object.prototype = {
	setParent: function(parentObject,parentInverse,keepTransform) {
		if(keepTransform == null) {
			keepTransform = false;
		}
		if(parentInverse == null) {
			parentInverse = false;
		}
		if(parentObject == this || parentObject == this.parent) {
			return;
		}
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
			if(keepTransform) {
				this.transform.applyParent();
			}
			this.parent = null;
			this.transform.buildMatrix();
		}
		if(parentObject == null) {
			parentObject = iron_Scene.active.sceneParent;
		}
		this.parent = parentObject;
		this.parent.children.push(this);
		if(parentInverse) {
			this.transform.applyParentInverse();
		}
	}
	,remove: function() {
		if(this.isEmpty && iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.empties,this);
		}
		if(this.animation != null) {
			this.animation.remove();
		}
		while(this.children.length > 0) this.children[0].remove();
		while(this.traits.length > 0) this.traits[0].remove();
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
			this.parent = null;
		}
	}
	,getChild: function(name) {
		if(this.name == name) {
			return this;
		} else {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var r = c.getChild(name);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	,getChildren: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(!recursive) {
			return this.children;
		}
		var retChildren = this.children.slice();
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			retChildren = retChildren.concat(child.getChildren(recursive));
		}
		return retChildren;
	}
	,addTrait: function(t) {
		this.traits.push(t);
		t.object = this;
		if(t._add != null) {
			var _g = 0;
			var _g1 = t._add;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			t._add = null;
		}
	}
	,removeTrait: function(t) {
		if(t._init != null) {
			var _g = 0;
			var _g1 = t._init;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeInit(f);
			}
			t._init = null;
		}
		if(t._update != null) {
			var _g = 0;
			var _g1 = t._update;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeUpdate(f);
			}
			t._update = null;
		}
		if(t._lateUpdate != null) {
			var _g = 0;
			var _g1 = t._lateUpdate;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeLateUpdate(f);
			}
			t._lateUpdate = null;
		}
		if(t._render != null) {
			var _g = 0;
			var _g1 = t._render;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeRender(f);
			}
			t._render = null;
		}
		if(t._render2D != null) {
			var _g = 0;
			var _g1 = t._render2D;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeRender2D(f);
			}
			t._render2D = null;
		}
		if(t._remove != null) {
			var _g = 0;
			var _g1 = t._remove;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			t._remove = null;
		}
		HxOverrides.remove(this.traits,t);
	}
	,getParentArmature: function(name) {
		var _g = 0;
		var _g1 = iron_Scene.active.animations;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.armature != null && a.armature.name == name) {
				return a;
			}
		}
		return null;
	}
	,setupAnimation: function(oactions) {
		var _gthis = this;
		if(this.raw.parent_bone != null) {
			iron_Scene.active.notifyOnInit(function() {
				var banim = _gthis.getParentArmature(_gthis.parent.name);
				if(banim != null) {
					banim.addBoneChild(_gthis.raw.parent_bone,_gthis);
				}
			});
		}
		if(oactions == null) {
			return;
		}
		this.animation = new iron_object_ObjectAnimation(this,oactions);
	}
	,setupMorphTargets: function() {
	}
	,__class__: iron_object_Object
};
var iron_object_CameraObject = function(data) {
	this.currentFace = 0;
	this.renderTargetCube = null;
	this.renderTarget = null;
	this.frustumPlanes = null;
	this.prevV = null;
	iron_object_Object.call(this);
	this.data = data;
	this.buildProjection();
	this.V = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.VP = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	if(data.raw.frustum_culling) {
		this.frustumPlanes = [];
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
	}
	iron_Scene.active.cameras.push(this);
};
$hxClasses["iron.object.CameraObject"] = iron_object_CameraObject;
iron_object_CameraObject.__name__ = true;
iron_object_CameraObject.buildViewFrustum = function(VP,frustumPlanes) {
	var _this = frustumPlanes[0];
	var _this1 = _this.normal;
	_this1.x = VP.self._03 + VP.self._00;
	_this1.y = VP.self._13 + VP.self._10;
	_this1.z = VP.self._23 + VP.self._20;
	_this1.w = 1.0;
	_this.constant = VP.self._33 + VP.self._30;
	var _this = frustumPlanes[1];
	var _this1 = _this.normal;
	_this1.x = VP.self._03 - VP.self._00;
	_this1.y = VP.self._13 - VP.self._10;
	_this1.z = VP.self._23 - VP.self._20;
	_this1.w = 1.0;
	_this.constant = VP.self._33 - VP.self._30;
	var _this = frustumPlanes[2];
	var _this1 = _this.normal;
	_this1.x = VP.self._03 - VP.self._01;
	_this1.y = VP.self._13 - VP.self._11;
	_this1.z = VP.self._23 - VP.self._21;
	_this1.w = 1.0;
	_this.constant = VP.self._33 - VP.self._31;
	var _this = frustumPlanes[3];
	var _this1 = _this.normal;
	_this1.x = VP.self._03 + VP.self._01;
	_this1.y = VP.self._13 + VP.self._11;
	_this1.z = VP.self._23 + VP.self._21;
	_this1.w = 1.0;
	_this.constant = VP.self._33 + VP.self._31;
	var _this = frustumPlanes[4];
	var _this1 = _this.normal;
	_this1.x = VP.self._02;
	_this1.y = VP.self._12;
	_this1.z = VP.self._22;
	_this1.w = 1.0;
	_this.constant = VP.self._32;
	var _this = frustumPlanes[5];
	var _this1 = _this.normal;
	_this1.x = VP.self._03 - VP.self._02;
	_this1.y = VP.self._13 - VP.self._12;
	_this1.z = VP.self._23 - VP.self._22;
	_this1.w = 1.0;
	_this.constant = VP.self._33 - VP.self._32;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		plane.normalize();
	}
};
iron_object_CameraObject.sphereInFrustum = function(frustumPlanes,t,radiusScale,offsetX,offsetY,offsetZ) {
	if(offsetZ == null) {
		offsetZ = 0.0;
	}
	if(offsetY == null) {
		offsetY = 0.0;
	}
	if(offsetX == null) {
		offsetX = 0.0;
	}
	if(radiusScale == null) {
		radiusScale = 1.0;
	}
	var radius = t.radius * radiusScale;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		var _this = iron_object_CameraObject.sphereCenter;
		_this.x = t.world.self._30 + offsetX;
		_this.y = t.world.self._31 + offsetY;
		_this.z = t.world.self._32 + offsetZ;
		_this.w = 1.0;
		if(plane.distanceToSphere(iron_object_CameraObject.sphereCenter,radius) + radius * 2 < 0) {
			return false;
		}
	}
	return true;
};
iron_object_CameraObject.setCubeFace = function(m,eye,face,flip) {
	if(flip == null) {
		flip = false;
	}
	var _this = iron_object_CameraObject.vcenter;
	_this.x = eye.x;
	_this.y = eye.y;
	_this.z = eye.z;
	_this.w = eye.w;
	var f = flip ? -1.0 : 1.0;
	switch(face) {
	case 0:
		var _this = iron_object_CameraObject.vcenter;
		_this.x += f;
		_this.y += 0.0;
		_this.z += 0.0;
		var _this = iron_object_CameraObject.vup;
		_this.x = 0.0;
		_this.y = -1.0 * f;
		_this.z = 0.0;
		_this.w = 1.0;
		break;
	case 1:
		var _this = iron_object_CameraObject.vcenter;
		_this.x += -1.0 * f;
		_this.y += 0.0;
		_this.z += 0.0;
		var _this = iron_object_CameraObject.vup;
		_this.x = 0.0;
		_this.y = -1.0 * f;
		_this.z = 0.0;
		_this.w = 1.0;
		break;
	case 2:
		var _this = iron_object_CameraObject.vcenter;
		_this.x += 0.0;
		_this.y += f;
		_this.z += 0.0;
		var _this = iron_object_CameraObject.vup;
		_this.x = 0.0;
		_this.y = 0.0;
		_this.z = f;
		_this.w = 1.0;
		break;
	case 3:
		var _this = iron_object_CameraObject.vcenter;
		_this.x += 0.0;
		_this.y += -1.0 * f;
		_this.z += 0.0;
		var _this = iron_object_CameraObject.vup;
		_this.x = 0.0;
		_this.y = 0.0;
		_this.z = -1.0 * f;
		_this.w = 1.0;
		break;
	case 4:
		var _this = iron_object_CameraObject.vcenter;
		_this.x += 0.0;
		_this.y += 0.0;
		_this.z += f;
		var _this = iron_object_CameraObject.vup;
		_this.x = 0.0;
		_this.y = -1.0 * f;
		_this.z = 0.0;
		_this.w = 1.0;
		break;
	case 5:
		var _this = iron_object_CameraObject.vcenter;
		_this.x += 0.0;
		_this.y += 0.0;
		_this.z += -1.0 * f;
		var _this = iron_object_CameraObject.vup;
		_this.x = 0.0;
		_this.y = -1.0 * f;
		_this.z = 0.0;
		_this.w = 1.0;
		break;
	}
	var center = iron_object_CameraObject.vcenter;
	var up = iron_object_CameraObject.vup;
	var f0 = center.x - eye.x;
	var f1 = center.y - eye.y;
	var f2 = center.z - eye.z;
	var n = 1.0 / Math.sqrt(f0 * f0 + f1 * f1 + f2 * f2);
	f0 *= n;
	f1 *= n;
	f2 *= n;
	var s0 = f1 * up.z - f2 * up.y;
	var s1 = f2 * up.x - f0 * up.z;
	var s2 = f0 * up.y - f1 * up.x;
	n = 1.0 / Math.sqrt(s0 * s0 + s1 * s1 + s2 * s2);
	s0 *= n;
	s1 *= n;
	s2 *= n;
	var u0 = s1 * f2 - s2 * f1;
	var u1 = s2 * f0 - s0 * f2;
	var u2 = s0 * f1 - s1 * f0;
	var d0 = -eye.x * s0 - eye.y * s1 - eye.z * s2;
	var d1 = -eye.x * u0 - eye.y * u1 - eye.z * u2;
	var d2 = eye.x * f0 + eye.y * f1 + eye.z * f2;
	m.self._00 = s0;
	m.self._10 = s1;
	m.self._20 = s2;
	m.self._30 = d0;
	m.self._01 = u0;
	m.self._11 = u1;
	m.self._21 = u2;
	m.self._31 = d1;
	m.self._02 = -f0;
	m.self._12 = -f1;
	m.self._22 = -f2;
	m.self._32 = d2;
	m.self._03 = 0.0;
	m.self._13 = 0.0;
	m.self._23 = 0.0;
	m.self._33 = 1.0;
};
iron_object_CameraObject.__super__ = iron_object_Object;
iron_object_CameraObject.prototype = $extend(iron_object_Object.prototype,{
	buildProjection: function(screenAspect) {
		if(this.data.raw.ortho != null) {
			var left = this.data.raw.ortho.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
			var right = this.data.raw.ortho.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			var bottom = this.data.raw.ortho.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
			var top = this.data.raw.ortho.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN);
			var near = this.data.raw.near_plane;
			var far = this.data.raw.far_plane;
			var rl = right - left;
			var tb = top - bottom;
			var fn = far - near;
			var tx = -(right + left) / rl;
			var ty = -(top + bottom) / tb;
			var tz = -(far + near) / fn;
			this.P = new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
		} else {
			if(screenAspect == null) {
				screenAspect = iron_App.w() / iron_App.h();
			}
			var aspect = this.data.raw.aspect != null ? this.data.raw.aspect : screenAspect;
			var zn = this.data.raw.near_plane;
			var zf = this.data.raw.far_plane;
			var uh = 1.0 / Math.tan(this.data.raw.fov / 2);
			var uw = uh / aspect;
			this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
		}
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.cameras,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,renderFrame: function(g) {
		this.buildMatrix();
		iron_RenderPath.active.renderFrame(g);
		var _this = this.prevV;
		var m = this.V;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
	}
	,buildMatrix: function() {
		this.transform.buildMatrix();
		var _this = this.transform.world;
		var x = Math.sqrt(_this.self._00 * _this.self._00 + _this.self._10 * _this.self._10 + _this.self._20 * _this.self._20);
		var y = Math.sqrt(_this.self._01 * _this.self._01 + _this.self._11 * _this.self._11 + _this.self._21 * _this.self._21);
		var z = Math.sqrt(_this.self._02 * _this.self._02 + _this.self._12 * _this.self._12 + _this.self._22 * _this.self._22);
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		var sc_x = x;
		var sc_y = y;
		var sc_z = z;
		var sc_w = 1.0;
		if(sc_x != 1.0 || sc_y != 1.0 || sc_z != 1.0) {
			var _this = iron_object_CameraObject.temp;
			_this.x = 1.0 / sc_x;
			_this.y = 1.0 / sc_y;
			_this.z = 1.0 / sc_z;
			_this.w = 1.0;
			var _this = this.transform.world;
			var v = iron_object_CameraObject.temp;
			var x = v.x;
			var y = v.y;
			var z = v.z;
			_this.self._00 *= x;
			_this.self._01 *= x;
			_this.self._02 *= x;
			_this.self._03 *= x;
			_this.self._10 *= y;
			_this.self._11 *= y;
			_this.self._12 *= y;
			_this.self._13 *= y;
			_this.self._20 *= z;
			_this.self._21 *= z;
			_this.self._22 *= z;
			_this.self._23 *= z;
		}
		var _this = this.V;
		var m = this.transform.world;
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this.self._00 = 1.0;
			_this.self._01 = 0.0;
			_this.self._02 = 0.0;
			_this.self._03 = 0.0;
			_this.self._10 = 0.0;
			_this.self._11 = 1.0;
			_this.self._12 = 0.0;
			_this.self._13 = 0.0;
			_this.self._20 = 0.0;
			_this.self._21 = 0.0;
			_this.self._22 = 1.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		var _this = this.VP;
		var b = this.P;
		var a = this.V;
		var a00 = a.self._00;
		var a01 = a.self._01;
		var a02 = a.self._02;
		var a03 = a.self._03;
		var a10 = a.self._10;
		var a11 = a.self._11;
		var a12 = a.self._12;
		var a13 = a.self._13;
		var a20 = a.self._20;
		var a21 = a.self._21;
		var a22 = a.self._22;
		var a23 = a.self._23;
		var a30 = a.self._30;
		var a31 = a.self._31;
		var a32 = a.self._32;
		var a33 = a.self._33;
		var b0 = b.self._00;
		var b1 = b.self._10;
		var b2 = b.self._20;
		var b3 = b.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		if(this.data.raw.frustum_culling) {
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
		if(this.prevV == null) {
			this.prevV = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			var _this = this.prevV;
			var m = this.V;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
		}
	}
	,__class__: iron_object_CameraObject
});
var iron_object_FrustumPlane = function() {
	this.constant = 0.0;
	this.normal = new iron_math_Vec4(1.0,0.0,0.0);
};
$hxClasses["iron.object.FrustumPlane"] = iron_object_FrustumPlane;
iron_object_FrustumPlane.__name__ = true;
iron_object_FrustumPlane.prototype = {
	normalize: function() {
		var _this = this.normal;
		var inverseNormalLength = 1.0 / Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		var _this = this.normal;
		_this.x *= inverseNormalLength;
		_this.y *= inverseNormalLength;
		_this.z *= inverseNormalLength;
		this.constant *= inverseNormalLength;
	}
	,distanceToSphere: function(sphereCenter,sphereRadius) {
		var _this = this.normal;
		return _this.x * sphereCenter.x + _this.y * sphereCenter.y + _this.z * sphereCenter.z + this.constant - sphereRadius;
	}
	,__class__: iron_object_FrustumPlane
};
var iron_object_Constraint = function(constr) {
	this.target = null;
	this.raw = constr;
};
$hxClasses["iron.object.Constraint"] = iron_object_Constraint;
iron_object_Constraint.__name__ = true;
iron_object_Constraint.prototype = {
	apply: function(transform) {
		if(this.target == null && this.raw.target != null) {
			this.target = iron_Scene.active.getChild(this.raw.target).transform;
		}
		if(this.raw.type == "COPY_LOCATION") {
			if(this.raw.use_x) {
				transform.world.self._30 = this.target.loc.x;
				if(this.raw.use_offset) {
					transform.world.self._30 += transform.loc.x;
				}
			}
			if(this.raw.use_y) {
				transform.world.self._31 = this.target.loc.y;
				if(this.raw.use_offset) {
					transform.world.self._31 += transform.loc.y;
				}
			}
			if(this.raw.use_z) {
				transform.world.self._32 = this.target.loc.z;
				if(this.raw.use_offset) {
					transform.world.self._32 += transform.loc.z;
				}
			}
		}
	}
	,__class__: iron_object_Constraint
};
var iron_object_LightObject = function(data) {
	this.frustumPlanes = null;
	this.VP = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.P = null;
	this.V = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.bias = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.camSlicedP = null;
	this.cascadeData = null;
	iron_object_Object.call(this);
	this.data = data;
	var type = data.raw.type;
	var fov = data.raw.fov;
	if(type == "sun") {
		if(iron_object_LightObject.corners == null) {
			iron_object_LightObject.corners = [];
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
		}
		this.P = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	} else if(type == "point" || type == "area") {
		var zn = data.raw.near_plane;
		var zf = data.raw.far_plane;
		var uh = 1.0 / Math.tan(fov / 2);
		var uw = uh / 1;
		this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
	} else if(type == "spot") {
		var zn = data.raw.near_plane;
		var zf = data.raw.far_plane;
		var uh = 1.0 / Math.tan(fov / 2);
		var uw = uh / 1;
		this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
	}
	iron_Scene.active.lights.push(this);
};
$hxClasses["iron.object.LightObject"] = iron_object_LightObject;
iron_object_LightObject.__name__ = true;
iron_object_LightObject.__super__ = iron_object_Object;
iron_object_LightObject.prototype = $extend(iron_object_Object.prototype,{
	remove: function() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.lights,this);
		}
		var rp = iron_RenderPath.active;
		if(rp.light == this) {
			rp.light = null;
		}
		if(rp.point == this) {
			rp.point = null;
		} else if(rp.sun == this) {
			rp.sun = null;
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,buildMatrix: function(camera) {
		this.transform.buildMatrix();
		if(this.data.raw.type == "sun") {
			var _this = this.V;
			var m = this.transform.world;
			var a00 = m.self._00;
			var a01 = m.self._01;
			var a02 = m.self._02;
			var a03 = m.self._03;
			var a10 = m.self._10;
			var a11 = m.self._11;
			var a12 = m.self._12;
			var a13 = m.self._13;
			var a20 = m.self._20;
			var a21 = m.self._21;
			var a22 = m.self._22;
			var a23 = m.self._23;
			var a30 = m.self._30;
			var a31 = m.self._31;
			var a32 = m.self._32;
			var a33 = m.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			this.updateViewFrustum(camera);
		} else {
			var _this = this.V;
			var m = this.transform.world;
			var a00 = m.self._00;
			var a01 = m.self._01;
			var a02 = m.self._02;
			var a03 = m.self._03;
			var a10 = m.self._10;
			var a11 = m.self._11;
			var a12 = m.self._12;
			var a13 = m.self._13;
			var a20 = m.self._20;
			var a21 = m.self._21;
			var a22 = m.self._22;
			var a23 = m.self._23;
			var a30 = m.self._30;
			var a31 = m.self._31;
			var a32 = m.self._32;
			var a33 = m.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			this.updateViewFrustum(camera);
		}
	}
	,setCascade: function(camera,cascade) {
		var _this = iron_object_LightObject.m;
		var m = camera.V;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		if(this.camSlicedP == null) {
			this.camSlicedP = [];
			this.cascadeSplit = [];
			var ortho = camera.data.raw.ortho;
			if(ortho == null) {
				var aspect = camera.data.raw.aspect != null ? camera.data.raw.aspect : iron_App.w() / iron_App.h();
				var fov = camera.data.raw.fov;
				var near = camera.data.raw.near_plane;
				var far = camera.data.raw.far_plane;
				var factor = iron_object_LightObject.cascadeCount > 2 ? iron_object_LightObject.cascadeSplitFactor : iron_object_LightObject.cascadeSplitFactor * 0.25;
				var _g = 0;
				var _g1 = iron_object_LightObject.cascadeCount;
				while(_g < _g1) {
					var i = _g++;
					var f = i + 1.0;
					var cfar = (near + f / iron_object_LightObject.cascadeCount * (far - near)) * (1 - factor) + near * Math.pow(far / near,f / iron_object_LightObject.cascadeCount) * factor;
					this.cascadeSplit.push(cfar);
					var uh = 1.0 / Math.tan(fov / 2);
					var uw = uh / aspect;
					this.camSlicedP.push(new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(cfar + near) / (near - cfar),2 * cfar * near / (near - cfar),0,0,-1,0));
				}
			} else {
				var _g = 0;
				var _g1 = iron_object_LightObject.cascadeCount;
				while(_g < _g1) {
					var i = _g++;
					this.cascadeSplit.push(this.data.raw.far_plane);
					var left = ortho.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var right = ortho.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var bottom = ortho.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var top = ortho.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var near = this.data.raw.near_plane;
					var far = this.data.raw.far_plane;
					var rl = right - left;
					var tb = top - bottom;
					var fn = far - near;
					var tx = -(right + left) / rl;
					var ty = -(top + bottom) / tb;
					var tz = -(far + near) / fn;
					this.camSlicedP.push(new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1));
				}
			}
		}
		var _this = iron_object_LightObject.m;
		var m = this.camSlicedP[cascade];
		var a00 = _this.self._00;
		var a01 = _this.self._01;
		var a02 = _this.self._02;
		var a03 = _this.self._03;
		var a10 = _this.self._10;
		var a11 = _this.self._11;
		var a12 = _this.self._12;
		var a13 = _this.self._13;
		var a20 = _this.self._20;
		var a21 = _this.self._21;
		var a22 = _this.self._22;
		var a23 = _this.self._23;
		var a30 = _this.self._30;
		var a31 = _this.self._31;
		var a32 = _this.self._32;
		var a33 = _this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		var _this = iron_object_LightObject.m;
		var m = iron_object_LightObject.m;
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this.self._00 = 1.0;
			_this.self._01 = 0.0;
			_this.self._02 = 0.0;
			_this.self._03 = 0.0;
			_this.self._10 = 0.0;
			_this.self._11 = 1.0;
			_this.self._12 = 0.0;
			_this.self._13 = 0.0;
			_this.self._20 = 0.0;
			_this.self._21 = 0.0;
			_this.self._22 = 1.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		var _this = this.V;
		var m = this.transform.world;
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this.self._00 = 1.0;
			_this.self._01 = 0.0;
			_this.self._02 = 0.0;
			_this.self._03 = 0.0;
			_this.self._10 = 0.0;
			_this.self._11 = 1.0;
			_this.self._12 = 0.0;
			_this.self._13 = 0.0;
			_this.self._20 = 0.0;
			_this.self._21 = 0.0;
			_this.self._22 = 1.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		var _this = this.V;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		var _this2 = _this1;
		var scale = 1.0 / Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		_this.self._00 *= scale;
		_this.self._01 *= scale;
		_this.self._02 *= scale;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._10;
		_this1.y = _this.self._11;
		_this1.z = _this.self._12;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale = 1.0 / Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		_this.self._10 *= scale;
		_this.self._11 *= scale;
		_this.self._12 *= scale;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._20;
		_this1.y = _this.self._21;
		_this1.z = _this.self._22;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale = 1.0 / Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		_this.self._20 *= scale;
		_this.self._21 *= scale;
		_this.self._22 *= scale;
		_this.self._03 = 0.0;
		_this.self._13 = 0.0;
		_this.self._23 = 0.0;
		_this.self._30 = 0.0;
		_this.self._31 = 0.0;
		_this.self._32 = 0.0;
		_this.self._33 = 1.0;
		var _this = iron_object_LightObject.m;
		var m = this.V;
		var a00 = _this.self._00;
		var a01 = _this.self._01;
		var a02 = _this.self._02;
		var a03 = _this.self._03;
		var a10 = _this.self._10;
		var a11 = _this.self._11;
		var a12 = _this.self._12;
		var a13 = _this.self._13;
		var a20 = _this.self._20;
		var a21 = _this.self._21;
		var a22 = _this.self._22;
		var a23 = _this.self._23;
		var a30 = _this.self._30;
		var a31 = _this.self._31;
		var a32 = _this.self._32;
		var a33 = _this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		var _this = iron_object_LightObject.corners[0];
		_this.x = -1.0;
		_this.y = -1.0;
		_this.z = 1.0;
		_this.w = 1.0;
		var _this = iron_object_LightObject.corners[1];
		_this.x = -1.0;
		_this.y = -1.0;
		_this.z = -1.0;
		_this.w = 1.0;
		var _this = iron_object_LightObject.corners[2];
		_this.x = -1.0;
		_this.y = 1.0;
		_this.z = 1.0;
		_this.w = 1.0;
		var _this = iron_object_LightObject.corners[3];
		_this.x = -1.0;
		_this.y = 1.0;
		_this.z = -1.0;
		_this.w = 1.0;
		var _this = iron_object_LightObject.corners[4];
		_this.x = 1.0;
		_this.y = -1.0;
		_this.z = 1.0;
		_this.w = 1.0;
		var _this = iron_object_LightObject.corners[5];
		_this.x = 1.0;
		_this.y = -1.0;
		_this.z = -1.0;
		_this.w = 1.0;
		var _this = iron_object_LightObject.corners[6];
		_this.x = 1.0;
		_this.y = 1.0;
		_this.z = 1.0;
		_this.w = 1.0;
		var _this = iron_object_LightObject.corners[7];
		_this.x = 1.0;
		_this.y = 1.0;
		_this.z = -1.0;
		_this.w = 1.0;
		var _g = 0;
		var _g1 = iron_object_LightObject.corners;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var m = iron_object_LightObject.m;
			var x = v.x;
			var y = v.y;
			var z = v.z;
			var w = v.w;
			v.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30 * w;
			v.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31 * w;
			v.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32 * w;
			v.w = m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33 * w;
			v.x /= v.w;
			v.y /= v.w;
			v.z /= v.w;
			v.w = 1.0;
		}
		var minx = iron_object_LightObject.corners[0].x;
		var miny = iron_object_LightObject.corners[0].y;
		var minz = iron_object_LightObject.corners[0].z;
		var maxx = iron_object_LightObject.corners[0].x;
		var maxy = iron_object_LightObject.corners[0].y;
		var maxz = iron_object_LightObject.corners[0].z;
		var _g = 0;
		var _g1 = iron_object_LightObject.corners;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			if(v.x < minx) {
				minx = v.x;
			}
			if(v.x > maxx) {
				maxx = v.x;
			}
			if(v.y < miny) {
				miny = v.y;
			}
			if(v.y > maxy) {
				maxy = v.y;
			}
			if(v.z < minz) {
				minz = v.z;
			}
			if(v.z > maxz) {
				maxz = v.z;
			}
		}
		var v1 = iron_object_LightObject.corners[0];
		var v2 = iron_object_LightObject.corners[7];
		var vx = v1.x - v2.x;
		var vy = v1.y - v2.y;
		var vz = v1.z - v2.z;
		var diag0 = Math.sqrt(vx * vx + vy * vy + vz * vz);
		var offx = (diag0 - (maxx - minx)) * 0.5;
		var offy = (diag0 - (maxy - miny)) * 0.5;
		minx -= offx;
		maxx += offx;
		miny -= offy;
		maxy += offy;
		var smsize = this.data.raw.shadowmap_size;
		smsize = smsize / 4 | 0;
		var worldPerTexelX = (maxx - minx) / smsize;
		var worldPerTexelY = (maxy - miny) / smsize;
		var worldPerTexelZ = (maxz - minz) / smsize;
		minx = Math.floor(minx / worldPerTexelX) * worldPerTexelX;
		miny = Math.floor(miny / worldPerTexelY) * worldPerTexelY;
		minz = Math.floor(minz / worldPerTexelZ) * worldPerTexelZ;
		maxx = Math.floor(maxx / worldPerTexelX) * worldPerTexelX;
		maxy = Math.floor(maxy / worldPerTexelY) * worldPerTexelY;
		maxz = Math.floor(maxz / worldPerTexelZ) * worldPerTexelZ;
		var hx = (maxx - minx) / 2;
		var hy = (maxy - miny) / 2;
		var hz = (maxz - minz) / 2;
		this.V.self._30 = -(minx + hx);
		this.V.self._31 = -(miny + hy);
		this.V.self._32 = -(minz + hz);
		var left = -hx;
		var bottom = -hy;
		var near = -hz * 4 * iron_object_LightObject.cascadeBounds;
		var rl = hx - left;
		var tb = hy - bottom;
		var fn = hz - near;
		var tx = -(hx + left) / rl;
		var ty = -(hy + bottom) / tb;
		var tz = -(hz + near) / fn;
		iron_object_LightObject.m = new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
		var _this = this.P;
		var m = iron_object_LightObject.m;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		this.updateViewFrustum(camera);
		if(this.cascadeVP == null) {
			this.cascadeVP = [];
			var _g = 0;
			var _g1 = iron_object_LightObject.cascadeCount;
			while(_g < _g1) {
				var i = _g++;
				this.cascadeVP.push(new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0));
			}
		}
		var _this = this.cascadeVP[cascade];
		var m = this.VP;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
	}
	,updateViewFrustum: function(camera) {
		var _this = this.VP;
		var b = this.P;
		var a = this.V;
		var a00 = a.self._00;
		var a01 = a.self._01;
		var a02 = a.self._02;
		var a03 = a.self._03;
		var a10 = a.self._10;
		var a11 = a.self._11;
		var a12 = a.self._12;
		var a13 = a.self._13;
		var a20 = a.self._20;
		var a21 = a.self._21;
		var a22 = a.self._22;
		var a23 = a.self._23;
		var a30 = a.self._30;
		var a31 = a.self._31;
		var a32 = a.self._32;
		var a33 = a.self._33;
		var b0 = b.self._00;
		var b1 = b.self._10;
		var b2 = b.self._20;
		var b3 = b.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		if(camera.data.raw.frustum_culling) {
			if(this.frustumPlanes == null) {
				this.frustumPlanes = [];
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
			}
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	,setCubeFace: function(face,camera) {
		var _this = iron_object_LightObject.eye;
		_this.x = this.transform.world.self._30;
		_this.y = this.transform.world.self._31;
		_this.z = this.transform.world.self._32;
		_this.w = 1.0;
		var flip = false;
		iron_object_CameraObject.setCubeFace(this.V,iron_object_LightObject.eye,face,flip);
		this.updateViewFrustum(camera);
	}
	,getCascadeData: function() {
		if(this.cascadeData == null) {
			this.cascadeData = kha_arrays_Float32Array._new(iron_object_LightObject.cascadeCount * 16 + 4);
		}
		if(this.cascadeVP == null) {
			return this.cascadeData;
		}
		var _g = 0;
		var _g1 = iron_object_LightObject.cascadeCount;
		while(_g < _g1) {
			var i = _g++;
			var _this = iron_object_LightObject.m;
			var m = this.cascadeVP[i];
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
			var _this1 = this.bias;
			var m1 = iron_object_Uniforms.biasMat;
			_this1.self._00 = m1.self._00;
			_this1.self._01 = m1.self._01;
			_this1.self._02 = m1.self._02;
			_this1.self._03 = m1.self._03;
			_this1.self._10 = m1.self._10;
			_this1.self._11 = m1.self._11;
			_this1.self._12 = m1.self._12;
			_this1.self._13 = m1.self._13;
			_this1.self._20 = m1.self._20;
			_this1.self._21 = m1.self._21;
			_this1.self._22 = m1.self._22;
			_this1.self._23 = m1.self._23;
			_this1.self._30 = m1.self._30;
			_this1.self._31 = m1.self._31;
			_this1.self._32 = m1.self._32;
			_this1.self._33 = m1.self._33;
			this.bias.self._00 /= iron_object_LightObject.cascadeCount;
			this.bias.self._30 /= iron_object_LightObject.cascadeCount;
			this.bias.self._30 += i * (1 / iron_object_LightObject.cascadeCount);
			var _this2 = iron_object_LightObject.m;
			var m2 = this.bias;
			var a00 = _this2.self._00;
			var a01 = _this2.self._01;
			var a02 = _this2.self._02;
			var a03 = _this2.self._03;
			var a10 = _this2.self._10;
			var a11 = _this2.self._11;
			var a12 = _this2.self._12;
			var a13 = _this2.self._13;
			var a20 = _this2.self._20;
			var a21 = _this2.self._21;
			var a22 = _this2.self._22;
			var a23 = _this2.self._23;
			var a30 = _this2.self._30;
			var a31 = _this2.self._31;
			var a32 = _this2.self._32;
			var a33 = _this2.self._33;
			var b0 = m2.self._00;
			var b1 = m2.self._10;
			var b2 = m2.self._20;
			var b3 = m2.self._30;
			_this2.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._01;
			b1 = m2.self._11;
			b2 = m2.self._21;
			b3 = m2.self._31;
			_this2.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._02;
			b1 = m2.self._12;
			b2 = m2.self._22;
			b3 = m2.self._32;
			_this2.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m2.self._03;
			b1 = m2.self._13;
			b2 = m2.self._23;
			b3 = m2.self._33;
			_this2.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this2.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this2.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this2.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			var v = iron_object_LightObject.m.self._00;
			this.cascadeData.setFloat32(i * 16 * 4,v,true);
			var v1 = iron_object_LightObject.m.self._01;
			this.cascadeData.setFloat32((i * 16 + 1) * 4,v1,true);
			var v2 = iron_object_LightObject.m.self._02;
			this.cascadeData.setFloat32((i * 16 + 2) * 4,v2,true);
			var v3 = iron_object_LightObject.m.self._03;
			this.cascadeData.setFloat32((i * 16 + 3) * 4,v3,true);
			var v4 = iron_object_LightObject.m.self._10;
			this.cascadeData.setFloat32((i * 16 + 4) * 4,v4,true);
			var v5 = iron_object_LightObject.m.self._11;
			this.cascadeData.setFloat32((i * 16 + 5) * 4,v5,true);
			var v6 = iron_object_LightObject.m.self._12;
			this.cascadeData.setFloat32((i * 16 + 6) * 4,v6,true);
			var v7 = iron_object_LightObject.m.self._13;
			this.cascadeData.setFloat32((i * 16 + 7) * 4,v7,true);
			var v8 = iron_object_LightObject.m.self._20;
			this.cascadeData.setFloat32((i * 16 + 8) * 4,v8,true);
			var v9 = iron_object_LightObject.m.self._21;
			this.cascadeData.setFloat32((i * 16 + 9) * 4,v9,true);
			var v10 = iron_object_LightObject.m.self._22;
			this.cascadeData.setFloat32((i * 16 + 10) * 4,v10,true);
			var v11 = iron_object_LightObject.m.self._23;
			this.cascadeData.setFloat32((i * 16 + 11) * 4,v11,true);
			var v12 = iron_object_LightObject.m.self._30;
			this.cascadeData.setFloat32((i * 16 + 12) * 4,v12,true);
			var v13 = iron_object_LightObject.m.self._31;
			this.cascadeData.setFloat32((i * 16 + 13) * 4,v13,true);
			var v14 = iron_object_LightObject.m.self._32;
			this.cascadeData.setFloat32((i * 16 + 14) * 4,v14,true);
			var v15 = iron_object_LightObject.m.self._33;
			this.cascadeData.setFloat32((i * 16 + 15) * 4,v15,true);
		}
		var v = this.cascadeSplit[0];
		this.cascadeData.setFloat32(iron_object_LightObject.cascadeCount * 16 * 4,v,true);
		var v = this.cascadeSplit[1];
		this.cascadeData.setFloat32((iron_object_LightObject.cascadeCount * 16 + 1) * 4,v,true);
		var v = this.cascadeSplit[2];
		this.cascadeData.setFloat32((iron_object_LightObject.cascadeCount * 16 + 2) * 4,v,true);
		var v = this.cascadeSplit[3];
		this.cascadeData.setFloat32((iron_object_LightObject.cascadeCount * 16 + 3) * 4,v,true);
		return this.cascadeData;
	}
	,__class__: iron_object_LightObject
});
var iron_object_MeshObject = function(data,materials) {
	this.morphTarget = null;
	this.force_context = null;
	this.skip_context = null;
	this.tilesheets = null;
	this.activeTilesheet = null;
	this.frustumCulling = true;
	this.screenSize = 0.0;
	this.particleIndex = -1;
	this.particleOwner = null;
	this.particleChildren = null;
	this.particleSystems = null;
	this.materialIndex = 0;
	this.data = null;
	iron_object_Object.call(this);
	this.materials = materials;
	this.setData(data);
	iron_Scene.active.meshes.push(this);
};
$hxClasses["iron.object.MeshObject"] = iron_object_MeshObject;
iron_object_MeshObject.__name__ = true;
iron_object_MeshObject.__super__ = iron_object_Object;
iron_object_MeshObject.prototype = $extend(iron_object_Object.prototype,{
	setData: function(data) {
		this.data = data;
		data.refcount++;
		data.geom.build();
		this.transform.scaleWorld = data.scalePos;
	}
	,remove: function() {
		if(this.particleChildren != null) {
			var _g = 0;
			var _g1 = this.particleChildren;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.remove();
			}
			this.particleChildren = null;
		}
		if(this.particleSystems != null) {
			var _g = 0;
			var _g1 = this.particleSystems;
			while(_g < _g1.length) {
				var psys = _g1[_g];
				++_g;
				psys.remove();
			}
			this.particleSystems = null;
		}
		if(this.activeTilesheet != null) {
			this.activeTilesheet.remove();
		}
		if(this.tilesheets != null) {
			var _g = 0;
			var _g1 = this.tilesheets;
			while(_g < _g1.length) {
				var ts = _g1[_g];
				++_g;
				ts.remove();
			}
		}
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.meshes,this);
		}
		this.data.refcount--;
		iron_object_Object.prototype.remove.call(this);
	}
	,setupAnimation: function(oactions) {
		var hasAction = this.parent != null && this.parent.raw != null && this.parent.raw.bone_actions != null;
		if(hasAction) {
			var armatureName = this.parent.name;
			this.animation = this.getParentArmature(armatureName);
			if(this.animation == null) {
				this.animation = new iron_object_BoneAnimation(armatureName);
			}
			if(this.data.isSkinned) {
				(js_Boot.__cast(this.animation , iron_object_BoneAnimation)).setSkin(this);
			}
		}
		iron_object_Object.prototype.setupAnimation.call(this,oactions);
	}
	,setupMorphTargets: function() {
		if(this.data.raw.morph_target != null) {
			this.morphTarget = new iron_object_MorphTarget(this.data.raw.morph_target);
		}
	}
	,setupParticleSystem: function(sceneName,pref) {
		if(this.particleSystems == null) {
			this.particleSystems = [];
		}
		var psys = new iron_object_ParticleSystem(sceneName,pref);
		this.particleSystems.push(psys);
	}
	,setupTilesheet: function(sceneName,tilesheet_ref,tilesheet_action_ref) {
		this.activeTilesheet = new iron_object_Tilesheet(sceneName,tilesheet_ref,tilesheet_action_ref);
		if(this.tilesheets == null) {
			this.tilesheets = [];
		}
		this.tilesheets.push(this.activeTilesheet);
	}
	,setCulled: function(isShadow,b) {
		if(isShadow) {
			this.culledShadow = b;
		} else {
			this.culledMesh = b;
		}
		this.culled = this.culledMesh && this.culledShadow;
		return b;
	}
	,cullMaterial: function(context) {
		var mats = this.materials;
		if(!(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) && !this.validContext(mats,context)) {
			return true;
		}
		var isShadow = context == "shadowmap";
		if(!this.visibleMesh && !isShadow) {
			return this.setCulled(isShadow,true);
		}
		if(!this.visibleShadow && isShadow) {
			return this.setCulled(isShadow,true);
		}
		if(this.skip_context == context) {
			return this.setCulled(isShadow,true);
		}
		if(this.force_context != null && this.force_context != context) {
			return this.setCulled(isShadow,true);
		}
		if(context == "voxel" && this.raw != null && this.raw.mobile == true) {
			return this.setCulled(isShadow,true);
		}
		return this.setCulled(isShadow,false);
	}
	,cullMesh: function(context,camera,light) {
		if(camera == null) {
			return false;
		}
		if(camera.data.raw.frustum_culling && this.frustumCulling) {
			var radiusScale = this.data.isSkinned ? 2.0 : 1.0;
			if(this.particleSystems != null || this.particleOwner != null) {
				radiusScale *= 1000;
			}
			if(context == "voxel") {
				radiusScale *= 100;
			}
			if(this.data.geom.instanced) {
				radiusScale *= 100;
			}
			var isShadow = context == "shadowmap";
			var frustumPlanes = isShadow ? light.frustumPlanes : camera.frustumPlanes;
			if(isShadow && light.data.raw.type != "sun") {
				light.transform.radius = light.data.raw.far_plane;
				if(!iron_object_CameraObject.sphereInFrustum(camera.frustumPlanes,light.transform)) {
					return this.setCulled(isShadow,true);
				}
			}
			if(!iron_object_CameraObject.sphereInFrustum(frustumPlanes,this.transform,radiusScale)) {
				return this.setCulled(isShadow,true);
			}
		}
		this.culled = false;
		return this.culled;
	}
	,skipContext: function(context,mat) {
		if(mat.raw.skip_context != null && mat.raw.skip_context == context) {
			return true;
		}
		return false;
	}
	,getContexts: function(context,materials,materialContexts,shaderContexts) {
		var _g = 0;
		while(_g < materials.length) {
			var mat = materials[_g];
			++_g;
			var found = false;
			var _g1 = 0;
			var _g2 = mat.raw.contexts.length;
			while(_g1 < _g2) {
				var i = _g1++;
				if(HxOverrides.substr(mat.raw.contexts[i].name,0,context.length) == context) {
					materialContexts.push(mat.contexts[i]);
					shaderContexts.push(mat.shader.getContext(context));
					found = true;
					break;
				}
			}
			if(!found) {
				materialContexts.push(null);
				shaderContexts.push(null);
			}
		}
	}
	,render: function(g,context,bindParams) {
		var _gthis = this;
		if(this.data == null || !this.data.geom.ready) {
			return;
		}
		if(!this.visible) {
			return;
		}
		if(this.cullMesh(context,iron_Scene.active.camera,iron_RenderPath.active.light)) {
			return;
		}
		var meshContext = this.raw != null && context == "mesh";
		if(this.raw != null && this.raw.is_particle && this.particleOwner == null) {
			return;
		}
		if(this.particleSystems != null && meshContext) {
			if(this.particleChildren == null) {
				this.particleChildren = [];
				var _g = 0;
				var _g1 = this.particleSystems;
				while(_g < _g1.length) {
					var psys = _g1[_g];
					++_g;
					iron_Scene.active.spawnObject(psys.data.raw.instance_object,null,function(o) {
						if(o != null) {
							var c = o;
							_gthis.particleChildren.push(c);
							c.particleOwner = _gthis;
							c.particleIndex = _gthis.particleChildren.length - 1;
						}
					});
				}
			}
			var _g = 0;
			var _g1 = this.particleSystems.length;
			while(_g < _g1) {
				var i = _g++;
				this.particleSystems[i].update(this.particleChildren[i],this);
			}
		}
		if(this.particleSystems != null && this.particleSystems.length > 0 && !this.raw.render_emitter) {
			return;
		}
		if(this.cullMaterial(context)) {
			return;
		}
		var mats = this.materials;
		var lod = this;
		if(this.raw != null && this.raw.lods != null && this.raw.lods.length > 0) {
			var camera = iron_Scene.active.camera;
			var tr = this.transform;
			var volume = tr.dim.x * tr.dim.y * tr.dim.z;
			this.screenSize = volume * (1.0 / this.cameraDistance);
			this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
			if(this.lods == null) {
				this.lods = [];
				var _g = 0;
				var _g1 = this.raw.lods;
				while(_g < _g1.length) {
					var l = _g1[_g];
					++_g;
					if(l.object_ref == "") {
						this.lods.push(null);
					} else {
						this.lods.push(iron_Scene.active.getChild(l.object_ref));
					}
				}
			}
			if(context == "voxel") {
				lod = this.lods[this.lods.length - 1];
			} else {
				var _g = 0;
				var _g1 = this.raw.lods.length;
				while(_g < _g1) {
					var i = _g++;
					if(this.screenSize > this.raw.lods[i].screen_size) {
						break;
					}
					lod = this.lods[i];
					if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) {
						mats = lod.materials;
					}
				}
			}
			if(lod == null) {
				return;
			}
		}
		if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true && !this.validContext(mats,context)) {
			return;
		}
		var materialContexts = [];
		var shaderContexts = [];
		this.getContexts(context,mats,materialContexts,shaderContexts);
		iron_object_Uniforms.posUnpack = this.data.scalePos;
		iron_object_Uniforms.texUnpack = this.data.scaleTex;
		this.transform.update();
		var ldata = lod.data;
		var _g = 0;
		var _g1 = ldata.geom.indexBuffers.length;
		while(_g < _g1) {
			var i = _g++;
			var mi = ldata.geom.materialIndices[i];
			if(shaderContexts.length <= mi || shaderContexts[mi] == null) {
				continue;
			}
			this.materialIndex = mi;
			if(this.materials.length > mi && this.skipContext(context,this.materials[mi])) {
				continue;
			}
			var scontext = shaderContexts[mi];
			if(scontext == null) {
				continue;
			}
			var elems = scontext.raw.vertex_elements;
			if(scontext.pipeState != iron_object_MeshObject.lastPipeline) {
				g.setPipeline(scontext.pipeState);
				iron_object_MeshObject.lastPipeline = scontext.pipeState;
			}
			iron_object_Uniforms.setContextConstants(g,scontext,bindParams);
			iron_object_Uniforms.setObjectConstants(g,scontext,this);
			if(materialContexts.length > mi) {
				iron_object_Uniforms.setMaterialConstants(g,scontext,materialContexts[mi]);
			}
			if(ldata.geom.instancedVB != null) {
				g.setVertexBuffers([ldata.geom.get(elems),ldata.geom.instancedVB]);
			} else {
				g.setVertexBuffer(ldata.geom.get(elems));
			}
			g.setIndexBuffer(ldata.geom.indexBuffers[i]);
			if(ldata.geom.instanced) {
				g.drawIndexedVerticesInstanced(ldata.geom.instanceCount,ldata.geom.start,ldata.geom.count);
			} else {
				g.drawIndexedVertices(ldata.geom.start,ldata.geom.count);
			}
		}
	}
	,validContext: function(mats,context) {
		var _g = 0;
		while(_g < mats.length) {
			var mat = mats[_g];
			++_g;
			if(mat.getContext(context) != null) {
				return true;
			}
		}
		return false;
	}
	,__class__: iron_object_MeshObject
});
var iron_object_MorphTarget = function(data) {
	this.morphMap = null;
	this.morphBlockSize = 0;
	this.morphImageSize = 0;
	this.numMorphTargets = 0;
	var _gthis = this;
	var defaults = data.morph_target_defaults;
	this.morphWeights = kha_arrays_Float32Array._new(defaults.byteLength >> 2);
	var _g = 0;
	var _g1 = this.morphWeights.byteLength >> 2;
	while(_g < _g1) {
		var i = _g++;
		var v = defaults.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		this.morphWeights.setFloat32(i * 4,v,true);
	}
	this.scaling = data.morph_scale;
	this.offset = data.morph_offset;
	this.numMorphTargets = data.num_morph_targets;
	this.morphImageSize = data.morph_img_size;
	this.morphBlockSize = data.morph_block_size;
	iron_data_Data.getImage(data.morph_target_data_file + "_morph_pos.png",function(img) {
		if(img != null) {
			_gthis.morphDataPos = img;
		}
	});
	iron_data_Data.getImage(data.morph_target_data_file + "_morph_nor.png",function(img) {
		if(img != null) {
			_gthis.morphDataNor = img;
		}
	});
	this.morphMap = new haxe_ds_StringMap();
	var i = 0;
	var _g = 0;
	var _g1 = data.morph_target_ref;
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		this.morphMap.h[name] = i;
		++i;
	}
};
$hxClasses["iron.object.MorphTarget"] = iron_object_MorphTarget;
iron_object_MorphTarget.__name__ = true;
iron_object_MorphTarget.prototype = {
	__class__: iron_object_MorphTarget
};
var iron_object_ObjectAnimation = function(object,oactions) {
	this.object = object;
	this.oactions = oactions;
	this.isSkinned = false;
	iron_object_Animation.call(this);
};
$hxClasses["iron.object.ObjectAnimation"] = iron_object_ObjectAnimation;
iron_object_ObjectAnimation.__name__ = true;
iron_object_ObjectAnimation.__super__ = iron_object_Animation;
iron_object_ObjectAnimation.prototype = $extend(iron_object_Animation.prototype,{
	getAction: function(action) {
		var _g = 0;
		var _g1 = this.oactions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a != null && a.objects[0].name == action) {
				return a.objects[0];
			}
		}
		return null;
	}
	,play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		iron_object_Animation.prototype.play.call(this,action,onComplete,blendTime,speed,loop);
		if(this.action == "" && this.oactions[0] != null) {
			this.action = this.oactions[0].objects[0].name;
		}
		this.oaction = this.getAction(this.action);
		if(this.oaction != null) {
			this.isSampled = this.oaction.sampled != null && this.oaction.sampled;
		}
	}
	,update: function(delta) {
		if(!this.object.visible || this.object.culled || this.oaction == null) {
			return;
		}
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.paused) {
			return;
		}
		if(!this.isSkinned) {
			this.updateObjectAnim();
		}
	}
	,updateObjectAnim: function() {
		this.updateTransformAnim(this.oaction.anim,this.object.transform);
		this.object.transform.buildMatrix();
	}
	,isTrackEnd: function(track) {
		if(this.speed > 0) {
			return this.frameIndex >= (track.frames.byteLength >> 2) - 2;
		} else {
			return this.frameIndex <= 0;
		}
	}
	,updateTransformAnim: function(anim,transform) {
		if(anim == null) {
			return;
		}
		var total = anim.end * this.frameTime - anim.begin * this.frameTime;
		if(anim.has_delta) {
			var t = transform;
			if(t.dloc == null) {
				t.dloc = new iron_math_Vec4();
				t.drot = new iron_math_Quat();
				t.dscale = new iron_math_Vec4();
			}
			var _this = t.dloc;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			var _this = t.dscale;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			t._deulerX = t._deulerY = t._deulerZ = 0.0;
		}
		var _g = 0;
		var _g1 = anim.tracks;
		while(_g < _g1.length) {
			var track = _g1[_g];
			++_g;
			if(this.frameIndex == -1) {
				this.rewind(track);
			}
			var sign = this.speed > 0 ? 1 : -1;
			var t = this.time + anim.begin * this.frameTime;
			while(true) {
				var frameValues = track.frames;
				if(!(this.speed > 0 ? this.frameIndex < (frameValues.byteLength >> 2) - 2 && t > frameValues.getUint32((this.frameIndex + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime : this.frameIndex > 1 && t > frameValues.getUint32((this.frameIndex - 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime)) {
					break;
				}
				this.frameIndex += sign;
			}
			if(this.frameIndex >= track.frames.byteLength >> 2) {
				continue;
			}
			if(this.time > total) {
				if(this.onComplete != null) {
					this.onComplete();
				}
				if(this.loop) {
					this.rewind(track);
				} else {
					this.frameIndex -= sign;
					this.paused = true;
				}
				return;
			}
			var ti = this.frameIndex;
			var t1 = track.frames.getUint32(ti * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
			var t2 = track.frames.getUint32((ti + sign) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.frameTime;
			var v1 = track.values.getFloat32(ti * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			var v2 = track.values.getFloat32((ti + sign) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
			var s = (t - t1) / (t2 - t1);
			var value = (1.0 - s) * v1 + s * v2;
			switch(track.target) {
			case "dqwrot":
				transform.drot.w = value;
				break;
			case "dqxrot":
				transform.drot.x = value;
				break;
			case "dqyrot":
				transform.drot.y = value;
				break;
			case "dqzrot":
				transform.drot.z = value;
				break;
			case "dxloc":
				transform.dloc.x = value;
				break;
			case "dxrot":
				transform._deulerX = value;
				break;
			case "dxscl":
				transform.dscale.x = value;
				break;
			case "dyloc":
				transform.dloc.y = value;
				break;
			case "dyrot":
				transform._deulerY = value;
				break;
			case "dyscl":
				transform.dscale.y = value;
				break;
			case "dzloc":
				transform.dloc.z = value;
				break;
			case "dzrot":
				transform._deulerZ = value;
				break;
			case "dzscl":
				transform.dscale.z = value;
				break;
			case "qwrot":
				transform.rot.w = value;
				break;
			case "qxrot":
				transform.rot.x = value;
				break;
			case "qyrot":
				transform.rot.y = value;
				break;
			case "qzrot":
				transform.rot.z = value;
				break;
			case "xloc":
				transform.loc.x = value;
				break;
			case "xrot":
				transform.setRotation(value,transform._eulerY,transform._eulerZ);
				break;
			case "xscl":
				transform.scale.x = value;
				break;
			case "yloc":
				transform.loc.y = value;
				break;
			case "yrot":
				transform.setRotation(transform._eulerX,value,transform._eulerZ);
				break;
			case "yscl":
				transform.scale.y = value;
				break;
			case "zloc":
				transform.loc.z = value;
				break;
			case "zrot":
				transform.setRotation(transform._eulerX,transform._eulerY,value);
				break;
			case "zscl":
				transform.scale.z = value;
				break;
			}
		}
	}
	,__class__: iron_object_ObjectAnimation
});
var iron_object_ParticleSystem = function(sceneName,pref) {
	this.ownerScl = new iron_math_Vec4();
	this.ownerRot = new iron_math_Quat();
	this.ownerLoc = new iron_math_Vec4();
	this.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.lapTime = 0.0;
	this.lap = 0;
	this.count = 0;
	this.seed = 0;
	this.spawnRate = 0.0;
	this.time = 0.0;
	this.animtime = 0.0;
	this.lifetime = 0.0;
	this.frameRate = 24;
	this.speed = 1.0;
	var _gthis = this;
	this.seed = pref.seed;
	this.particles = [];
	this.ready = false;
	iron_data_Data.getParticle(sceneName,pref.particle,function(b) {
		_gthis.data = b;
		_gthis.r = _gthis.data.raw;
		if(iron_Scene.active.raw.gravity != null) {
			_gthis.gx = iron_Scene.active.raw.gravity.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) * _gthis.r.weight_gravity;
			_gthis.gy = iron_Scene.active.raw.gravity.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) * _gthis.r.weight_gravity;
			_gthis.gz = iron_Scene.active.raw.gravity.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) * _gthis.r.weight_gravity;
		} else {
			_gthis.gx = 0;
			_gthis.gy = 0;
			_gthis.gz = -9.81 * _gthis.r.weight_gravity;
		}
		_gthis.alignx = _gthis.r.object_align_factor.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) / 2;
		_gthis.aligny = _gthis.r.object_align_factor.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) / 2;
		_gthis.alignz = _gthis.r.object_align_factor.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) / 2;
		_gthis.lifetime = _gthis.r.lifetime / _gthis.frameRate;
		_gthis.animtime = (_gthis.r.frame_end - _gthis.r.frame_start) / _gthis.frameRate;
		_gthis.spawnRate = (_gthis.r.frame_end - _gthis.r.frame_start) / _gthis.r.count / _gthis.frameRate;
		var _g = 0;
		var _g1 = _gthis.r.count;
		while(_g < _g1) {
			var i = _g++;
			_gthis.particles.push(new iron_object_Particle(i));
		}
		_gthis.ready = true;
	});
};
$hxClasses["iron.object.ParticleSystem"] = iron_object_ParticleSystem;
iron_object_ParticleSystem.__name__ = true;
iron_object_ParticleSystem.prototype = {
	update: function(object,owner) {
		if(!this.ready || object == null || this.speed == 0.0) {
			return;
		}
		var _this = owner.transform.world;
		var loc = this.ownerLoc;
		var quat = this.ownerRot;
		var scale = this.ownerScl;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._10;
		_this1.y = _this.self._11;
		_this1.z = _this.self._12;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.y = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._20;
		_this1.y = _this.self._21;
		_this1.z = _this.self._22;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.z = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = _this.self;
		var m3 = _this1._12;
		var m4 = _this1._22;
		var m5 = _this1._32;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c00 = _this1._11 * (m4 * m8 - m5 * m7) - _this1._21 * (m3 * m8 - m5 * m6) + _this1._31 * (m3 * m7 - m4 * m6);
		var m3 = _this1._12;
		var m4 = _this1._22;
		var m5 = _this1._32;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c01 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		var m3 = _this1._11;
		var m4 = _this1._21;
		var m5 = _this1._31;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c02 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		var m3 = _this1._11;
		var m4 = _this1._21;
		var m5 = _this1._31;
		var m6 = _this1._12;
		var m7 = _this1._22;
		var m8 = _this1._32;
		var c03 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		if(_this1._00 * c00 - _this1._01 * c01 + _this1._02 * c02 - _this1._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		var m = iron_math_Mat4.helpMat;
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m31 = m.self._02;
		var m32 = m.self._12;
		var m33 = m.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m32 - m23) * s;
			quat.y = (m13 - m31) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			quat.w = (m32 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			quat.w = (m13 - m31) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m31) / s;
			quat.y = (m23 + m32) / s;
			quat.z = 0.25 * s;
		}
		object.transform.loc = this.ownerLoc;
		object.transform.rot = this.ownerRot;
		object.transform.scale = new iron_math_Vec4(this.r.particle_size,this.r.particle_size,this.r.particle_size,1);
		object.transform.buildMatrix();
		owner.transform.buildMatrix();
		var _this = object.transform.dim;
		var v = owner.transform.dim;
		_this.x = v.x;
		_this.y = v.y;
		_this.z = v.z;
		_this.w = v.w;
		this.dimx = object.transform.dim.x;
		this.dimy = object.transform.dim.y;
		if(object.activeTilesheet != null) {
			this.tilesx = object.activeTilesheet.raw.tilesx;
			this.tilesy = object.activeTilesheet.raw.tilesy;
			this.tilesFramerate = object.activeTilesheet.raw.framerate;
		}
		this.time += iron_system_Time.realDelta * this.speed;
		this.lap = this.time / this.animtime | 0;
		this.lapTime = this.time - this.lap * this.animtime;
		this.count = this.lapTime / this.spawnRate | 0;
		this.updateGpu(object,owner);
	}
	,getData: function() {
		var hair = this.r.type == 1;
		this.m.self._00 = this.r.loop ? this.animtime : -this.animtime;
		this.m.self._01 = hair ? 1 / this.particles.length : this.spawnRate;
		this.m.self._02 = hair ? 1 : this.lifetime;
		this.m.self._03 = this.particles.length;
		this.m.self._10 = hair ? 0 : this.alignx;
		this.m.self._11 = hair ? 0 : this.aligny;
		this.m.self._12 = hair ? 0 : this.alignz;
		this.m.self._13 = hair ? 0 : this.r.factor_random;
		this.m.self._20 = hair ? 0 : this.gx * this.r.mass;
		this.m.self._21 = hair ? 0 : this.gy * this.r.mass;
		this.m.self._22 = hair ? 0 : this.gz * this.r.mass;
		this.m.self._23 = hair ? 0 : this.r.lifetime_random;
		this.m.self._30 = this.tilesx;
		this.m.self._31 = this.tilesy;
		this.m.self._32 = 1 / this.tilesFramerate;
		this.m.self._33 = hair ? 1 : this.lapTime;
		return this.m;
	}
	,updateGpu: function(object,owner) {
		if(!object.data.geom.instanced) {
			this.setupGeomGpu(object,owner);
		}
	}
	,setupGeomGpu: function(object,owner) {
		var instancedData = kha_arrays_Float32Array._new(this.particles.length * 3);
		var i = 0;
		var normFactor = 3.05185094759971923e-05;
		var scalePosOwner = owner.data.scalePos;
		var scalePosParticle = object.data.scalePos;
		var particleSize = this.r.particle_size;
		var scaleFactor_x = 0.0;
		var scaleFactor_y = 0.0;
		var scaleFactor_z = 0.0;
		var scaleFactor_w = 1.0;
		var v = owner.transform.scale;
		scaleFactor_x = v.x;
		scaleFactor_y = v.y;
		scaleFactor_z = v.z;
		scaleFactor_w = v.w;
		var f = scalePosOwner / (particleSize * scalePosParticle);
		scaleFactor_x *= f;
		scaleFactor_y *= f;
		scaleFactor_z *= f;
		switch(this.r.emit_from) {
		case 0:
			var pa = owner.data.geom.positions;
			var _g = 0;
			var _g1 = this.particles;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				var j = this.fhash(i) * ((pa.values.byteLength >> 1) / pa.size) | 0;
				var v = pa.values.getInt16(j * pa.size * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * normFactor * scaleFactor_x;
				instancedData.setFloat32(i * 4,v,true);
				++i;
				var v1 = pa.values.getInt16((j * pa.size + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * normFactor * scaleFactor_y;
				instancedData.setFloat32(i * 4,v1,true);
				++i;
				var v2 = pa.values.getInt16((j * pa.size + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN) * normFactor * scaleFactor_z;
				instancedData.setFloat32(i * 4,v2,true);
				++i;
			}
			break;
		case 1:
			var positions = owner.data.geom.positions.values;
			var _g = 0;
			var _g1 = this.particles;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				var ia = owner.data.geom.indices[Std.random(owner.data.geom.indices.length)];
				var faceIndex = Std.random((ia.byteLength >> 2) / 3 | 0);
				var i0 = ia.getUint32(faceIndex * 3 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var i1 = ia.getUint32((faceIndex * 3 + 1) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var i2 = ia.getUint32((faceIndex * 3 + 2) * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var x = positions.getInt16(i0 * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var y = positions.getInt16((i0 * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var z = positions.getInt16((i0 * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				if(z == null) {
					z = 0.0;
				}
				if(y == null) {
					y = 0.0;
				}
				if(x == null) {
					x = 0.0;
				}
				var pos_x = x;
				var pos_y = y;
				var pos_z = z;
				var x1 = positions.getInt16(i1 * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var y1 = positions.getInt16((i1 * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var z1 = positions.getInt16((i1 * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				if(z1 == null) {
					z1 = 0.0;
				}
				if(y1 == null) {
					y1 = 0.0;
				}
				if(x1 == null) {
					x1 = 0.0;
				}
				var v_x = x1;
				var v_y = y1;
				var v_z = z1;
				var x2 = positions.getInt16(i2 * 4 * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var y2 = positions.getInt16((i2 * 4 + 1) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var z2 = positions.getInt16((i2 * 4 + 2) * 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				if(z2 == null) {
					z2 = 0.0;
				}
				if(y2 == null) {
					y2 = 0.0;
				}
				if(x2 == null) {
					x2 = 0.0;
				}
				var v_x1 = x2;
				var v_y1 = y2;
				var v_z1 = z2;
				var x3 = Math.random();
				var y3 = Math.random();
				if(x3 + y3 > 1) {
					x3 = 1 - x3;
					y3 = 1 - y3;
				}
				v_x -= pos_x;
				v_y -= pos_y;
				v_z -= pos_z;
				v_x1 -= pos_x;
				v_y1 -= pos_y;
				v_z1 -= pos_z;
				v_x *= x3;
				v_y *= x3;
				v_z *= x3;
				v_x1 *= y3;
				v_y1 *= y3;
				v_z1 *= y3;
				v_x += v_x1;
				v_y += v_y1;
				v_z += v_z1;
				pos_x += v_x;
				pos_y += v_y;
				pos_z += v_z;
				var v = pos_x * normFactor * scaleFactor_x;
				instancedData.setFloat32(i * 4,v,true);
				++i;
				var v1 = pos_y * normFactor * scaleFactor_y;
				instancedData.setFloat32(i * 4,v1,true);
				++i;
				var v2 = pos_z * normFactor * scaleFactor_z;
				instancedData.setFloat32(i * 4,v2,true);
				++i;
			}
			break;
		case 2:
			var scaleFactorVolume_x = 0.0;
			var scaleFactorVolume_y = 0.0;
			var scaleFactorVolume_z = 0.0;
			var scaleFactorVolume_w = 1.0;
			var v = object.transform.dim;
			scaleFactorVolume_x = v.x;
			scaleFactorVolume_y = v.y;
			scaleFactorVolume_z = v.z;
			scaleFactorVolume_w = v.w;
			var f = 0.5 / (particleSize * scalePosParticle);
			scaleFactorVolume_x *= f;
			scaleFactorVolume_y *= f;
			scaleFactorVolume_z *= f;
			var _g = 0;
			var _g1 = this.particles;
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				var v = (Math.random() * 2.0 - 1.0) * scaleFactorVolume_x;
				instancedData.setFloat32(i * 4,v,true);
				++i;
				var v1 = (Math.random() * 2.0 - 1.0) * scaleFactorVolume_y;
				instancedData.setFloat32(i * 4,v1,true);
				++i;
				var v2 = (Math.random() * 2.0 - 1.0) * scaleFactorVolume_z;
				instancedData.setFloat32(i * 4,v2,true);
				++i;
			}
			break;
		}
		object.data.geom.setupInstanced(instancedData,1,0);
	}
	,fhash: function(n) {
		var s = n + 1.0;
		s *= 9301.0 % s;
		s = (s * 9301.0 + 49297.0) % 233280.0;
		return s / 233280.0;
	}
	,remove: function() {
	}
	,__class__: iron_object_ParticleSystem
};
var iron_object_Particle = function(i) {
	this.i = i;
};
$hxClasses["iron.object.Particle"] = iron_object_Particle;
iron_object_Particle.__name__ = true;
iron_object_Particle.prototype = {
	__class__: iron_object_Particle
};
var iron_object_SpeakerObject = function(data) {
	this.channels = [];
	this.sound = null;
	this.paused = false;
	var _gthis = this;
	iron_object_Object.call(this);
	this.data = data;
	iron_Scene.active.speakers.push(this);
	if(data.sound == "") {
		return;
	}
	iron_data_Data.getSound(data.sound,function(sound) {
		_gthis.sound = sound;
		iron_App.notifyOnInit($bind(_gthis,_gthis.init));
	});
};
$hxClasses["iron.object.SpeakerObject"] = iron_object_SpeakerObject;
iron_object_SpeakerObject.__name__ = true;
iron_object_SpeakerObject.__super__ = iron_object_Object;
iron_object_SpeakerObject.prototype = $extend(iron_object_Object.prototype,{
	init: function() {
		if(this.visible && this.data.play_on_start) {
			this.play();
		}
	}
	,play: function() {
		if(this.sound == null || this.data.muted) {
			return;
		}
		if(this.paused) {
			var _g = 0;
			var _g1 = this.channels;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.play();
			}
			this.paused = false;
			return;
		}
		var channel = iron_system_Audio.play(this.sound,this.data.loop,this.data.stream);
		if(channel != null) {
			this.channels.push(channel);
			if(this.data.attenuation > 0 && this.channels.length == 1) {
				iron_App.notifyOnUpdate($bind(this,this.update));
			}
		}
	}
	,stop: function() {
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.stop();
		}
		this.channels.splice(0,this.channels.length);
	}
	,update: function() {
		if(this.paused) {
			return;
		}
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_finished()) {
				HxOverrides.remove(this.channels,c);
			}
		}
		if(this.channels.length == 0) {
			iron_App.removeUpdate($bind(this,this.update));
			return;
		}
		if(this.data.attenuation > 0) {
			var _this = iron_Scene.active.camera.transform.world;
			var x = _this.self._30;
			var y = _this.self._31;
			var z = _this.self._32;
			var w = _this.self._33;
			if(w == null) {
				w = 1.0;
			}
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			var v1_x = x;
			var v1_y = y;
			var v1_z = z;
			var v1_w = w;
			var _this = this.transform.world;
			var x = _this.self._30;
			var y = _this.self._31;
			var z = _this.self._32;
			var w = _this.self._33;
			if(w == null) {
				w = 1.0;
			}
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			var v2_x = x;
			var v2_y = y;
			var v2_z = z;
			var v2_w = w;
			var vx = v1_x - v2_x;
			var vy = v1_y - v2_y;
			var vz = v1_z - v2_z;
			var distance = Math.sqrt(vx * vx + vy * vy + vz * vz);
			distance = Math.max(Math.min(this.data.distance_max,distance),this.data.distance_reference);
			this.volume = this.data.distance_reference / (this.data.distance_reference + this.data.attenuation * (distance - this.data.distance_reference));
			this.volume *= this.data.volume;
		} else {
			this.volume = this.data.volume;
		}
		if(this.volume > this.data.volume_max) {
			this.volume = this.data.volume_max;
		} else if(this.volume < this.data.volume_min) {
			this.volume = this.data.volume_min;
		}
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.set_volume(this.volume);
		}
	}
	,remove: function() {
		this.stop();
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.speakers,this);
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,__class__: iron_object_SpeakerObject
});
var iron_object_Tilesheet = function(sceneName,tilesheet_ref,tilesheet_action_ref) {
	this.onActionComplete = null;
	this.time = 0.0;
	this.frame = 0;
	this.paused = false;
	this.action = null;
	this.tileY = 0.0;
	this.tileX = 0.0;
	var _gthis = this;
	this.ready = false;
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		var _g = 0;
		var _g1 = format.tilesheet_datas;
		while(_g < _g1.length) {
			var ts = _g1[_g];
			++_g;
			if(ts.name == tilesheet_ref) {
				_gthis.raw = ts;
				iron_Scene.active.tilesheets.push(_gthis);
				_gthis.play(tilesheet_action_ref);
				_gthis.ready = true;
				break;
			}
		}
	});
};
$hxClasses["iron.object.Tilesheet"] = iron_object_Tilesheet;
iron_object_Tilesheet.__name__ = true;
iron_object_Tilesheet.prototype = {
	play: function(action_ref,onActionComplete) {
		this.onActionComplete = onActionComplete;
		var _g = 0;
		var _g1 = this.raw.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.name == action_ref) {
				this.action = a;
				break;
			}
		}
		this.setFrame(this.action.start);
		this.paused = false;
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.tilesheets,this);
	}
	,update: function() {
		if(!this.ready || this.paused || this.action.start >= this.action.end) {
			return;
		}
		this.time += iron_system_Time.realDelta;
		var frameTime = 1 / this.raw.framerate;
		var framesToAdvance = 0;
		while(this.time >= frameTime) {
			this.time -= frameTime;
			++framesToAdvance;
		}
		if(framesToAdvance != 0) {
			this.setFrame(this.frame + framesToAdvance);
		}
	}
	,setFrame: function(f) {
		this.frame = f;
		var tx = this.frame % this.raw.tilesx;
		var ty = this.frame / this.raw.tilesx | 0;
		this.tileX = tx * (1 / this.raw.tilesx);
		this.tileY = ty * (1 / this.raw.tilesy);
		if(this.frame >= this.action.end && this.action.start < this.action.end) {
			if(this.onActionComplete != null) {
				this.onActionComplete();
			}
			if(this.action.loop) {
				this.setFrame(this.action.start);
			} else {
				this.paused = true;
			}
		}
	}
	,__class__: iron_object_Tilesheet
};
var iron_object_Transform = function(object) {
	this.dscale = null;
	this.drot = null;
	this.dloc = null;
	this.boneParent = null;
	this.scaleWorld = 1.0;
	this.localOnly = false;
	this.object = object;
	this.reset();
};
$hxClasses["iron.object.Transform"] = iron_object_Transform;
iron_object_Transform.__name__ = true;
iron_object_Transform.prototype = {
	reset: function() {
		this.world = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.worldUnpack = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.local = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.loc = new iron_math_Vec4();
		this.rot = new iron_math_Quat();
		this.scale = new iron_math_Vec4(1.0,1.0,1.0);
		this.dim = new iron_math_Vec4(2.0,2.0,2.0);
		this.radius = 1.0;
		this.dirty = true;
	}
	,update: function() {
		if(this.dirty) {
			this.buildMatrix();
		}
	}
	,composeDelta: function() {
		var _this = this.dloc;
		var a = this.loc;
		var b = this.dloc;
		_this.x = a.x + b.x;
		_this.y = a.y + b.y;
		_this.z = a.z + b.z;
		var _this = this.dscale;
		var a = this.dscale;
		var b = this.scale;
		_this.x = a.x + b.x;
		_this.y = a.y + b.y;
		_this.z = a.z + b.z;
		var _this = this.drot;
		var f = this._deulerX / 2;
		var c1 = Math.cos(f);
		var s1 = Math.sin(f);
		f = this._deulerY / 2;
		var c2 = Math.cos(f);
		var s2 = Math.sin(f);
		f = this._deulerZ / 2;
		var c3 = Math.cos(f);
		var s3 = Math.sin(f);
		_this.x = s1 * c2 * c3 + c1 * s2 * s3;
		_this.y = c1 * s2 * c3 + s1 * c2 * s3;
		_this.z = c1 * c2 * s3 - s1 * s2 * c3;
		_this.w = c1 * c2 * c3 - s1 * s2 * s3;
		var _this = this.drot;
		var q1 = this.rot;
		var q2 = this.drot;
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		_this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		var _this = this.local;
		var loc = this.dloc;
		var quat = this.drot;
		var sc = this.dscale;
		var x = quat.x;
		var y = quat.y;
		var z = quat.z;
		var w = quat.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		_this.self._00 = 1.0 - (yy + zz);
		_this.self._10 = xy - wz;
		_this.self._20 = xz + wy;
		_this.self._01 = xy + wz;
		_this.self._11 = 1.0 - (xx + zz);
		_this.self._21 = yz - wx;
		_this.self._02 = xz - wy;
		_this.self._12 = yz + wx;
		_this.self._22 = 1.0 - (xx + yy);
		_this.self._03 = 0.0;
		_this.self._13 = 0.0;
		_this.self._23 = 0.0;
		_this.self._30 = 0.0;
		_this.self._31 = 0.0;
		_this.self._32 = 0.0;
		_this.self._33 = 1.0;
		var x = sc.x;
		var y = sc.y;
		var z = sc.z;
		_this.self._00 *= x;
		_this.self._01 *= x;
		_this.self._02 *= x;
		_this.self._03 *= x;
		_this.self._10 *= y;
		_this.self._11 *= y;
		_this.self._12 *= y;
		_this.self._13 *= y;
		_this.self._20 *= z;
		_this.self._21 *= z;
		_this.self._22 *= z;
		_this.self._23 *= z;
		_this.self._30 = loc.x;
		_this.self._31 = loc.y;
		_this.self._32 = loc.z;
	}
	,buildMatrix: function() {
		if(this.dloc == null) {
			var _this = this.local;
			var loc = this.loc;
			var quat = this.rot;
			var sc = this.scale;
			var x = quat.x;
			var y = quat.y;
			var z = quat.z;
			var w = quat.w;
			var x2 = x + x;
			var y2 = y + y;
			var z2 = z + z;
			var xx = x * x2;
			var xy = x * y2;
			var xz = x * z2;
			var yy = y * y2;
			var yz = y * z2;
			var zz = z * z2;
			var wx = w * x2;
			var wy = w * y2;
			var wz = w * z2;
			_this.self._00 = 1.0 - (yy + zz);
			_this.self._10 = xy - wz;
			_this.self._20 = xz + wy;
			_this.self._01 = xy + wz;
			_this.self._11 = 1.0 - (xx + zz);
			_this.self._21 = yz - wx;
			_this.self._02 = xz - wy;
			_this.self._12 = yz + wx;
			_this.self._22 = 1.0 - (xx + yy);
			_this.self._03 = 0.0;
			_this.self._13 = 0.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
			var x = sc.x;
			var y = sc.y;
			var z = sc.z;
			_this.self._00 *= x;
			_this.self._01 *= x;
			_this.self._02 *= x;
			_this.self._03 *= x;
			_this.self._10 *= y;
			_this.self._11 *= y;
			_this.self._12 *= y;
			_this.self._13 *= y;
			_this.self._20 *= z;
			_this.self._21 *= z;
			_this.self._22 *= z;
			_this.self._23 *= z;
			_this.self._30 = loc.x;
			_this.self._31 = loc.y;
			_this.self._32 = loc.z;
		} else {
			this.composeDelta();
		}
		if(this.boneParent != null) {
			var _this = this.local;
			var b = this.boneParent;
			var a = this.local;
			var a00 = a.self._00;
			var a01 = a.self._01;
			var a02 = a.self._02;
			var a03 = a.self._03;
			var a10 = a.self._10;
			var a11 = a.self._11;
			var a12 = a.self._12;
			var a13 = a.self._13;
			var a20 = a.self._20;
			var a21 = a.self._21;
			var a22 = a.self._22;
			var a23 = a.self._23;
			var a30 = a.self._30;
			var a31 = a.self._31;
			var a32 = a.self._32;
			var a33 = a.self._33;
			var b0 = b.self._00;
			var b1 = b.self._10;
			var b2 = b.self._20;
			var b3 = b.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._03;
			b1 = b.self._13;
			b2 = b.self._23;
			b3 = b.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		}
		if(this.object.parent != null && !this.localOnly) {
			var _this = this.world;
			var a = this.local;
			var b = this.object.parent.transform.world;
			var a00 = a.self._00;
			var a01 = a.self._01;
			var a02 = a.self._02;
			var a03 = a.self._03;
			var a10 = a.self._10;
			var a11 = a.self._11;
			var a12 = a.self._12;
			var a13 = a.self._13;
			var a20 = a.self._20;
			var a21 = a.self._21;
			var a22 = a.self._22;
			var a23 = a.self._23;
			var a30 = a.self._30;
			var a31 = a.self._31;
			var a32 = a.self._32;
			var a33 = a.self._33;
			var b0 = b.self._00;
			var b1 = b.self._10;
			var b2 = b.self._20;
			var b3 = b.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._01;
			b1 = b.self._11;
			b2 = b.self._21;
			b3 = b.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = b.self._02;
			b1 = b.self._12;
			b2 = b.self._22;
			b3 = b.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			_this.self._03 = 0;
			_this.self._13 = 0;
			_this.self._23 = 0;
			_this.self._33 = 1;
		} else {
			var _this = this.world;
			var m = this.local;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
		}
		var _this = this.worldUnpack;
		var m = this.world;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		if(this.scaleWorld != 1.0) {
			this.worldUnpack.self._00 *= this.scaleWorld;
			this.worldUnpack.self._01 *= this.scaleWorld;
			this.worldUnpack.self._02 *= this.scaleWorld;
			this.worldUnpack.self._03 *= this.scaleWorld;
			this.worldUnpack.self._10 *= this.scaleWorld;
			this.worldUnpack.self._11 *= this.scaleWorld;
			this.worldUnpack.self._12 *= this.scaleWorld;
			this.worldUnpack.self._13 *= this.scaleWorld;
			this.worldUnpack.self._20 *= this.scaleWorld;
			this.worldUnpack.self._21 *= this.scaleWorld;
			this.worldUnpack.self._22 *= this.scaleWorld;
			this.worldUnpack.self._23 *= this.scaleWorld;
		}
		if(this.object.constraints != null) {
			var _g = 0;
			var _g1 = this.object.constraints;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.apply(this);
			}
		}
		this.computeDim();
		var _g = 0;
		var _g1 = this.object.children;
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			n.transform.buildMatrix();
		}
		this.dirty = false;
	}
	,translate: function(x,y,z) {
		this.loc.x += x;
		this.loc.y += y;
		this.loc.z += z;
		this.buildMatrix();
	}
	,decompose: function() {
		var _this = this.local;
		var loc = this.loc;
		var quat = this.rot;
		var scale = this.scale;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._10;
		_this1.y = _this.self._11;
		_this1.z = _this.self._12;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.y = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._20;
		_this1.y = _this.self._21;
		_this1.z = _this.self._22;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.z = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this1 = _this.self;
		var m3 = _this1._12;
		var m4 = _this1._22;
		var m5 = _this1._32;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c00 = _this1._11 * (m4 * m8 - m5 * m7) - _this1._21 * (m3 * m8 - m5 * m6) + _this1._31 * (m3 * m7 - m4 * m6);
		var m3 = _this1._12;
		var m4 = _this1._22;
		var m5 = _this1._32;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c01 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		var m3 = _this1._11;
		var m4 = _this1._21;
		var m5 = _this1._31;
		var m6 = _this1._13;
		var m7 = _this1._23;
		var m8 = _this1._33;
		var c02 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		var m3 = _this1._11;
		var m4 = _this1._21;
		var m5 = _this1._31;
		var m6 = _this1._12;
		var m7 = _this1._22;
		var m8 = _this1._32;
		var c03 = _this1._10 * (m4 * m8 - m5 * m7) - _this1._20 * (m3 * m8 - m5 * m6) + _this1._30 * (m3 * m7 - m4 * m6);
		if(_this1._00 * c00 - _this1._01 * c01 + _this1._02 * c02 - _this1._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		var m = iron_math_Mat4.helpMat;
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m31 = m.self._02;
		var m32 = m.self._12;
		var m33 = m.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m32 - m23) * s;
			quat.y = (m13 - m31) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			quat.w = (m32 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			quat.w = (m13 - m31) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m31) / s;
			quat.y = (m23 + m32) / s;
			quat.z = 0.25 * s;
		}
	}
	,rotate: function(axis,f) {
		var _this = iron_object_Transform.q;
		var s = Math.sin(f * 0.5);
		_this.x = axis.x * s;
		_this.y = axis.y * s;
		_this.z = axis.z * s;
		_this.w = Math.cos(f * 0.5);
		var l = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z + _this.w * _this.w);
		if(l == 0.0) {
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 0;
		} else {
			l = 1.0 / l;
			_this.x *= l;
			_this.y *= l;
			_this.z *= l;
			_this.w *= l;
		}
		var _this = this.rot;
		var q1 = iron_object_Transform.q;
		var q2 = this.rot;
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		_this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		this.buildMatrix();
	}
	,move: function(axis,f) {
		if(f == null) {
			f = 1.0;
		}
		var _this = this.loc;
		_this.x += axis.x * f;
		_this.y += axis.y * f;
		_this.z += axis.z * f;
		this.buildMatrix();
	}
	,setRotation: function(x,y,z) {
		var _this = this.rot;
		var f = x / 2;
		var c1 = Math.cos(f);
		var s1 = Math.sin(f);
		f = y / 2;
		var c2 = Math.cos(f);
		var s2 = Math.sin(f);
		f = z / 2;
		var c3 = Math.cos(f);
		var s3 = Math.sin(f);
		_this.x = s1 * c2 * c3 + c1 * s2 * s3;
		_this.y = c1 * s2 * c3 + s1 * c2 * s3;
		_this.z = c1 * c2 * s3 - s1 * s2 * c3;
		_this.w = c1 * c2 * c3 - s1 * s2 * s3;
		this._eulerX = x;
		this._eulerY = y;
		this._eulerZ = z;
		this.dirty = true;
	}
	,computeRadius: function() {
		this.radius = Math.sqrt(this.dim.x * this.dim.x + this.dim.y * this.dim.y + this.dim.z * this.dim.z);
	}
	,computeDim: function() {
		if(this.object.raw == null) {
			this.computeRadius();
			return;
		}
		var d = this.object.raw.dimensions;
		if(d == null) {
			var _this = this.dim;
			_this.x = 2 * this.scale.x;
			_this.y = 2 * this.scale.y;
			_this.z = 2 * this.scale.z;
			_this.w = 1.0;
		} else {
			var _this = this.dim;
			var y = d.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.scale.y;
			var z = d.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.scale.z;
			_this.x = d.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) * this.scale.x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.0;
		}
		this.computeRadius();
	}
	,applyParentInverse: function() {
		var pt = this.object.parent.transform;
		pt.buildMatrix();
		var _this = iron_object_Transform.temp;
		var m = pt.world;
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this.self._00 = 1.0;
			_this.self._01 = 0.0;
			_this.self._02 = 0.0;
			_this.self._03 = 0.0;
			_this.self._10 = 0.0;
			_this.self._11 = 1.0;
			_this.self._12 = 0.0;
			_this.self._13 = 0.0;
			_this.self._20 = 0.0;
			_this.self._21 = 0.0;
			_this.self._22 = 1.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		var _this = this.local;
		var m = iron_object_Transform.temp;
		var a00 = _this.self._00;
		var a01 = _this.self._01;
		var a02 = _this.self._02;
		var a03 = _this.self._03;
		var a10 = _this.self._10;
		var a11 = _this.self._11;
		var a12 = _this.self._12;
		var a13 = _this.self._13;
		var a20 = _this.self._20;
		var a21 = _this.self._21;
		var a22 = _this.self._22;
		var a23 = _this.self._23;
		var a30 = _this.self._30;
		var a31 = _this.self._31;
		var a32 = _this.self._32;
		var a33 = _this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.decompose();
		this.buildMatrix();
	}
	,applyParent: function() {
		var pt = this.object.parent.transform;
		pt.buildMatrix();
		var _this = this.local;
		var m = pt.world;
		var a00 = _this.self._00;
		var a01 = _this.self._01;
		var a02 = _this.self._02;
		var a03 = _this.self._03;
		var a10 = _this.self._10;
		var a11 = _this.self._11;
		var a12 = _this.self._12;
		var a13 = _this.self._13;
		var a20 = _this.self._20;
		var a21 = _this.self._21;
		var a22 = _this.self._22;
		var a23 = _this.self._23;
		var a30 = _this.self._30;
		var a31 = _this.self._31;
		var a32 = _this.self._32;
		var a33 = _this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.decompose();
		this.buildMatrix();
	}
	,__class__: iron_object_Transform
};
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = true;
kha_math_FastMatrix3.prototype = {
	__class__: kha_math_FastMatrix3
};
var iron_object_Uniforms = function() { };
$hxClasses["iron.object.Uniforms"] = iron_object_Uniforms;
iron_object_Uniforms.__name__ = true;
iron_object_Uniforms.setContextConstants = function(g,context,bindParams) {
	if(context.raw.constants != null) {
		var _g = 0;
		var _g1 = context.raw.constants.length;
		while(_g < _g1) {
			var i = _g++;
			var c = context.raw.constants[i];
			iron_object_Uniforms.setContextConstant(g,context.constants[i],c);
		}
	}
	if(bindParams != null) {
		var _g = 0;
		var _g1 = bindParams.length / 2 | 0;
		while(_g < _g1) {
			var i = _g++;
			var pos = i * 2;
			var rtID = bindParams[pos];
			var samplerID = bindParams[pos + 1];
			var attachDepth = false;
			var char = rtID.charAt(0);
			if(char == "_") {
				attachDepth = true;
				rtID = HxOverrides.substr(rtID,1,null);
			}
			var rt = attachDepth ? iron_RenderPath.active.depthToRenderTarget.h[rtID] : iron_RenderPath.active.renderTargets.h[rtID];
			iron_object_Uniforms.bindRenderTarget(g,rt,context,samplerID,attachDepth);
		}
	}
	if(context.raw.texture_units != null) {
		var _g = 0;
		var _g1 = context.raw.texture_units.length;
		while(_g < _g1) {
			var j = _g++;
			var tulink = context.raw.texture_units[j].link;
			if(tulink == null) {
				continue;
			}
			if(tulink.charAt(0) == "$") {
				g.setTexture(context.textureUnits[j],iron_Scene.active.embedded.h[HxOverrides.substr(tulink,1,null)]);
				if(StringTools.endsWith(tulink,".raw")) {
					g.setTexture3DParameters(context.textureUnits[j],0,0,0,1,1,0);
				} else {
					g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
				}
			} else {
				switch(tulink) {
				case "_envmap":
					var w = iron_Scene.active.world;
					if(w != null) {
						g.setTexture(context.textureUnits[j],w.envmap);
						g.setTextureParameters(context.textureUnits[j],0,0,1,1,0);
					}
					break;
				case "_envmapRadiance":
					var w1 = iron_Scene.active.world;
					if(w1 != null) {
						g.setTexture(context.textureUnits[j],w1.probe.radiance);
						g.setTextureParameters(context.textureUnits[j],0,0,1,1,2);
					}
					break;
				}
			}
		}
	}
};
iron_object_Uniforms.setObjectConstants = function(g,context,object) {
	if(context.raw.constants != null) {
		var _g = 0;
		var _g1 = context.raw.constants.length;
		while(_g < _g1) {
			var i = _g++;
			var c = context.raw.constants[i];
			iron_object_Uniforms.setObjectConstant(g,object,context.constants[i],c);
		}
	}
	if(iron_object_Uniforms.externalTextureLinks != null) {
		if(context.raw.texture_units != null) {
			var _g = 0;
			var _g1 = context.raw.texture_units.length;
			while(_g < _g1) {
				var j = _g++;
				var tu = context.raw.texture_units[j];
				if(tu.link == null) {
					continue;
				}
				var tuAddrU;
				switch(tu.addressing_u) {
				case "clamp":
					tuAddrU = 2;
					break;
				case "mirror":
					tuAddrU = 1;
					break;
				default:
					tuAddrU = 0;
				}
				var tuAddrV;
				switch(tu.addressing_v) {
				case "clamp":
					tuAddrV = 2;
					break;
				case "mirror":
					tuAddrV = 1;
					break;
				default:
					tuAddrV = 0;
				}
				var tuFilterMin;
				switch(tu.filter_min) {
				case "anisotropic":
					tuFilterMin = 2;
					break;
				case "point":
					tuFilterMin = 0;
					break;
				default:
					tuFilterMin = 1;
				}
				var tuFilterMag;
				switch(tu.filter_mag) {
				case "anisotropic":
					tuFilterMag = 2;
					break;
				case "point":
					tuFilterMag = 0;
					break;
				default:
					tuFilterMag = 1;
				}
				var tuMipMapFilter;
				switch(tu.mipmap_filter) {
				case "linear":
					tuMipMapFilter = 2;
					break;
				case "point":
					tuMipMapFilter = 1;
					break;
				default:
					tuMipMapFilter = 0;
				}
				var _g2 = 0;
				var _g3 = iron_object_Uniforms.externalTextureLinks;
				while(_g2 < _g3.length) {
					var f = _g3[_g2];
					++_g2;
					var image = f(object,iron_object_Uniforms.currentMat(object),tu.link);
					if(image != null) {
						if(StringTools.endsWith(tu.link,"_depth")) {
							g.setTextureDepth(context.textureUnits[j],image);
						} else {
							g.setTexture(context.textureUnits[j],image);
						}
						g.setTextureParameters(context.textureUnits[j],tuAddrU,tuAddrV,tuFilterMin,tuFilterMag,tuMipMapFilter);
						break;
					}
				}
			}
		}
	}
};
iron_object_Uniforms.bindRenderTarget = function(g,rt,context,samplerID,attachDepth) {
	if(rt != null) {
		var tus = context.raw.texture_units;
		var _g = 0;
		var _g1 = tus.length;
		while(_g < _g1) {
			var j = _g++;
			if(samplerID == tus[j].name) {
				var isImage = tus[j].is_image != null && tus[j].is_image;
				var paramsSet = false;
				if(rt.raw.depth > 1) {
					g.setTexture3DParameters(context.textureUnits[j],2,2,2,1,2,2);
					paramsSet = true;
				}
				if(isImage) {
					g.setImageTexture(context.textureUnits[j],rt.image);
					g.setTexture3DParameters(context.textureUnits[j],2,2,2,1,0,2);
					paramsSet = true;
				} else if(rt.isCubeMap) {
					if(attachDepth) {
						g.setCubeMapDepth(context.textureUnits[j],rt.cubeMap);
					} else {
						g.setCubeMap(context.textureUnits[j],rt.cubeMap);
					}
				} else if(attachDepth) {
					g.setTextureDepth(context.textureUnits[j],rt.image);
				} else {
					g.setTexture(context.textureUnits[j],rt.image);
				}
				if(!paramsSet && rt.raw.mipmaps != null && rt.raw.mipmaps == true && !isImage) {
					g.setTextureParameters(context.textureUnits[j],2,2,1,1,2);
					paramsSet = true;
				}
				if(!paramsSet) {
					if(StringTools.startsWith(rt.raw.name,"bloom")) {
						g.setTextureParameters(context.textureUnits[j],2,2,1,1,2);
					}
					if(StringTools.startsWith(samplerID,"shadowMap")) {
						if(rt.isCubeMap) {
							g.setCubeMapCompareMode(context.textureUnits[j],true);
						} else {
							g.setTextureParameters(context.textureUnits[j],2,2,1,1,0);
							g.setTextureCompareMode(context.textureUnits[j],true);
						}
						paramsSet = true;
					} else if(attachDepth) {
						g.setTextureParameters(context.textureUnits[j],2,2,0,0,0);
						paramsSet = true;
					}
				}
				if(!paramsSet) {
					var oc = context.overrideContext;
					var allowParams = oc == null || oc.shared_sampler == null || oc.shared_sampler == samplerID;
					if(allowParams) {
						var addressing = oc != null && oc.addressing == "repeat" ? 0 : 2;
						var filter = oc != null && oc.filter == "point" ? 0 : iron_object_Uniforms.defaultFilter;
						g.setTextureParameters(context.textureUnits[j],addressing,addressing,filter,filter,0);
					}
					paramsSet = true;
				}
			}
		}
	}
};
iron_object_Uniforms.setContextConstant = function(g,location,c) {
	if(c.link == null) {
		return true;
	}
	var camera = iron_Scene.active.camera;
	var light = iron_RenderPath.active.light;
	if(c.type == "mat4") {
		var m = null;
		var _g = c.link;
		if(_g == null) {
			return false;
		} else {
			switch(_g) {
			case "_biasLightViewProjectionMatrix":
				if(light != null) {
					var _this = iron_object_Uniforms.helpMat;
					var m1 = light.VP;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
					var _this = iron_object_Uniforms.helpMat;
					var m1 = iron_object_Uniforms.biasMat;
					var a00 = _this.self._00;
					var a01 = _this.self._01;
					var a02 = _this.self._02;
					var a03 = _this.self._03;
					var a10 = _this.self._10;
					var a11 = _this.self._11;
					var a12 = _this.self._12;
					var a13 = _this.self._13;
					var a20 = _this.self._20;
					var a21 = _this.self._21;
					var a22 = _this.self._22;
					var a23 = _this.self._23;
					var a30 = _this.self._30;
					var a31 = _this.self._31;
					var a32 = _this.self._32;
					var a33 = _this.self._33;
					var b0 = m1.self._00;
					var b1 = m1.self._10;
					var b2 = m1.self._20;
					var b3 = m1.self._30;
					_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._01;
					b1 = m1.self._11;
					b2 = m1.self._21;
					b3 = m1.self._31;
					_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._02;
					b1 = m1.self._12;
					b2 = m1.self._22;
					b3 = m1.self._32;
					_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m1.self._03;
					b1 = m1.self._13;
					b2 = m1.self._23;
					b3 = m1.self._33;
					_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					m = iron_object_Uniforms.helpMat;
				}
				break;
			case "_inverseProjectionMatrix":
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.P;
				var a00 = m1.self._00;
				var a01 = m1.self._01;
				var a02 = m1.self._02;
				var a03 = m1.self._03;
				var a10 = m1.self._10;
				var a11 = m1.self._11;
				var a12 = m1.self._12;
				var a13 = m1.self._13;
				var a20 = m1.self._20;
				var a21 = m1.self._21;
				var a22 = m1.self._22;
				var a23 = m1.self._23;
				var a30 = m1.self._30;
				var a31 = m1.self._31;
				var a32 = m1.self._32;
				var a33 = m1.self._33;
				var b00 = a00 * a11 - a01 * a10;
				var b01 = a00 * a12 - a02 * a10;
				var b02 = a00 * a13 - a03 * a10;
				var b03 = a01 * a12 - a02 * a11;
				var b04 = a01 * a13 - a03 * a11;
				var b05 = a02 * a13 - a03 * a12;
				var b06 = a20 * a31 - a21 * a30;
				var b07 = a20 * a32 - a22 * a30;
				var b08 = a20 * a33 - a23 * a30;
				var b09 = a21 * a32 - a22 * a31;
				var b10 = a21 * a33 - a23 * a31;
				var b11 = a22 * a33 - a23 * a32;
				var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
				if(det == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det = 1.0 / det;
					_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
					_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
					_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
					_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
					_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
					_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
					_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
					_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
					_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
					_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
					_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
					_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
					_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
					_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
					_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
					_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
				}
				m = iron_object_Uniforms.helpMat;
				break;
			case "_inverseViewProjectionMatrix":
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.V;
				_this.self._00 = m1.self._00;
				_this.self._01 = m1.self._01;
				_this.self._02 = m1.self._02;
				_this.self._03 = m1.self._03;
				_this.self._10 = m1.self._10;
				_this.self._11 = m1.self._11;
				_this.self._12 = m1.self._12;
				_this.self._13 = m1.self._13;
				_this.self._20 = m1.self._20;
				_this.self._21 = m1.self._21;
				_this.self._22 = m1.self._22;
				_this.self._23 = m1.self._23;
				_this.self._30 = m1.self._30;
				_this.self._31 = m1.self._31;
				_this.self._32 = m1.self._32;
				_this.self._33 = m1.self._33;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.P;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = iron_object_Uniforms.helpMat;
				var a00 = m1.self._00;
				var a01 = m1.self._01;
				var a02 = m1.self._02;
				var a03 = m1.self._03;
				var a10 = m1.self._10;
				var a11 = m1.self._11;
				var a12 = m1.self._12;
				var a13 = m1.self._13;
				var a20 = m1.self._20;
				var a21 = m1.self._21;
				var a22 = m1.self._22;
				var a23 = m1.self._23;
				var a30 = m1.self._30;
				var a31 = m1.self._31;
				var a32 = m1.self._32;
				var a33 = m1.self._33;
				var b00 = a00 * a11 - a01 * a10;
				var b01 = a00 * a12 - a02 * a10;
				var b02 = a00 * a13 - a03 * a10;
				var b03 = a01 * a12 - a02 * a11;
				var b04 = a01 * a13 - a03 * a11;
				var b05 = a02 * a13 - a03 * a12;
				var b06 = a20 * a31 - a21 * a30;
				var b07 = a20 * a32 - a22 * a30;
				var b08 = a20 * a33 - a23 * a30;
				var b09 = a21 * a32 - a22 * a31;
				var b10 = a21 * a33 - a23 * a31;
				var b11 = a22 * a33 - a23 * a32;
				var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
				if(det == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det = 1.0 / det;
					_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
					_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
					_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
					_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
					_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
					_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
					_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
					_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
					_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
					_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
					_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
					_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
					_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
					_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
					_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
					_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
				}
				m = iron_object_Uniforms.helpMat;
				break;
			case "_lightViewProjectionMatrix":
				if(light != null) {
					m = light.VP;
				}
				break;
			case "_prevViewProjectionMatrix":
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.prevV;
				_this.self._00 = m1.self._00;
				_this.self._01 = m1.self._01;
				_this.self._02 = m1.self._02;
				_this.self._03 = m1.self._03;
				_this.self._10 = m1.self._10;
				_this.self._11 = m1.self._11;
				_this.self._12 = m1.self._12;
				_this.self._13 = m1.self._13;
				_this.self._20 = m1.self._20;
				_this.self._21 = m1.self._21;
				_this.self._22 = m1.self._22;
				_this.self._23 = m1.self._23;
				_this.self._30 = m1.self._30;
				_this.self._31 = m1.self._31;
				_this.self._32 = m1.self._32;
				_this.self._33 = m1.self._33;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.P;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				m = iron_object_Uniforms.helpMat;
				break;
			case "_projectionMatrix":
				m = camera.P;
				break;
			case "_skydomeMatrix":
				var tr = camera.transform;
				var _this = iron_object_Uniforms.helpVec;
				_this.x = tr.world.self._30;
				_this.y = tr.world.self._31;
				_this.z = tr.world.self._32 - 3.5;
				_this.w = 1.0;
				var bounds = camera.data.raw.far_plane * 0.95;
				var _this = iron_object_Uniforms.helpVec2;
				_this.x = bounds;
				_this.y = bounds;
				_this.z = bounds;
				_this.w = 1.0;
				var _this = iron_object_Uniforms.helpMat;
				var loc = iron_object_Uniforms.helpVec;
				var quat = iron_object_Uniforms.helpQuat;
				var sc = iron_object_Uniforms.helpVec2;
				var x = quat.x;
				var y = quat.y;
				var z = quat.z;
				var w = quat.w;
				var x2 = x + x;
				var y2 = y + y;
				var z2 = z + z;
				var xx = x * x2;
				var xy = x * y2;
				var xz = x * z2;
				var yy = y * y2;
				var yz = y * z2;
				var zz = z * z2;
				var wx = w * x2;
				var wy = w * y2;
				var wz = w * z2;
				_this.self._00 = 1.0 - (yy + zz);
				_this.self._10 = xy - wz;
				_this.self._20 = xz + wy;
				_this.self._01 = xy + wz;
				_this.self._11 = 1.0 - (xx + zz);
				_this.self._21 = yz - wx;
				_this.self._02 = xz - wy;
				_this.self._12 = yz + wx;
				_this.self._22 = 1.0 - (xx + yy);
				_this.self._03 = 0.0;
				_this.self._13 = 0.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
				var x = sc.x;
				var y = sc.y;
				var z = sc.z;
				_this.self._00 *= x;
				_this.self._01 *= x;
				_this.self._02 *= x;
				_this.self._03 *= x;
				_this.self._10 *= y;
				_this.self._11 *= y;
				_this.self._12 *= y;
				_this.self._13 *= y;
				_this.self._20 *= z;
				_this.self._21 *= z;
				_this.self._22 *= z;
				_this.self._23 *= z;
				_this.self._30 = loc.x;
				_this.self._31 = loc.y;
				_this.self._32 = loc.z;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.V;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.P;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				m = iron_object_Uniforms.helpMat;
				break;
			case "_transposeViewMatrix":
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.V;
				_this.self._00 = m1.self._00;
				_this.self._01 = m1.self._01;
				_this.self._02 = m1.self._02;
				_this.self._03 = m1.self._03;
				_this.self._10 = m1.self._10;
				_this.self._11 = m1.self._11;
				_this.self._12 = m1.self._12;
				_this.self._13 = m1.self._13;
				_this.self._20 = m1.self._20;
				_this.self._21 = m1.self._21;
				_this.self._22 = m1.self._22;
				_this.self._23 = m1.self._23;
				_this.self._30 = m1.self._30;
				_this.self._31 = m1.self._31;
				_this.self._32 = m1.self._32;
				_this.self._33 = m1.self._33;
				var _this = iron_object_Uniforms.helpMat;
				var f = _this.self._01;
				_this.self._01 = _this.self._10;
				_this.self._10 = f;
				f = _this.self._02;
				_this.self._02 = _this.self._20;
				_this.self._20 = f;
				f = _this.self._12;
				_this.self._12 = _this.self._21;
				_this.self._21 = f;
				m = iron_object_Uniforms.helpMat;
				break;
			case "_viewMatrix":
				m = camera.V;
				break;
			case "_viewProjectionMatrix":
				m = camera.VP;
				break;
			default:
				return false;
			}
		}
		g.setMatrix(location,m != null ? m.self : new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1));
		return true;
	} else if(c.type == "vec4") {
		var v = null;
		var _this = iron_object_Uniforms.helpVec;
		var w = 0;
		if(w == null) {
			w = 1.0;
		}
		_this.x = 0;
		_this.y = 0;
		_this.z = 0;
		_this.w = w;
		var _g = c.link;
		return false;
	} else if(c.type == "vec3") {
		var v = null;
		var _this = iron_object_Uniforms.helpVec;
		_this.x = 0;
		_this.y = 0;
		_this.z = 0;
		_this.w = 1.0;
		var _g = c.link;
		if(_g == null) {
			return false;
		} else {
			switch(_g) {
			case "_backgroundCol":
				if(camera.data.raw.clear_color != null) {
					var _this = iron_object_Uniforms.helpVec;
					var y = camera.data.raw.clear_color.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var z = camera.data.raw.clear_color.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN);
					_this.x = camera.data.raw.clear_color.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					_this.y = y;
					_this.z = z;
					_this.w = 1.0;
				}
				v = iron_object_Uniforms.helpVec;
				break;
			case "_cameraLook":
				var _this = new iron_math_Vec4(-camera.transform.world.self._20,-camera.transform.world.self._21,-camera.transform.world.self._22);
				var n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
				if(n > 0.0) {
					var invN = 1.0 / n;
					_this.x *= invN;
					_this.y *= invN;
					_this.z *= invN;
				}
				iron_object_Uniforms.helpVec = _this;
				v = iron_object_Uniforms.helpVec;
				break;
			case "_cameraPosition":
				var _this = iron_object_Uniforms.helpVec;
				_this.x = camera.transform.world.self._30;
				_this.y = camera.transform.world.self._31;
				_this.z = camera.transform.world.self._32;
				_this.w = 1.0;
				v = iron_object_Uniforms.helpVec;
				break;
			case "_cameraRight":
				var _this = new iron_math_Vec4(camera.transform.world.self._00,camera.transform.world.self._01,camera.transform.world.self._02);
				var n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
				if(n > 0.0) {
					var invN = 1.0 / n;
					_this.x *= invN;
					_this.y *= invN;
					_this.z *= invN;
				}
				iron_object_Uniforms.helpVec = _this;
				v = iron_object_Uniforms.helpVec;
				break;
			case "_cameraUp":
				var _this = new iron_math_Vec4(camera.transform.world.self._10,camera.transform.world.self._11,camera.transform.world.self._12);
				var n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
				if(n > 0.0) {
					var invN = 1.0 / n;
					_this.x *= invN;
					_this.y *= invN;
					_this.z *= invN;
				}
				iron_object_Uniforms.helpVec = _this;
				v = iron_object_Uniforms.helpVec;
				break;
			case "_hosekSunDirection":
				var w = iron_Scene.active.world;
				if(w != null) {
					var _this = iron_object_Uniforms.helpVec;
					var y = w.raw.sun_direction.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var z = w.raw.sun_direction.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) > 0 ? w.raw.sun_direction.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) : 0;
					_this.x = w.raw.sun_direction.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN);
					_this.y = y;
					_this.z = z;
					_this.w = 1.0;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_lightArea0":
				if(light != null && light.data.raw.size != null) {
					var f2 = 0.5;
					var sx = light.data.raw.size * f2;
					var sy = light.data.raw.size_y * f2;
					var _this = iron_object_Uniforms.helpVec;
					_this.x = -sx;
					_this.y = sy;
					_this.z = 0.0;
					_this.w = 1.0;
					var _this = iron_object_Uniforms.helpVec;
					var m = light.transform.world;
					var x = _this.x;
					var y = _this.y;
					var z = _this.z;
					_this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30;
					_this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31;
					_this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_lightArea1":
				if(light != null && light.data.raw.size != null) {
					var f2 = 0.5;
					var sx = light.data.raw.size * f2;
					var sy = light.data.raw.size_y * f2;
					var _this = iron_object_Uniforms.helpVec;
					_this.x = sx;
					_this.y = sy;
					_this.z = 0.0;
					_this.w = 1.0;
					var _this = iron_object_Uniforms.helpVec;
					var m = light.transform.world;
					var x = _this.x;
					var y = _this.y;
					var z = _this.z;
					_this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30;
					_this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31;
					_this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_lightArea2":
				if(light != null && light.data.raw.size != null) {
					var f2 = 0.5;
					var sx = light.data.raw.size * f2;
					var sy = light.data.raw.size_y * f2;
					var _this = iron_object_Uniforms.helpVec;
					_this.x = sx;
					_this.y = -sy;
					_this.z = 0.0;
					_this.w = 1.0;
					var _this = iron_object_Uniforms.helpVec;
					var m = light.transform.world;
					var x = _this.x;
					var y = _this.y;
					var z = _this.z;
					_this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30;
					_this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31;
					_this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_lightArea3":
				if(light != null && light.data.raw.size != null) {
					var f2 = 0.5;
					var sx = light.data.raw.size * f2;
					var sy = light.data.raw.size_y * f2;
					var _this = iron_object_Uniforms.helpVec;
					_this.x = -sx;
					_this.y = -sy;
					_this.z = 0.0;
					_this.w = 1.0;
					var _this = iron_object_Uniforms.helpVec;
					var m = light.transform.world;
					var x = _this.x;
					var y = _this.y;
					var z = _this.z;
					_this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30;
					_this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31;
					_this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_lightDirection":
				if(light != null) {
					var _this = new iron_math_Vec4(light.V.self._02,light.V.self._12,light.V.self._22);
					var n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
					if(n > 0.0) {
						var invN = 1.0 / n;
						_this.x *= invN;
						_this.y *= invN;
						_this.z *= invN;
					}
					iron_object_Uniforms.helpVec = _this;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_lightPosition":
				if(light != null) {
					var _this = iron_object_Uniforms.helpVec;
					_this.x = light.transform.world.self._30;
					_this.y = light.transform.world.self._31;
					_this.z = light.transform.world.self._32;
					_this.w = 1.0;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_pointColor":
				var point = iron_RenderPath.active.point;
				if(point != null) {
					var str = point.visible ? point.data.raw.strength : 0.0;
					var _this = iron_object_Uniforms.helpVec;
					var y = point.data.raw.color.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
					var z = point.data.raw.color.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
					_this.x = point.data.raw.color.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
					_this.y = y;
					_this.z = z;
					_this.w = 1.0;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_pointPosition":
				var point = iron_RenderPath.active.point;
				if(point != null) {
					var _this = iron_object_Uniforms.helpVec;
					_this.x = point.transform.world.self._30;
					_this.y = point.transform.world.self._31;
					_this.z = point.transform.world.self._32;
					_this.w = 1.0;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_sunColor":
				var sun = iron_RenderPath.active.sun;
				if(sun != null) {
					var str = sun.visible ? sun.data.raw.strength : 0.0;
					var _this = iron_object_Uniforms.helpVec;
					var y = sun.data.raw.color.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
					var z = sun.data.raw.color.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
					_this.x = sun.data.raw.color.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN) * str;
					_this.y = y;
					_this.z = z;
					_this.w = 1.0;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			case "_sunDirection":
				var sun = iron_RenderPath.active.sun;
				if(sun != null) {
					var _this = new iron_math_Vec4(sun.V.self._02,sun.V.self._12,sun.V.self._22);
					var n = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
					if(n > 0.0) {
						var invN = 1.0 / n;
						_this.x *= invN;
						_this.y *= invN;
						_this.z *= invN;
					}
					iron_object_Uniforms.helpVec = _this;
					v = iron_object_Uniforms.helpVec;
				}
				break;
			default:
				return false;
			}
		}
		if(v != null) {
			g.setFloat3(location,v.x,v.y,v.z);
		} else {
			g.setFloat3(location,0.0,0.0,0.0);
		}
		return true;
	} else if(c.type == "vec2") {
		var v = null;
		var _this = iron_object_Uniforms.helpVec;
		_this.x = 0;
		_this.y = 0;
		_this.z = 0;
		_this.w = 1.0;
		var _g = c.link;
		if(_g == null) {
			return false;
		} else {
			switch(_g) {
			case "_aspectRatio":
				v = iron_object_Uniforms.helpVec;
				v.x = iron_RenderPath.active.currentH / iron_RenderPath.active.currentW;
				v.y = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
				v.x = v.x > 1.0 ? 1.0 : v.x;
				v.y = v.y > 1.0 ? 1.0 : v.y;
				break;
			case "_cameraPlane":
				v = iron_object_Uniforms.helpVec;
				v.x = camera.data.raw.near_plane;
				v.y = camera.data.raw.far_plane;
				break;
			case "_cameraPlaneProj":
				var near = camera.data.raw.near_plane;
				var far = camera.data.raw.far_plane;
				v = iron_object_Uniforms.helpVec;
				v.x = far / (far - near);
				v.y = -far * near / (far - near);
				break;
			case "_lightPlane":
				if(light != null) {
					v = iron_object_Uniforms.helpVec;
					v.x = light.data.raw.near_plane;
					v.y = light.data.raw.far_plane;
				}
				break;
			case "_lightPlaneProj":
				if(light != null) {
					var near = light.data.raw.near_plane;
					var far = light.data.raw.far_plane;
					var a = far + near;
					var b = far - near;
					var f2 = 2.0;
					var c1 = f2 * far * near;
					v = iron_object_Uniforms.helpVec;
					v.x = a / b;
					v.y = c1 / b;
				}
				break;
			case "_screenSize":
				v = iron_object_Uniforms.helpVec;
				v.x = iron_RenderPath.active.currentW;
				v.y = iron_RenderPath.active.currentH;
				break;
			case "_screenSizeInv":
				v = iron_object_Uniforms.helpVec;
				v.x = 1.0 / iron_RenderPath.active.currentW;
				v.y = 1.0 / iron_RenderPath.active.currentH;
				break;
			case "_shadowMapSize":
				if(light != null && light.data.raw.cast_shadow) {
					v = iron_object_Uniforms.helpVec;
					v.x = v.y = light.data.raw.shadowmap_size;
				}
				break;
			case "_vec2x":
				v = iron_object_Uniforms.helpVec;
				v.x = 1.0;
				v.y = 0.0;
				break;
			case "_vec2x2":
				v = iron_object_Uniforms.helpVec;
				v.x = 2.0;
				v.y = 0.0;
				break;
			case "_vec2x2Inv":
				v = iron_object_Uniforms.helpVec;
				v.x = 2.0 / iron_RenderPath.active.currentW;
				v.y = 0.0;
				break;
			case "_vec2xInv":
				v = iron_object_Uniforms.helpVec;
				v.x = 1.0 / iron_RenderPath.active.currentW;
				v.y = 0.0;
				break;
			case "_vec2y":
				v = iron_object_Uniforms.helpVec;
				v.x = 0.0;
				v.y = 1.0;
				break;
			case "_vec2y2":
				v = iron_object_Uniforms.helpVec;
				v.x = 0.0;
				v.y = 2.0;
				break;
			case "_vec2y2Inv":
				v = iron_object_Uniforms.helpVec;
				v.x = 0.0;
				v.y = 2.0 / iron_RenderPath.active.currentH;
				break;
			case "_vec2y3":
				v = iron_object_Uniforms.helpVec;
				v.x = 0.0;
				v.y = 3.0;
				break;
			case "_vec2y3Inv":
				v = iron_object_Uniforms.helpVec;
				v.x = 0.0;
				v.y = 3.0 / iron_RenderPath.active.currentH;
				break;
			case "_vec2yInv":
				v = iron_object_Uniforms.helpVec;
				v.x = 0.0;
				v.y = 1.0 / iron_RenderPath.active.currentH;
				break;
			case "_windowSize":
				v = iron_object_Uniforms.helpVec;
				v.x = iron_App.w();
				v.y = iron_App.h();
				break;
			default:
				return false;
			}
		}
		if(v != null) {
			g.setFloat2(location,v.x,v.y);
		} else {
			g.setFloat2(location,0.0,0.0);
		}
		return true;
	} else if(c.type == "float") {
		var f = null;
		var _g = c.link;
		if(_g == null) {
			return false;
		} else {
			switch(_g) {
			case "_aspectRatioF":
				f = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
				break;
			case "_aspectRatioWindowF":
				f = iron_App.w() / iron_App.h();
				break;
			case "_envmapStrength":
				f = iron_Scene.active.world == null ? 0.0 : iron_Scene.active.world.probe.raw.strength;
				break;
			case "_fieldOfView":
				f = camera.data.raw.fov;
				break;
			case "_frameScale":
				f = iron_RenderPath.active.frameTime / iron_system_Time.get_delta();
				break;
			case "_pointShadowsBias":
				var point = iron_RenderPath.active.point;
				f = point == null ? 0.0 : point.data.raw.shadows_bias;
				break;
			case "_sunShadowsBias":
				var sun = iron_RenderPath.active.sun;
				f = sun == null ? 0.0 : sun.data.raw.shadows_bias;
				break;
			case "_time":
				f = kha_Scheduler.time();
				break;
			default:
				return false;
			}
		}
		g.setFloat(location,f != null ? f : 0);
		return true;
	} else if(c.type == "floats") {
		var fa = null;
		switch(c.link) {
		case "_cascadeData":
			var _g = 0;
			var _g1 = iron_Scene.active.lights;
			while(_g < _g1.length) {
				var l = _g1[_g];
				++_g;
				if(l.data.raw.type == "sun") {
					fa = l.getCascadeData();
					break;
				}
			}
			break;
		case "_envmapIrradiance":
			fa = iron_Scene.active.world == null ? iron_data_WorldData.getEmptyIrradiance() : iron_Scene.active.world.probe.irradiance;
			break;
		}
		if(fa != null) {
			g.setFloats(location,fa);
			return true;
		}
	} else if(c.type == "int") {
		var i = null;
		var _g = c.link;
		if(_g == null) {
			return false;
		} else if(_g == "_envmapNumMipmaps") {
			var w = iron_Scene.active.world;
			i = w != null ? w.probe.raw.radiance_mipmaps + 1 - 2 : 1;
		} else {
			return false;
		}
		g.setInt(location,i != null ? i : 0);
		return true;
	}
	return false;
};
iron_object_Uniforms.setObjectConstant = function(g,object,location,c) {
	if(c.link == null) {
		return;
	}
	var camera = iron_Scene.active.camera;
	var light = iron_RenderPath.active.light;
	if(c.type == "mat4") {
		var m = null;
		switch(c.link) {
		case "_biasLightWorldViewProjectionMatrix":
			if(light != null) {
				if(object == null) {
					var _this = iron_object_Uniforms.helpMat;
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					var _this = iron_object_Uniforms.helpMat;
					var m1 = object.transform.worldUnpack;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
				}
				var _this = iron_object_Uniforms.helpMat;
				var m1 = light.VP;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = iron_object_Uniforms.biasMat;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				m = iron_object_Uniforms.helpMat;
			}
			break;
		case "_biasLightWorldViewProjectionMatrixSun":
			var _g = 0;
			var _g1 = iron_Scene.active.lights;
			while(_g < _g1.length) {
				var l = _g1[_g];
				++_g;
				if(l.data.raw.type == "sun") {
					if(object == null) {
						var _this = iron_object_Uniforms.helpMat;
						_this.self._00 = 1.0;
						_this.self._01 = 0.0;
						_this.self._02 = 0.0;
						_this.self._03 = 0.0;
						_this.self._10 = 0.0;
						_this.self._11 = 1.0;
						_this.self._12 = 0.0;
						_this.self._13 = 0.0;
						_this.self._20 = 0.0;
						_this.self._21 = 0.0;
						_this.self._22 = 1.0;
						_this.self._23 = 0.0;
						_this.self._30 = 0.0;
						_this.self._31 = 0.0;
						_this.self._32 = 0.0;
						_this.self._33 = 1.0;
					} else {
						var _this1 = iron_object_Uniforms.helpMat;
						var m1 = object.transform.worldUnpack;
						_this1.self._00 = m1.self._00;
						_this1.self._01 = m1.self._01;
						_this1.self._02 = m1.self._02;
						_this1.self._03 = m1.self._03;
						_this1.self._10 = m1.self._10;
						_this1.self._11 = m1.self._11;
						_this1.self._12 = m1.self._12;
						_this1.self._13 = m1.self._13;
						_this1.self._20 = m1.self._20;
						_this1.self._21 = m1.self._21;
						_this1.self._22 = m1.self._22;
						_this1.self._23 = m1.self._23;
						_this1.self._30 = m1.self._30;
						_this1.self._31 = m1.self._31;
						_this1.self._32 = m1.self._32;
						_this1.self._33 = m1.self._33;
					}
					var _this2 = iron_object_Uniforms.helpMat;
					var m2 = l.VP;
					var a00 = _this2.self._00;
					var a01 = _this2.self._01;
					var a02 = _this2.self._02;
					var a03 = _this2.self._03;
					var a10 = _this2.self._10;
					var a11 = _this2.self._11;
					var a12 = _this2.self._12;
					var a13 = _this2.self._13;
					var a20 = _this2.self._20;
					var a21 = _this2.self._21;
					var a22 = _this2.self._22;
					var a23 = _this2.self._23;
					var a30 = _this2.self._30;
					var a31 = _this2.self._31;
					var a32 = _this2.self._32;
					var a33 = _this2.self._33;
					var b0 = m2.self._00;
					var b1 = m2.self._10;
					var b2 = m2.self._20;
					var b3 = m2.self._30;
					_this2.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this2.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this2.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this2.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._01;
					b1 = m2.self._11;
					b2 = m2.self._21;
					b3 = m2.self._31;
					_this2.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this2.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this2.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this2.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._02;
					b1 = m2.self._12;
					b2 = m2.self._22;
					b3 = m2.self._32;
					_this2.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this2.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this2.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this2.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					b0 = m2.self._03;
					b1 = m2.self._13;
					b2 = m2.self._23;
					b3 = m2.self._33;
					_this2.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
					_this2.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
					_this2.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
					_this2.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
					var _this3 = iron_object_Uniforms.helpMat;
					var m3 = iron_object_Uniforms.biasMat;
					var a001 = _this3.self._00;
					var a011 = _this3.self._01;
					var a021 = _this3.self._02;
					var a031 = _this3.self._03;
					var a101 = _this3.self._10;
					var a111 = _this3.self._11;
					var a121 = _this3.self._12;
					var a131 = _this3.self._13;
					var a201 = _this3.self._20;
					var a211 = _this3.self._21;
					var a221 = _this3.self._22;
					var a231 = _this3.self._23;
					var a301 = _this3.self._30;
					var a311 = _this3.self._31;
					var a321 = _this3.self._32;
					var a331 = _this3.self._33;
					var b01 = m3.self._00;
					var b11 = m3.self._10;
					var b21 = m3.self._20;
					var b31 = m3.self._30;
					_this3.self._00 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
					_this3.self._10 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
					_this3.self._20 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
					_this3.self._30 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
					b01 = m3.self._01;
					b11 = m3.self._11;
					b21 = m3.self._21;
					b31 = m3.self._31;
					_this3.self._01 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
					_this3.self._11 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
					_this3.self._21 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
					_this3.self._31 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
					b01 = m3.self._02;
					b11 = m3.self._12;
					b21 = m3.self._22;
					b31 = m3.self._32;
					_this3.self._02 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
					_this3.self._12 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
					_this3.self._22 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
					_this3.self._32 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
					b01 = m3.self._03;
					b11 = m3.self._13;
					b21 = m3.self._23;
					b31 = m3.self._33;
					_this3.self._03 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
					_this3.self._13 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
					_this3.self._23 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
					_this3.self._33 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
					m = iron_object_Uniforms.helpMat;
					break;
				}
			}
			break;
		case "_inverseWorldMatrix":
			var _this = iron_object_Uniforms.helpMat;
			var m1 = object.transform.worldUnpack;
			var a00 = m1.self._00;
			var a01 = m1.self._01;
			var a02 = m1.self._02;
			var a03 = m1.self._03;
			var a10 = m1.self._10;
			var a11 = m1.self._11;
			var a12 = m1.self._12;
			var a13 = m1.self._13;
			var a20 = m1.self._20;
			var a21 = m1.self._21;
			var a22 = m1.self._22;
			var a23 = m1.self._23;
			var a30 = m1.self._30;
			var a31 = m1.self._31;
			var a32 = m1.self._32;
			var a33 = m1.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			m = iron_object_Uniforms.helpMat;
			break;
		case "_lightWorldViewProjectionMatrix":
			if(light != null) {
				if(object == null) {
					var _this = iron_object_Uniforms.helpMat;
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					var _this = iron_object_Uniforms.helpMat;
					var m1 = object.transform.worldUnpack;
					_this.self._00 = m1.self._00;
					_this.self._01 = m1.self._01;
					_this.self._02 = m1.self._02;
					_this.self._03 = m1.self._03;
					_this.self._10 = m1.self._10;
					_this.self._11 = m1.self._11;
					_this.self._12 = m1.self._12;
					_this.self._13 = m1.self._13;
					_this.self._20 = m1.self._20;
					_this.self._21 = m1.self._21;
					_this.self._22 = m1.self._22;
					_this.self._23 = m1.self._23;
					_this.self._30 = m1.self._30;
					_this.self._31 = m1.self._31;
					_this.self._32 = m1.self._32;
					_this.self._33 = m1.self._33;
				}
				var _this = iron_object_Uniforms.helpMat;
				var m1 = light.VP;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				m = iron_object_Uniforms.helpMat;
			}
			break;
		case "_lightWorldViewProjectionMatrixCylinder":
			if(light != null) {
				var _this = iron_object_Uniforms.helpMat;
				var m1 = object.transform.worldUnpack;
				_this.self._00 = m1.self._00;
				_this.self._01 = m1.self._01;
				_this.self._02 = m1.self._02;
				_this.self._03 = m1.self._03;
				_this.self._10 = m1.self._10;
				_this.self._11 = m1.self._11;
				_this.self._12 = m1.self._12;
				_this.self._13 = m1.self._13;
				_this.self._20 = m1.self._20;
				_this.self._21 = m1.self._21;
				_this.self._22 = m1.self._22;
				_this.self._23 = m1.self._23;
				_this.self._30 = m1.self._30;
				_this.self._31 = m1.self._31;
				_this.self._32 = m1.self._32;
				_this.self._33 = m1.self._33;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.V;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				iron_object_Uniforms.helpMat.self._00 = 1.0;
				iron_object_Uniforms.helpMat.self._20 = 0.0;
				iron_object_Uniforms.helpMat.self._01 = 0.0;
				iron_object_Uniforms.helpMat.self._21 = 0.0;
				iron_object_Uniforms.helpMat.self._02 = 0.0;
				iron_object_Uniforms.helpMat.self._22 = 1.0;
				var _this = iron_object_Uniforms.helpMat2;
				var m1 = camera.V;
				var a00 = m1.self._00;
				var a01 = m1.self._01;
				var a02 = m1.self._02;
				var a03 = m1.self._03;
				var a10 = m1.self._10;
				var a11 = m1.self._11;
				var a12 = m1.self._12;
				var a13 = m1.self._13;
				var a20 = m1.self._20;
				var a21 = m1.self._21;
				var a22 = m1.self._22;
				var a23 = m1.self._23;
				var a30 = m1.self._30;
				var a31 = m1.self._31;
				var a32 = m1.self._32;
				var a33 = m1.self._33;
				var b00 = a00 * a11 - a01 * a10;
				var b01 = a00 * a12 - a02 * a10;
				var b02 = a00 * a13 - a03 * a10;
				var b03 = a01 * a12 - a02 * a11;
				var b04 = a01 * a13 - a03 * a11;
				var b05 = a02 * a13 - a03 * a12;
				var b06 = a20 * a31 - a21 * a30;
				var b07 = a20 * a32 - a22 * a30;
				var b08 = a20 * a33 - a23 * a30;
				var b09 = a21 * a32 - a22 * a31;
				var b10 = a21 * a33 - a23 * a31;
				var b11 = a22 * a33 - a23 * a32;
				var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
				if(det == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det = 1.0 / det;
					_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
					_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
					_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
					_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
					_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
					_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
					_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
					_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
					_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
					_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
					_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
					_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
					_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
					_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
					_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
					_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
				}
				var _this = iron_object_Uniforms.helpMat;
				var m1 = iron_object_Uniforms.helpMat2;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = light.VP;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				m = iron_object_Uniforms.helpMat;
			}
			break;
		case "_lightWorldViewProjectionMatrixSphere":
			if(light != null) {
				var _this = iron_object_Uniforms.helpMat;
				var m1 = object.transform.worldUnpack;
				_this.self._00 = m1.self._00;
				_this.self._01 = m1.self._01;
				_this.self._02 = m1.self._02;
				_this.self._03 = m1.self._03;
				_this.self._10 = m1.self._10;
				_this.self._11 = m1.self._11;
				_this.self._12 = m1.self._12;
				_this.self._13 = m1.self._13;
				_this.self._20 = m1.self._20;
				_this.self._21 = m1.self._21;
				_this.self._22 = m1.self._22;
				_this.self._23 = m1.self._23;
				_this.self._30 = m1.self._30;
				_this.self._31 = m1.self._31;
				_this.self._32 = m1.self._32;
				_this.self._33 = m1.self._33;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = camera.V;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				iron_object_Uniforms.helpMat.self._00 = 1.0;
				iron_object_Uniforms.helpMat.self._10 = 0.0;
				iron_object_Uniforms.helpMat.self._20 = 0.0;
				iron_object_Uniforms.helpMat.self._01 = 0.0;
				iron_object_Uniforms.helpMat.self._11 = 1.0;
				iron_object_Uniforms.helpMat.self._21 = 0.0;
				iron_object_Uniforms.helpMat.self._02 = 0.0;
				iron_object_Uniforms.helpMat.self._12 = 0.0;
				iron_object_Uniforms.helpMat.self._22 = 1.0;
				var _this = iron_object_Uniforms.helpMat2;
				var m1 = camera.V;
				var a00 = m1.self._00;
				var a01 = m1.self._01;
				var a02 = m1.self._02;
				var a03 = m1.self._03;
				var a10 = m1.self._10;
				var a11 = m1.self._11;
				var a12 = m1.self._12;
				var a13 = m1.self._13;
				var a20 = m1.self._20;
				var a21 = m1.self._21;
				var a22 = m1.self._22;
				var a23 = m1.self._23;
				var a30 = m1.self._30;
				var a31 = m1.self._31;
				var a32 = m1.self._32;
				var a33 = m1.self._33;
				var b00 = a00 * a11 - a01 * a10;
				var b01 = a00 * a12 - a02 * a10;
				var b02 = a00 * a13 - a03 * a10;
				var b03 = a01 * a12 - a02 * a11;
				var b04 = a01 * a13 - a03 * a11;
				var b05 = a02 * a13 - a03 * a12;
				var b06 = a20 * a31 - a21 * a30;
				var b07 = a20 * a32 - a22 * a30;
				var b08 = a20 * a33 - a23 * a30;
				var b09 = a21 * a32 - a22 * a31;
				var b10 = a21 * a33 - a23 * a31;
				var b11 = a22 * a33 - a23 * a32;
				var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
				if(det == 0.0) {
					_this.self._00 = 1.0;
					_this.self._01 = 0.0;
					_this.self._02 = 0.0;
					_this.self._03 = 0.0;
					_this.self._10 = 0.0;
					_this.self._11 = 1.0;
					_this.self._12 = 0.0;
					_this.self._13 = 0.0;
					_this.self._20 = 0.0;
					_this.self._21 = 0.0;
					_this.self._22 = 1.0;
					_this.self._23 = 0.0;
					_this.self._30 = 0.0;
					_this.self._31 = 0.0;
					_this.self._32 = 0.0;
					_this.self._33 = 1.0;
				} else {
					det = 1.0 / det;
					_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
					_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
					_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
					_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
					_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
					_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
					_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
					_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
					_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
					_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
					_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
					_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
					_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
					_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
					_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
					_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
				}
				var _this = iron_object_Uniforms.helpMat;
				var m1 = iron_object_Uniforms.helpMat2;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				var _this = iron_object_Uniforms.helpMat;
				var m1 = light.VP;
				var a00 = _this.self._00;
				var a01 = _this.self._01;
				var a02 = _this.self._02;
				var a03 = _this.self._03;
				var a10 = _this.self._10;
				var a11 = _this.self._11;
				var a12 = _this.self._12;
				var a13 = _this.self._13;
				var a20 = _this.self._20;
				var a21 = _this.self._21;
				var a22 = _this.self._22;
				var a23 = _this.self._23;
				var a30 = _this.self._30;
				var a31 = _this.self._31;
				var a32 = _this.self._32;
				var a33 = _this.self._33;
				var b0 = m1.self._00;
				var b1 = m1.self._10;
				var b2 = m1.self._20;
				var b3 = m1.self._30;
				_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._01;
				b1 = m1.self._11;
				b2 = m1.self._21;
				b3 = m1.self._31;
				_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._02;
				b1 = m1.self._12;
				b2 = m1.self._22;
				b3 = m1.self._32;
				_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m1.self._03;
				b1 = m1.self._13;
				b2 = m1.self._23;
				b3 = m1.self._33;
				_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				m = iron_object_Uniforms.helpMat;
			}
			break;
		case "_particleData":
			var mo = js_Boot.__cast(object , iron_object_MeshObject);
			if(mo.particleOwner != null && mo.particleOwner.particleSystems != null) {
				m = mo.particleOwner.particleSystems[mo.particleIndex].getData();
			}
			break;
		case "_sunWorldMatrix":
			var sun = iron_RenderPath.active.sun;
			if(sun != null) {
				var _this = iron_object_Uniforms.helpMat;
				var m1 = sun.transform.worldUnpack;
				_this.self._00 = m1.self._00;
				_this.self._01 = m1.self._01;
				_this.self._02 = m1.self._02;
				_this.self._03 = m1.self._03;
				_this.self._10 = m1.self._10;
				_this.self._11 = m1.self._11;
				_this.self._12 = m1.self._12;
				_this.self._13 = m1.self._13;
				_this.self._20 = m1.self._20;
				_this.self._21 = m1.self._21;
				_this.self._22 = m1.self._22;
				_this.self._23 = m1.self._23;
				_this.self._30 = m1.self._30;
				_this.self._31 = m1.self._31;
				_this.self._32 = m1.self._32;
				_this.self._33 = m1.self._33;
				m = iron_object_Uniforms.helpMat;
			}
			break;
		case "_worldMatrix":
			m = object.transform.worldUnpack;
			break;
		case "_worldViewMatrix":
			var _this = iron_object_Uniforms.helpMat;
			var m1 = object.transform.worldUnpack;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.V;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			m = iron_object_Uniforms.helpMat;
			break;
		case "_worldViewProjectionMatrix":
			var _this = iron_object_Uniforms.helpMat;
			var m1 = object.transform.worldUnpack;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.V;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.P;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			m = iron_object_Uniforms.helpMat;
			break;
		case "_worldViewProjectionMatrixCylinder":
			var t = object.transform;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = t.worldUnpack;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.V;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			var x = t.scale.x;
			var y = t.scale.y;
			var z = t.scale.z;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			var scl_x = x;
			var scl_y = y;
			var scl_z = z;
			var scl_w = 1.0;
			var f = t.scaleWorld;
			scl_x *= f;
			scl_y *= f;
			scl_z *= f;
			iron_object_Uniforms.helpMat.self._00 = scl_x;
			iron_object_Uniforms.helpMat.self._20 = 0.0;
			iron_object_Uniforms.helpMat.self._01 = 0.0;
			iron_object_Uniforms.helpMat.self._21 = 0.0;
			iron_object_Uniforms.helpMat.self._02 = 0.0;
			iron_object_Uniforms.helpMat.self._22 = scl_y;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.P;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			m = iron_object_Uniforms.helpMat;
			break;
		case "_worldViewProjectionMatrixSphere":
			var t = object.transform;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = t.worldUnpack;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.V;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			var x = t.scale.x;
			var y = t.scale.y;
			var z = t.scale.z;
			if(z == null) {
				z = 0.0;
			}
			if(y == null) {
				y = 0.0;
			}
			if(x == null) {
				x = 0.0;
			}
			var scl_x = x;
			var scl_y = y;
			var scl_z = z;
			var scl_w = 1.0;
			var f = t.scaleWorld;
			scl_x *= f;
			scl_y *= f;
			scl_z *= f;
			iron_object_Uniforms.helpMat.self._00 = scl_x;
			iron_object_Uniforms.helpMat.self._10 = 0.0;
			iron_object_Uniforms.helpMat.self._20 = 0.0;
			iron_object_Uniforms.helpMat.self._01 = 0.0;
			iron_object_Uniforms.helpMat.self._11 = scl_y;
			iron_object_Uniforms.helpMat.self._21 = 0.0;
			iron_object_Uniforms.helpMat.self._02 = 0.0;
			iron_object_Uniforms.helpMat.self._12 = 0.0;
			iron_object_Uniforms.helpMat.self._22 = scl_z;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.P;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			m = iron_object_Uniforms.helpMat;
			break;
		}
		var tmp = m == null;
		if(m == null && iron_object_Uniforms.externalMat4Links != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalMat4Links;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				m = fn(object,iron_object_Uniforms.currentMat(object),c.link);
				if(m != null) {
					break;
				}
			}
		}
		if(m == null) {
			return;
		}
		g.setMatrix(location,m.self);
	} else if(c.type == "mat3") {
		var m = null;
		switch(c.link) {
		case "_normalMatrix":
			var _this = iron_object_Uniforms.helpMat;
			var m1 = object.transform.world;
			var a00 = m1.self._00;
			var a01 = m1.self._01;
			var a02 = m1.self._02;
			var a03 = m1.self._03;
			var a10 = m1.self._10;
			var a11 = m1.self._11;
			var a12 = m1.self._12;
			var a13 = m1.self._13;
			var a20 = m1.self._20;
			var a21 = m1.self._21;
			var a22 = m1.self._22;
			var a23 = m1.self._23;
			var a30 = m1.self._30;
			var a31 = m1.self._31;
			var a32 = m1.self._32;
			var a33 = m1.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			var _this = iron_object_Uniforms.helpMat;
			var f = _this.self._01;
			_this.self._01 = _this.self._10;
			_this.self._10 = f;
			f = _this.self._02;
			_this.self._02 = _this.self._20;
			_this.self._20 = f;
			f = _this.self._12;
			_this.self._12 = _this.self._21;
			_this.self._21 = f;
			var _this = iron_object_Uniforms.helpMat3;
			var m1 = iron_object_Uniforms.helpMat;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			m = iron_object_Uniforms.helpMat3;
			break;
		case "_normalMatrixCylinder":
			var _this = iron_object_Uniforms.helpMat;
			var m1 = object.transform.world;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.V;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			iron_object_Uniforms.helpMat.self._00 = 1.0;
			iron_object_Uniforms.helpMat.self._20 = 0.0;
			iron_object_Uniforms.helpMat.self._01 = 0.0;
			iron_object_Uniforms.helpMat.self._21 = 0.0;
			iron_object_Uniforms.helpMat.self._02 = 0.0;
			iron_object_Uniforms.helpMat.self._22 = 1.0;
			var _this = iron_object_Uniforms.helpMat2;
			var m1 = camera.V;
			var a00 = m1.self._00;
			var a01 = m1.self._01;
			var a02 = m1.self._02;
			var a03 = m1.self._03;
			var a10 = m1.self._10;
			var a11 = m1.self._11;
			var a12 = m1.self._12;
			var a13 = m1.self._13;
			var a20 = m1.self._20;
			var a21 = m1.self._21;
			var a22 = m1.self._22;
			var a23 = m1.self._23;
			var a30 = m1.self._30;
			var a31 = m1.self._31;
			var a32 = m1.self._32;
			var a33 = m1.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			var _this = iron_object_Uniforms.helpMat;
			var m1 = iron_object_Uniforms.helpMat2;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			var _this = iron_object_Uniforms.helpMat2;
			var m1 = iron_object_Uniforms.helpMat;
			var a00 = m1.self._00;
			var a01 = m1.self._01;
			var a02 = m1.self._02;
			var a03 = m1.self._03;
			var a10 = m1.self._10;
			var a11 = m1.self._11;
			var a12 = m1.self._12;
			var a13 = m1.self._13;
			var a20 = m1.self._20;
			var a21 = m1.self._21;
			var a22 = m1.self._22;
			var a23 = m1.self._23;
			var a30 = m1.self._30;
			var a31 = m1.self._31;
			var a32 = m1.self._32;
			var a33 = m1.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			var _this = iron_object_Uniforms.helpMat2;
			var f = _this.self._01;
			_this.self._01 = _this.self._10;
			_this.self._10 = f;
			f = _this.self._02;
			_this.self._02 = _this.self._20;
			_this.self._20 = f;
			f = _this.self._12;
			_this.self._12 = _this.self._21;
			_this.self._21 = f;
			var _this = iron_object_Uniforms.helpMat3;
			var m1 = iron_object_Uniforms.helpMat2;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			m = iron_object_Uniforms.helpMat3;
			break;
		case "_normalMatrixSphere":
			var _this = iron_object_Uniforms.helpMat;
			var m1 = object.transform.world;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.V;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			iron_object_Uniforms.helpMat.self._00 = 1.0;
			iron_object_Uniforms.helpMat.self._10 = 0.0;
			iron_object_Uniforms.helpMat.self._20 = 0.0;
			iron_object_Uniforms.helpMat.self._01 = 0.0;
			iron_object_Uniforms.helpMat.self._11 = 1.0;
			iron_object_Uniforms.helpMat.self._21 = 0.0;
			iron_object_Uniforms.helpMat.self._02 = 0.0;
			iron_object_Uniforms.helpMat.self._12 = 0.0;
			iron_object_Uniforms.helpMat.self._22 = 1.0;
			var _this = iron_object_Uniforms.helpMat2;
			var m1 = camera.V;
			var a00 = m1.self._00;
			var a01 = m1.self._01;
			var a02 = m1.self._02;
			var a03 = m1.self._03;
			var a10 = m1.self._10;
			var a11 = m1.self._11;
			var a12 = m1.self._12;
			var a13 = m1.self._13;
			var a20 = m1.self._20;
			var a21 = m1.self._21;
			var a22 = m1.self._22;
			var a23 = m1.self._23;
			var a30 = m1.self._30;
			var a31 = m1.self._31;
			var a32 = m1.self._32;
			var a33 = m1.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			var _this = iron_object_Uniforms.helpMat;
			var m1 = iron_object_Uniforms.helpMat2;
			var a00 = _this.self._00;
			var a01 = _this.self._01;
			var a02 = _this.self._02;
			var a03 = _this.self._03;
			var a10 = _this.self._10;
			var a11 = _this.self._11;
			var a12 = _this.self._12;
			var a13 = _this.self._13;
			var a20 = _this.self._20;
			var a21 = _this.self._21;
			var a22 = _this.self._22;
			var a23 = _this.self._23;
			var a30 = _this.self._30;
			var a31 = _this.self._31;
			var a32 = _this.self._32;
			var a33 = _this.self._33;
			var b0 = m1.self._00;
			var b1 = m1.self._10;
			var b2 = m1.self._20;
			var b3 = m1.self._30;
			_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._01;
			b1 = m1.self._11;
			b2 = m1.self._21;
			b3 = m1.self._31;
			_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._02;
			b1 = m1.self._12;
			b2 = m1.self._22;
			b3 = m1.self._32;
			_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			b0 = m1.self._03;
			b1 = m1.self._13;
			b2 = m1.self._23;
			b3 = m1.self._33;
			_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
			_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
			_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
			_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			var _this = iron_object_Uniforms.helpMat2;
			var m1 = iron_object_Uniforms.helpMat;
			var a00 = m1.self._00;
			var a01 = m1.self._01;
			var a02 = m1.self._02;
			var a03 = m1.self._03;
			var a10 = m1.self._10;
			var a11 = m1.self._11;
			var a12 = m1.self._12;
			var a13 = m1.self._13;
			var a20 = m1.self._20;
			var a21 = m1.self._21;
			var a22 = m1.self._22;
			var a23 = m1.self._23;
			var a30 = m1.self._30;
			var a31 = m1.self._31;
			var a32 = m1.self._32;
			var a33 = m1.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			var _this = iron_object_Uniforms.helpMat2;
			var f = _this.self._01;
			_this.self._01 = _this.self._10;
			_this.self._10 = f;
			f = _this.self._02;
			_this.self._02 = _this.self._20;
			_this.self._20 = f;
			f = _this.self._12;
			_this.self._12 = _this.self._21;
			_this.self._21 = f;
			var _this = iron_object_Uniforms.helpMat3;
			var m1 = iron_object_Uniforms.helpMat2;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			m = iron_object_Uniforms.helpMat3;
			break;
		case "_viewMatrix3":
			var _this = iron_object_Uniforms.helpMat3;
			var m1 = camera.V;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			m = iron_object_Uniforms.helpMat3;
			break;
		}
		if(m == null) {
			return;
		}
		g.setMatrix3(location,m.self);
	} else if(c.type == "vec4") {
		var v = null;
		var _this = iron_object_Uniforms.helpVec;
		_this.x = 0;
		_this.y = 0;
		_this.z = 0;
		_this.w = 1.0;
		if(v == null && iron_object_Uniforms.externalVec4Links != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalVec4Links;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				v = fn(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v != null) {
					break;
				}
			}
		}
		if(v == null) {
			return;
		}
		g.setFloat4(location,v.x,v.y,v.z,v.w);
	} else if(c.type == "vec3") {
		var v = null;
		var _this = iron_object_Uniforms.helpVec;
		_this.x = 0;
		_this.y = 0;
		_this.z = 0;
		_this.w = 1.0;
		switch(c.link) {
		case "_dim":
			var d = object.transform.dim;
			var s = object.transform.scale;
			var _this = iron_object_Uniforms.helpVec;
			_this.x = d.x / s.x;
			_this.y = d.y / s.y;
			_this.z = d.z / s.z;
			_this.w = 1.0;
			v = iron_object_Uniforms.helpVec;
			break;
		case "_halfDim":
			var d = object.transform.dim;
			var s = object.transform.scale;
			var _this = iron_object_Uniforms.helpVec;
			_this.x = d.x / s.x / 2;
			_this.y = d.y / s.y / 2;
			_this.z = d.z / s.z / 2;
			_this.w = 1.0;
			v = iron_object_Uniforms.helpVec;
			break;
		}
		if(v == null && iron_object_Uniforms.externalVec3Links != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalVec3Links;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				v = f(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v != null) {
					break;
				}
			}
		}
		if(v == null) {
			return;
		}
		g.setFloat3(location,v.x,v.y,v.z);
	} else if(c.type == "vec2") {
		var vx = null;
		var vy = null;
		switch(c.link) {
		case "_morphDataDim":
			var mt = (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget;
			vx = mt.numMorphTargets;
			vy = mt.morphBlockSize / mt.morphImageSize;
			break;
		case "_morphScaleOffset":
			var mt = (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget;
			vx = mt.scaling;
			vy = mt.offset;
			break;
		case "_tilesheetOffset":
			var ts = (js_Boot.__cast(object , iron_object_MeshObject)).activeTilesheet;
			vx = ts.tileX;
			vy = ts.tileY;
			break;
		case "_tilesheetTiles":
			var ts = (js_Boot.__cast(object , iron_object_MeshObject)).activeTilesheet;
			vx = ts.raw.tilesx;
			vy = ts.raw.tilesy;
			break;
		}
		if(vx == null && iron_object_Uniforms.externalVec2Links != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalVec2Links;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				var v = fn(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v != null) {
					vx = v.x;
					vy = v.y;
					break;
				}
			}
		}
		if(vx == null) {
			return;
		}
		g.setFloat2(location,vx,vy);
	} else if(c.type == "float") {
		var f = null;
		switch(c.link) {
		case "_objectInfoIndex":
			f = object.uid;
			break;
		case "_objectInfoMaterialIndex":
			f = iron_object_Uniforms.currentMat(object).uid;
			break;
		case "_objectInfoRandom":
			f = object.urandom;
			break;
		case "_posUnpack":
			f = iron_object_Uniforms.posUnpack != null ? iron_object_Uniforms.posUnpack : 1.0;
			break;
		case "_texUnpack":
			f = iron_object_Uniforms.texUnpack != null ? iron_object_Uniforms.texUnpack : 1.0;
			break;
		}
		if(f == null && iron_object_Uniforms.externalFloatLinks != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalFloatLinks;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				var res = fn(object,iron_object_Uniforms.currentMat(object),c.link);
				if(res != null) {
					f = res;
					break;
				}
			}
		}
		if(f == null) {
			return;
		}
		g.setFloat(location,f);
	} else if(c.type == "floats") {
		var fa = null;
		switch(c.link) {
		case "_morphWeights":
			fa = (js_Boot.__cast(object , iron_object_MeshObject)).morphTarget.morphWeights;
			break;
		case "_skinBones":
			if(object.animation != null) {
				fa = (js_Boot.__cast(object.animation , iron_object_BoneAnimation)).skinBuffer;
			}
			break;
		}
		if(fa == null && iron_object_Uniforms.externalFloatsLinks != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalFloatsLinks;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				fa = fn(object,iron_object_Uniforms.currentMat(object),c.link);
				if(fa != null) {
					break;
				}
			}
		}
		if(fa == null) {
			return;
		}
		g.setFloats(location,fa);
	} else if(c.type == "int") {
		var i = null;
		if(c.link == "_uid") {
			i = object.uid;
		}
		if(i == null && iron_object_Uniforms.externalIntLinks != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalIntLinks;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				var res = fn(object,iron_object_Uniforms.currentMat(object),c.link);
				if(res != null) {
					i = res;
					break;
				}
			}
		}
		if(i == null) {
			return;
		}
		g.setInt(location,i);
	}
};
iron_object_Uniforms.setMaterialConstants = function(g,context,materialContext) {
	if(materialContext.raw.bind_constants != null) {
		var _g = 0;
		var _g1 = materialContext.raw.bind_constants.length;
		while(_g < _g1) {
			var i = _g++;
			var matc = materialContext.raw.bind_constants[i];
			var pos = -1;
			var _g2 = 0;
			var _g3 = context.raw.constants.length;
			while(_g2 < _g3) {
				var i1 = _g2++;
				if(context.raw.constants[i1].name == matc.name) {
					pos = i1;
					break;
				}
			}
			if(pos == -1) {
				continue;
			}
			var c = context.raw.constants[pos];
			iron_object_Uniforms.setMaterialConstant(g,context.constants[pos],c,matc);
		}
	}
	if(materialContext.textures != null) {
		var _g = 0;
		var _g1 = materialContext.textures.length;
		while(_g < _g1) {
			var i = _g++;
			var mname = materialContext.raw.bind_textures[i].name;
			var _g2 = 0;
			var _g3 = context.textureUnits.length;
			while(_g2 < _g3) {
				var j = _g2++;
				var sname = context.raw.texture_units[j].name;
				if(mname == sname) {
					g.setTexture(context.textureUnits[j],materialContext.textures[i]);
					materialContext.setTextureParameters(g,i,context,j);
					break;
				}
			}
		}
	}
};
iron_object_Uniforms.currentMat = function(object) {
	if(object != null && ((object) instanceof iron_object_MeshObject)) {
		var mo = js_Boot.__cast(object , iron_object_MeshObject);
		return mo.materials[mo.materialIndex];
	}
	return null;
};
iron_object_Uniforms.setMaterialConstant = function(g,location,c,matc) {
	switch(c.type) {
	case "bool":
		g.setBool(location,matc.boolValue);
		break;
	case "float":
		g.setFloat(location,matc.floatValue);
		break;
	case "int":
		g.setInt(location,matc.intValue);
		break;
	case "vec2":
		g.setFloat2(location,matc.vec2Value.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec2Value.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN));
		break;
	case "vec3":
		g.setFloat3(location,matc.vec3Value.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec3Value.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec3Value.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN));
		break;
	case "vec4":
		g.setFloat4(location,matc.vec4Value.getFloat32(0,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec4Value.getFloat32(4,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec4Value.getFloat32(8,kha_arrays_ByteArray.LITTLE_ENDIAN),matc.vec4Value.getFloat32(12,kha_arrays_ByteArray.LITTLE_ENDIAN));
		break;
	}
};
var iron_system_ArmPack = function() { };
$hxClasses["iron.system.ArmPack"] = iron_system_ArmPack;
iron_system_ArmPack.__name__ = true;
iron_system_ArmPack.read = function(i,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	try {
		var b = i.readByte();
		switch(b) {
		case 192:
			return null;
		case 194:
			return false;
		case 195:
			return true;
		case 196:
			return i.read(i.readByte());
		case 197:
			return i.read(i.readUInt16());
		case 198:
			return i.read(i.readInt32());
		case 202:
			return i.readFloat();
		case 204:
			return i.readByte();
		case 205:
			return i.readUInt16();
		case 206:
			return i.readInt32();
		case 208:
			return i.readInt8();
		case 209:
			return i.readInt16();
		case 210:
			return i.readInt32();
		case 217:
			return i.readString(i.readByte());
		case 218:
			return i.readString(i.readUInt16());
		case 219:
			return i.readString(i.readInt32());
		case 220:
			return iron_system_ArmPack.readArray(i,i.readUInt16(),key,parentKey);
		case 221:
			return iron_system_ArmPack.readArray(i,i.readInt32(),key,parentKey);
		case 222:
			return iron_system_ArmPack.readMap(i,i.readUInt16(),key,parentKey);
		case 223:
			return iron_system_ArmPack.readMap(i,i.readInt32(),key,parentKey);
		default:
			if(b < 128) {
				return b;
			} else if(b < 144) {
				return iron_system_ArmPack.readMap(i,15 & b,key,parentKey);
			} else if(b < 160) {
				return iron_system_ArmPack.readArray(i,15 & b,key,parentKey);
			} else if(b < 192) {
				return i.readString(31 & b);
			} else if(b > 223) {
				return -256 | b;
			}
		}
	} catch( _g ) {
		if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
			throw _g;
		}
	}
	return null;
};
iron_system_ArmPack.readArray = function(i,length,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	var b = i.readByte();
	i.set_position(i.pos - 1);
	if(b == 202) {
		i.set_position(i.pos + 1);
		var a = kha_arrays_Float32Array._new(length);
		var _g = 0;
		var _g1 = length;
		while(_g < _g1) {
			var x = _g++;
			var v = i.readFloat();
			a.setFloat32(x * 4,v,true);
		}
		return a;
	} else if(b == 210) {
		i.set_position(i.pos + 1);
		var a = kha_arrays_Uint32Array._new(length);
		var _g = 0;
		var _g1 = length;
		while(_g < _g1) {
			var x = _g++;
			a.setUint32(x * 4,i.readInt32(),kha_arrays_ByteArray.LITTLE_ENDIAN);
			var tmp = x * 4;
		}
		return a;
	} else if(b == 209) {
		i.set_position(i.pos + 1);
		var a = kha_arrays_Int16Array._new(length);
		var _g = 0;
		var _g1 = length;
		while(_g < _g1) {
			var x = _g++;
			a.setInt16(x * 2,i.readInt16(),kha_arrays_ByteArray.LITTLE_ENDIAN);
			var tmp = x * 2;
		}
		return a;
	} else {
		var a = [];
		var _g = 0;
		var _g1 = length;
		while(_g < _g1) {
			var x = _g++;
			a.push(iron_system_ArmPack.read(i,key,parentKey));
		}
		return a;
	}
};
iron_system_ArmPack.readMap = function(i,length,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	var out = { };
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var n = _g++;
		var k = Std.string(iron_system_ArmPack.read(i));
		var v = iron_system_ArmPack.read(i,k,key);
		out[k] = v;
	}
	return out;
};
var iron_system_Audio = function() { };
$hxClasses["iron.system.Audio"] = iron_system_Audio;
iron_system_Audio.__name__ = true;
iron_system_Audio.play = function(sound,loop,stream) {
	if(stream == null) {
		stream = false;
	}
	if(loop == null) {
		loop = false;
	}
	if(stream && sound.compressedData != null) {
		return kha_audio2_Audio1.stream(sound,loop);
	} else if(sound.uncompressedData != null) {
		return kha_audio2_Audio1.play(sound,loop);
	} else {
		return null;
	}
};
var iron_system_Input = function() { };
$hxClasses["iron.system.Input"] = iron_system_Input;
iron_system_Input.__name__ = true;
iron_system_Input.reset = function() {
	iron_system_Input.occupied = false;
	if(iron_system_Input.mouse != null) {
		iron_system_Input.mouse.reset();
	}
	if(iron_system_Input.pen != null) {
		iron_system_Input.pen.reset();
	}
	if(iron_system_Input.keyboard != null) {
		iron_system_Input.keyboard.reset();
	}
	var _g = 0;
	var _g1 = iron_system_Input.gamepads;
	while(_g < _g1.length) {
		var gamepad = _g1[_g];
		++_g;
		gamepad.reset();
	}
};
iron_system_Input.endFrame = function() {
	if(iron_system_Input.mouse != null) {
		iron_system_Input.mouse.endFrame();
	}
	if(iron_system_Input.pen != null) {
		iron_system_Input.pen.endFrame();
	}
	if(iron_system_Input.keyboard != null) {
		iron_system_Input.keyboard.endFrame();
	}
	var _g = 0;
	var _g1 = iron_system_Input.gamepads;
	while(_g < _g1.length) {
		var gamepad = _g1[_g];
		++_g;
		gamepad.endFrame();
	}
	if(iron_system_Input.virtualButtons != null) {
		var h = iron_system_Input.virtualButtons.h;
		var vb_h = h;
		var vb_keys = Object.keys(h);
		var vb_length = vb_keys.length;
		var vb_current = 0;
		while(vb_current < vb_length) {
			var vb = vb_h[vb_keys[vb_current++]];
			vb.started = vb.released = false;
		}
	}
};
iron_system_Input.getMouse = function() {
	if(!iron_system_Input.registered) {
		iron_system_Input.registered = true;
		iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
		iron_App.notifyOnReset(iron_system_Input.reset);
		kha_System.notifyOnApplicationState(function() {
			iron_system_Input.getMouse().reset();
		},null,null,null,null);
	}
	if(iron_system_Input.mouse == null) {
		iron_system_Input.mouse = new iron_system_Mouse();
	}
	return iron_system_Input.mouse;
};
iron_system_Input.getPen = function() {
	if(!iron_system_Input.registered) {
		iron_system_Input.registered = true;
		iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
		iron_App.notifyOnReset(iron_system_Input.reset);
		kha_System.notifyOnApplicationState(function() {
			iron_system_Input.getMouse().reset();
		},null,null,null,null);
	}
	if(iron_system_Input.pen == null) {
		iron_system_Input.pen = new iron_system_Pen();
	}
	return iron_system_Input.pen;
};
iron_system_Input.getKeyboard = function() {
	if(!iron_system_Input.registered) {
		iron_system_Input.registered = true;
		iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
		iron_App.notifyOnReset(iron_system_Input.reset);
		kha_System.notifyOnApplicationState(function() {
			iron_system_Input.getMouse().reset();
		},null,null,null,null);
	}
	if(iron_system_Input.keyboard == null) {
		iron_system_Input.keyboard = new iron_system_Keyboard();
	}
	return iron_system_Input.keyboard;
};
iron_system_Input.getGamepad = function(i) {
	if(i == null) {
		i = 0;
	}
	if(i >= 4) {
		return null;
	}
	if(!iron_system_Input.registered) {
		iron_system_Input.registered = true;
		iron_App.notifyOnEndFrame(iron_system_Input.endFrame);
		iron_App.notifyOnReset(iron_system_Input.reset);
		kha_System.notifyOnApplicationState(function() {
			iron_system_Input.getMouse().reset();
		},null,null,null,null);
	}
	while(iron_system_Input.gamepads.length <= i) iron_system_Input.gamepads.push(new iron_system_Gamepad(iron_system_Input.gamepads.length));
	if(iron_system_Input.gamepads[i].connected) {
		return iron_system_Input.gamepads[i];
	} else {
		return null;
	}
};
var iron_system_VirtualButton = function() {
	this.down = false;
	this.released = false;
	this.started = false;
};
$hxClasses["iron.system.VirtualButton"] = iron_system_VirtualButton;
iron_system_VirtualButton.__name__ = true;
iron_system_VirtualButton.prototype = {
	__class__: iron_system_VirtualButton
};
var iron_system_VirtualInput = function() {
	this.virtualButtons = null;
};
$hxClasses["iron.system.VirtualInput"] = iron_system_VirtualInput;
iron_system_VirtualInput.__name__ = true;
iron_system_VirtualInput.prototype = {
	downVirtual: function(button) {
		if(this.virtualButtons != null) {
			var vb = this.virtualButtons.h[button];
			if(vb != null) {
				vb.down = true;
				vb.started = true;
			}
		}
	}
	,upVirtual: function(button) {
		if(this.virtualButtons != null) {
			var vb = this.virtualButtons.h[button];
			if(vb != null) {
				vb.down = false;
				vb.released = true;
			}
		}
	}
	,__class__: iron_system_VirtualInput
};
var iron_system_Mouse = function() {
	this.lastY = -1.0;
	this.lastX = -1.0;
	this.locked = false;
	this.wheelDelta = 0;
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.y = 0.0;
	this.x = 0.0;
	this.buttonsReleased = [false,false,false,false,false];
	this.buttonsStarted = [false,false,false,false,false];
	this.buttonsDown = [false,false,false,false,false];
	iron_system_VirtualInput.call(this);
	kha_input_Mouse.get().notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.moveListener),$bind(this,this.wheelListener));
};
$hxClasses["iron.system.Mouse"] = iron_system_Mouse;
iron_system_Mouse.__name__ = true;
iron_system_Mouse.__super__ = iron_system_VirtualInput;
iron_system_Mouse.prototype = $extend(iron_system_VirtualInput.prototype,{
	endFrame: function() {
		var tmp = this.buttonsStarted[1] = this.buttonsStarted[2] = this.buttonsStarted[3] = this.buttonsStarted[4] = false;
		this.buttonsStarted[0] = tmp;
		var tmp = this.buttonsReleased[1] = this.buttonsReleased[2] = this.buttonsReleased[3] = this.buttonsReleased[4] = false;
		this.buttonsReleased[0] = tmp;
		this.moved = false;
		this.movementX = 0;
		this.movementY = 0;
		this.wheelDelta = 0;
	}
	,reset: function() {
		var tmp = this.buttonsDown[1] = this.buttonsDown[2] = this.buttonsDown[3] = this.buttonsDown[4] = false;
		this.buttonsDown[0] = tmp;
		this.endFrame();
	}
	,buttonIndex: function(button) {
		var _g = 0;
		var _g1 = iron_system_Mouse.buttons.length;
		while(_g < _g1) {
			var i = _g++;
			if(iron_system_Mouse.buttons[i] == button) {
				return i;
			}
		}
		return 0;
	}
	,down: function(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsDown[this.buttonIndex(button)];
	}
	,downListener: function(index,x,y) {
		if(iron_system_Input.getPen().inUse) {
			return;
		}
		this.buttonsDown[index] = true;
		this.buttonsStarted[index] = true;
		this.x = x;
		this.y = y;
		if(index == 0) {
			this.lastX = x;
			this.lastY = y;
		}
		this.downVirtual(iron_system_Mouse.buttons[index]);
	}
	,upListener: function(index,x,y) {
		if(iron_system_Input.getPen().inUse) {
			return;
		}
		this.buttonsDown[index] = false;
		this.buttonsReleased[index] = true;
		this.x = x;
		this.y = y;
		this.upVirtual(iron_system_Mouse.buttons[index]);
	}
	,moveListener: function(x,y,movementX,movementY) {
		if(this.lastX == -1.0 && this.lastY == -1.0) {
			this.lastX = x;
			this.lastY = y;
		}
		if(this.locked) {
			this.movementX += movementX;
			this.movementY += movementY;
		} else {
			this.movementX += x - this.lastX;
			this.movementY += y - this.lastY;
		}
		this.lastX = x;
		this.lastY = y;
		this.x = x;
		this.y = y;
		this.moved = true;
	}
	,wheelListener: function(delta) {
		this.wheelDelta = delta;
	}
	,__class__: iron_system_Mouse
});
var iron_system_Pen = function() {
	this.lastY = -1.0;
	this.lastX = -1.0;
	this.inUse = false;
	this.connected = false;
	this.pressure = 0.0;
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.y = 0.0;
	this.x = 0.0;
	this.buttonsReleased = [false];
	this.buttonsStarted = [false];
	this.buttonsDown = [false];
	iron_system_VirtualInput.call(this);
	var pen = kha_input_Pen.get();
	if(pen != null) {
		pen.notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.moveListener));
	}
};
$hxClasses["iron.system.Pen"] = iron_system_Pen;
iron_system_Pen.__name__ = true;
iron_system_Pen.__super__ = iron_system_VirtualInput;
iron_system_Pen.prototype = $extend(iron_system_VirtualInput.prototype,{
	endFrame: function() {
		this.buttonsStarted[0] = false;
		this.buttonsReleased[0] = false;
		this.moved = false;
		this.movementX = 0;
		this.movementY = 0;
		this.inUse = false;
	}
	,reset: function() {
		this.buttonsDown[0] = false;
		this.endFrame();
	}
	,downListener: function(x,y,pressure) {
		this.buttonsDown[0] = true;
		this.buttonsStarted[0] = true;
		this.x = x;
		this.y = y;
		this.pressure = pressure;
		iron_system_Input.getMouse().downListener(0,x,y);
	}
	,upListener: function(x,y,pressure) {
		if(this.buttonsStarted[0]) {
			this.buttonsStarted[0] = false;
			this.inUse = true;
			return;
		}
		this.buttonsDown[0] = false;
		this.buttonsReleased[0] = true;
		this.x = x;
		this.y = y;
		this.pressure = pressure;
		iron_system_Input.getMouse().upListener(0,x,y);
		this.inUse = true;
	}
	,moveListener: function(x,y,pressure) {
		if(this.lastX == -1.0 && this.lastY == -1.0) {
			this.lastX = x;
			this.lastY = y;
		}
		this.movementX = x - this.lastX;
		this.movementY = y - this.lastY;
		this.lastX = x;
		this.lastY = y;
		this.x = x;
		this.y = y;
		this.moved = true;
		this.pressure = pressure;
		this.connected = true;
	}
	,__class__: iron_system_Pen
});
var iron_system_Keyboard = function() {
	this.repeatTime = 0.0;
	this.repeatKey = false;
	this.keysFrame = [];
	this.keysReleased = new haxe_ds_StringMap();
	this.keysStarted = new haxe_ds_StringMap();
	this.keysDown = new haxe_ds_StringMap();
	iron_system_VirtualInput.call(this);
	this.reset();
	kha_input_Keyboard.get().notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.pressListener));
};
$hxClasses["iron.system.Keyboard"] = iron_system_Keyboard;
iron_system_Keyboard.__name__ = true;
iron_system_Keyboard.keyCode = function(key) {
	switch(key) {
	case 1:
		return "back";
	case 8:
		return "backspace";
	case 9:
		return "tab";
	case 13:
		return "enter";
	case 16:
		return "shift";
	case 17:
		return "control";
	case 18:
		return "alt";
	case 20:
		return "capslock";
	case 27:
		return "escape";
	case 32:
		return "space";
	case 37:
		return "left";
	case 38:
		return "up";
	case 39:
		return "right";
	case 40:
		return "down";
	case 46:
		return "delete";
	case 48:
		return "0";
	case 49:
		return "1";
	case 50:
		return "2";
	case 51:
		return "3";
	case 52:
		return "4";
	case 53:
		return "5";
	case 54:
		return "6";
	case 55:
		return "7";
	case 56:
		return "8";
	case 57:
		return "9";
	case 58:
		return ":";
	case 59:
		return ";";
	case 60:
		return "<";
	case 61:
		return "=";
	case 62:
		return ">";
	case 63:
		return "?";
	case 64:
		return "@";
	case 91:
		return "win";
	case 96:
		return "0";
	case 97:
		return "1";
	case 98:
		return "2";
	case 99:
		return "3";
	case 100:
		return "4";
	case 101:
		return "5";
	case 102:
		return "6";
	case 103:
		return "7";
	case 104:
		return "8";
	case 105:
		return "9";
	case 106:
		return "*";
	case 107:
		return "+";
	case 109:
		return "-";
	case 110:
		return ".";
	case 111:
		return "/";
	case 112:
		return "f1";
	case 113:
		return "f2";
	case 114:
		return "f3";
	case 115:
		return "f4";
	case 116:
		return "f5";
	case 117:
		return "f6";
	case 118:
		return "f7";
	case 119:
		return "f8";
	case 120:
		return "f9";
	case 121:
		return "f10";
	case 122:
		return "f11";
	case 123:
		return "f12";
	case 161:
		return "!";
	case 162:
		return "\"";
	case 163:
		return "#";
	case 164:
		return "$";
	case 165:
		return "%";
	case 166:
		return "&";
	case 167:
		return "_";
	case 168:
		return "(";
	case 169:
		return ")";
	case 170:
		return "*";
	case 171:
		return "+";
	case 172:
		return "|";
	case 173:
		return "-";
	case 174:
		return "{";
	case 175:
		return "}";
	case 176:
		return "~";
	case 188:
		return ",";
	case 190:
		return ".";
	case 191:
		return "/";
	case 192:
		return "`";
	case 219:
		return "[";
	case 220:
		return "\\";
	case 221:
		return "]";
	default:
		return String.fromCodePoint(key).toLowerCase();
	}
};
iron_system_Keyboard.__super__ = iron_system_VirtualInput;
iron_system_Keyboard.prototype = $extend(iron_system_VirtualInput.prototype,{
	endFrame: function() {
		if(this.keysFrame.length > 0) {
			var _g = 0;
			var _g1 = this.keysFrame;
			while(_g < _g1.length) {
				var s = _g1[_g];
				++_g;
				this.keysStarted.h[s] = false;
				this.keysReleased.h[s] = false;
			}
			this.keysFrame.splice(0,this.keysFrame.length);
		}
		if(kha_Scheduler.time() - this.repeatTime > 0.05) {
			this.repeatTime = kha_Scheduler.time();
			this.repeatKey = true;
		} else {
			this.repeatKey = false;
		}
	}
	,reset: function() {
		var _g = 0;
		var _g1 = iron_system_Keyboard.keys;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			this.keysDown.h[s] = false;
			this.keysStarted.h[s] = false;
			this.keysReleased.h[s] = false;
		}
		this.endFrame();
	}
	,down: function(key) {
		return this.keysDown.h[key];
	}
	,downListener: function(code) {
		var s = iron_system_Keyboard.keyCode(code);
		this.keysFrame.push(s);
		this.keysStarted.h[s] = true;
		this.keysDown.h[s] = true;
		this.repeatTime = kha_Scheduler.time() + 0.4;
		this.downVirtual(s);
	}
	,upListener: function(code) {
		var s = iron_system_Keyboard.keyCode(code);
		this.keysFrame.push(s);
		this.keysReleased.h[s] = true;
		this.keysDown.h[s] = false;
		this.upVirtual(s);
	}
	,pressListener: function(char) {
	}
	,__class__: iron_system_Keyboard
});
var iron_system_GamepadStick = function() {
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.lastY = 0.0;
	this.lastX = 0.0;
	this.y = 0.0;
	this.x = 0.0;
};
$hxClasses["iron.system.GamepadStick"] = iron_system_GamepadStick;
iron_system_GamepadStick.__name__ = true;
iron_system_GamepadStick.prototype = {
	__class__: iron_system_GamepadStick
};
var iron_system_Gamepad = function(i,virtual) {
	if(virtual == null) {
		virtual = false;
	}
	this.num = 0;
	this.connected = false;
	this.rightStick = new iron_system_GamepadStick();
	this.leftStick = new iron_system_GamepadStick();
	this.buttonsFrame = [];
	this.buttonsReleased = [];
	this.buttonsStarted = [];
	this.buttonsDown = [];
	iron_system_VirtualInput.call(this);
	var _g = 0;
	var _g1 = iron_system_Gamepad.buttons;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		this.buttonsDown.push(0.0);
		this.buttonsStarted.push(false);
		this.buttonsReleased.push(false);
	}
	this.num = i;
	this.reset();
	if(virtual) {
		this.connected = true;
	} else {
		this.connect();
	}
};
$hxClasses["iron.system.Gamepad"] = iron_system_Gamepad;
iron_system_Gamepad.__name__ = true;
iron_system_Gamepad.__super__ = iron_system_VirtualInput;
iron_system_Gamepad.prototype = $extend(iron_system_VirtualInput.prototype,{
	connect: function() {
		var gamepad = kha_input_Gamepad.get(this.num);
		if(gamepad == null) {
			return;
		}
		this.connected = true;
		gamepad.notify($bind(this,this.axisListener),$bind(this,this.buttonListener));
	}
	,endFrame: function() {
		if(this.buttonsFrame.length > 0) {
			var _g = 0;
			var _g1 = this.buttonsFrame;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				this.buttonsStarted[i] = false;
				this.buttonsReleased[i] = false;
			}
			this.buttonsFrame.splice(0,this.buttonsFrame.length);
		}
		this.leftStick.moved = false;
		this.leftStick.movementX = 0;
		this.leftStick.movementY = 0;
		this.rightStick.moved = false;
		this.rightStick.movementX = 0;
		this.rightStick.movementY = 0;
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.buttonsDown.length;
		while(_g < _g1) {
			var i = _g++;
			this.buttonsDown[i] = 0.0;
			this.buttonsStarted[i] = false;
			this.buttonsReleased[i] = false;
		}
		this.endFrame();
	}
	,buttonIndex: function(button) {
		var _g = 0;
		var _g1 = iron_system_Gamepad.buttons.length;
		while(_g < _g1) {
			var i = _g++;
			if(iron_system_Gamepad.buttons[i] == button) {
				return i;
			}
		}
		return 0;
	}
	,down: function(button) {
		return this.buttonsDown[this.buttonIndex(button)];
	}
	,axisListener: function(axis,value) {
		var stick = axis <= 1 ? this.leftStick : this.rightStick;
		if(axis == 0 || axis == 2) {
			stick.lastX = stick.x;
			stick.x = value;
			stick.movementX = stick.x - stick.lastX;
		} else if(axis == 1 || axis == 3) {
			stick.lastY = stick.y;
			stick.y = value;
			stick.movementY = stick.y - stick.lastY;
		}
		stick.moved = true;
	}
	,buttonListener: function(button,value) {
		this.buttonsFrame.push(button);
		this.buttonsDown[button] = value;
		if(value > 0) {
			this.buttonsStarted[button] = true;
		} else {
			this.buttonsReleased[button] = true;
		}
		if(value == 0.0) {
			this.upVirtual(iron_system_Gamepad.buttons[button]);
		} else if(value == 1.0) {
			this.downVirtual(iron_system_Gamepad.buttons[button]);
		}
	}
	,__class__: iron_system_Gamepad
});
var iron_system_Time = function() { };
$hxClasses["iron.system.Time"] = iron_system_Time;
iron_system_Time.__name__ = true;
iron_system_Time.__properties__ = {get_delta:"get_delta"};
iron_system_Time.get_delta = function() {
	if(iron_system_Time.frequency == null) {
		iron_system_Time.initFrequency();
	}
	return 1 / iron_system_Time.frequency * iron_system_Time.scale;
};
iron_system_Time.initFrequency = function() {
	iron_system_Time.frequency = kha_Display.get_primary() != null ? kha_Display.get_primary().get_frequency() : 60;
};
iron_system_Time.update = function() {
	iron_system_Time.realDelta = kha_Scheduler.realTime() - iron_system_Time.last;
	iron_system_Time.last = kha_Scheduler.realTime();
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var kha__$Assets_FontList = function() {
	this.font_defaultDescription = { name : "font_default", file_sizes : [22544], files : ["font_default.ttf"], type : "font"};
	this.font_default = null;
};
$hxClasses["kha._Assets.FontList"] = kha__$Assets_FontList;
kha__$Assets_FontList.__name__ = true;
kha__$Assets_FontList.prototype = {
	__class__: kha__$Assets_FontList
};
var kha_Assets = function() { };
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = true;
kha_Assets.loadImageFromPath = function(path,readable,done,failed,pos) {
	var description = { files : [path], readable : readable};
	kha_LoaderImpl.loadImageFromDescription(description,done,kha_Assets.reporter(failed,pos));
};
kha_Assets.loadBlobFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	kha_LoaderImpl.loadBlobFromDescription(description,done,kha_Assets.reporter(failed,pos));
};
kha_Assets.loadSoundFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	kha_LoaderImpl.loadSoundFromDescription(description,done,kha_Assets.reporter(failed,pos));
};
kha_Assets.reporter = function(custom,pos) {
	if(custom != null) {
		return custom;
	} else {
		var _g = haxe_Log.trace;
		var infos = pos;
		return function(v) {
			_g(v,infos);
		};
	}
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = true;
kha_Canvas.__isInterface__ = true;
kha_Canvas.prototype = {
	__class__: kha_Canvas
	,__properties__: {get_g4:"get_g4",get_height:"get_height",get_width:"get_width"}
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = true;
kha_Resource.__isInterface__ = true;
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = true;
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.__properties__ = {get_nonPow2Supported:"get_nonPow2Supported"};
kha_Image.create = function(width,height,format,usage,readable) {
	if(readable == null) {
		readable = false;
	}
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0,1,readable);
	}
};
kha_Image.create3D = function(width,height,depth,format,usage,readable) {
	if(readable == null) {
		readable = false;
	}
	return null;
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples) {
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = 0;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil,antiAliasingSamples,false);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,0,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img = new kha_WebGLImage(image.width,image.height,0,false,0,1,readable);
		img.image = image;
		img.createTexture();
		return img;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage,readable) {
	if(readable == null) {
		readable = false;
	}
	if(format == null) {
		format = 0;
	}
	if(usage == null) {
		usage = 0;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0,1,readable);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	var img = new kha_CanvasImage(width,height,format,false);
	var g2 = img.get_g2();
	var canvas = g2.canvas;
	var imageData = new ImageData(new Uint8ClampedArray(bytes.b.bufferValue),width,height);
	canvas.putImageData(imageData,0,0);
	return img;
};
kha_Image.fromBytes3D = function(bytes,width,height,depth,format,usage,readable) {
	if(readable == null) {
		readable = false;
	}
	return null;
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.renderTargetsInvertedY = function() {
	return true;
};
kha_Image.prototype = {
	unload: function() {
	}
	,generateMipmaps: function(levels) {
	}
	,setMipmaps: function(mipmaps) {
	}
	,setDepthStencilFrom: function(image) {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_depth: function() {
		return 1;
	}
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
	,__properties__: {get_g4:"get_g4",get_depth:"get_depth",get_height:"get_height",get_width:"get_width"}
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.myFormat = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = true;
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context);
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha_Color = {};
kha_Color.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha_Color._new(a << 24 | r << 16 | g << 8 | b);
};
kha_Color.fromFloats = function(r,g,b,a) {
	if(a == null) {
		a = 1;
	}
	return kha_Color._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
};
kha_Color._new = function(value) {
	var this1 = value;
	return this1;
};
var kha_Display = function() {
};
$hxClasses["kha.Display"] = kha_Display;
kha_Display.__name__ = true;
kha_Display.__properties__ = {get_primary:"get_primary"};
kha_Display.get_primary = function() {
	return kha_Display.instance;
};
kha_Display.prototype = {
	get_frequency: function() {
		return kha_SystemImpl.estimatedRefreshRate;
	}
	,__class__: kha_Display
	,__properties__: {get_frequency:"get_frequency"}
};
var kha_Framebuffer = function($window,g1,g2,g4) {
	this.window = $window;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = true;
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	init: function(g1,g2,g4) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,get_width: function() {
		return kha_System.windowWidth(this.window);
	}
	,get_height: function() {
		return kha_System.windowHeight(this.window);
	}
	,__class__: kha_Framebuffer
	,__properties__: {get_height:"get_height",get_width:"get_width",get_g4:"get_g4",get_g2:"get_g2"}
};
var kha_FramebufferOptions = function(frequency,verticalSync,colorBufferBits,depthBufferBits,stencilBufferBits,samplesPerPixel) {
	if(samplesPerPixel == null) {
		samplesPerPixel = 1;
	}
	if(stencilBufferBits == null) {
		stencilBufferBits = 8;
	}
	if(depthBufferBits == null) {
		depthBufferBits = 16;
	}
	if(colorBufferBits == null) {
		colorBufferBits = 32;
	}
	if(verticalSync == null) {
		verticalSync = true;
	}
	if(frequency == null) {
		frequency = 60;
	}
	this.samplesPerPixel = 1;
	this.stencilBufferBits = 8;
	this.depthBufferBits = 16;
	this.colorBufferBits = 32;
	this.verticalSync = true;
	this.frequency = 60;
	this.frequency = frequency;
	this.verticalSync = verticalSync;
	this.colorBufferBits = colorBufferBits;
	this.depthBufferBits = depthBufferBits;
	this.stencilBufferBits = stencilBufferBits;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.FramebufferOptions"] = kha_FramebufferOptions;
kha_FramebufferOptions.__name__ = true;
kha_FramebufferOptions.prototype = {
	__class__: kha_FramebufferOptions
};
var kha_Kravur = function() { };
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = true;
kha_Kravur.__interfaces__ = [kha_Resource];
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = true;
kha_LoaderImpl.loadImageFromDescription = function(desc,done,failed) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			done(kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,2,readable ? 1 : 0));
		},failed);
	} else {
		var img = window.document.createElement("img");
		img.onerror = function(event) {
			failed({ url : desc.files[0], error : event});
		};
		img.onload = function(event) {
			done(kha_Image.fromImage(img,readable));
		};
		img.crossOrigin = "";
		img.src = desc.files[0];
	}
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done,failed) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp3")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/wav") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".wav")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		var _g = 0;
		var _g1 = desc.files.length;
		while(_g < _g1) {
			var i = _g++;
			var file = desc.files[i];
			if(StringTools.endsWith(file,".ogg")) {
				new kha_js_WebAudioSound(file,done,failed);
				return;
			}
		}
		failed({ url : desc.files.join(","), error : "Unable to find sound files with supported audio formats"});
	} else if(kha_SystemImpl.mobile) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_MobileWebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp3")) {
					new kha_js_MobileWebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/wav") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".wav")) {
					new kha_js_MobileWebAudioSound(file,done,failed);
					return;
				}
			}
		}
		var _g = 0;
		var _g1 = desc.files.length;
		while(_g < _g1) {
			var i = _g++;
			var file = desc.files[i];
			if(StringTools.endsWith(file,".ogg")) {
				new kha_js_MobileWebAudioSound(file,done,failed);
				return;
			}
		}
		failed({ url : desc.files.join(","), error : "Unable to find sound files with supported audio formats"});
	} else {
		new kha_js_Sound(desc.files,done,failed);
	}
};
kha_LoaderImpl.loadRemote = function(desc,done,failed) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = haxe_io_Bytes.ofData(byteArray);
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g = 0;
				var _g1 = data.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[i] = data[i];
				}
			} else {
				failed({ url : desc.files[0]});
				return;
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			failed({ url : desc.files[0]});
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadRemote(desc,done,failed);
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = true;
kha_TimeTask.prototype = {
	__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = true;
kha_FrameTask.prototype = {
	__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = true;
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.lastFrameEnd = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_Window.get(0).get_vSynced();
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	if(restartTimers) {
		var _g = 0;
		var _g1 = kha_Scheduler.timeTasks;
		while(_g < _g1.length) {
			var timeTask = _g1[_g];
			++_g;
			timeTask.paused = false;
		}
		var _g = 0;
		var _g1 = kha_Scheduler.frameTasks;
		while(_g < _g1.length) {
			var frameTask = _g1[_g];
			++_g;
			frameTask.paused = false;
		}
	}
};
kha_Scheduler.executeFrame = function() {
	var real = kha_Scheduler.realTime();
	var now = real - kha_Scheduler.startTime;
	var delta = now - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.lastFrameEnd;
	if(delta >= 0) {
		if(kha_netsync_Session.the() == null) {
			if(delta > kha_Scheduler.maxframetime) {
				kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
				now = real - kha_Scheduler.startTime;
				delta = kha_Scheduler.maxframetime;
				frameEnd += delta;
			} else if(kha_Scheduler.vsync) {
				var frames = Math.round(delta / (1.0 / kha_Display.get_primary().get_frequency()));
				if(frames < 1) {
					return;
				}
				var realdif = frames * (1.0 / kha_Display.get_primary().get_frequency());
				delta = realdif;
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT - 2;
				while(_g < _g1) {
					var i = _g++;
					delta += kha_Scheduler.deltas[i];
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
				delta /= kha_Scheduler.DIF_COUNT;
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
				frameEnd += delta;
			} else {
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT - 1;
				while(_g < _g1) {
					var i = _g++;
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
				var next = 0;
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT;
				while(_g < _g1) {
					var i = _g++;
					next += kha_Scheduler.deltas[i];
				}
				next /= kha_Scheduler.DIF_COUNT;
				frameEnd += next;
			}
		} else {
			frameEnd += delta;
		}
		kha_Scheduler.lastTime = now;
		if(!kha_Scheduler.stopped) {
			kha_Scheduler.lastFrameEnd = frameEnd;
		}
		var _g = 0;
		var _g1 = kha_Scheduler.pausedTimeTasks;
		while(_g < _g1.length) {
			var pausedTask = _g1[_g];
			++_g;
			pausedTask.next += delta;
		}
		if(kha_Scheduler.stopped) {
			var _g = 0;
			var _g1 = kha_Scheduler.timeTasks;
			while(_g < _g1.length) {
				var timeTask = _g1[_g];
				++_g;
				timeTask.next += delta;
			}
		}
		kha_Scheduler.executeTimeTasks(frameEnd);
		var _g = 0;
		var _g1 = kha_Scheduler.outdatedTimeTasks;
		while(_g < _g1.length) {
			var task = _g1[_g];
			++_g;
			if(task.next < frameEnd - 10.0) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g = 0;
		var _g1 = kha_Scheduler.timeTasksScratchpad;
		while(_g < _g1.length) {
			var task = _g1[_g];
			++_g;
			HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task);
		}
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	}
	kha_Scheduler.current = frameEnd;
	kha_Scheduler.sortFrameTasks();
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(!frameTask.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.executeTimeTasks = function(until) {
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= until) {
			kha_Scheduler.current = kha_Scheduler.activeTimeTask.next;
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				} else {
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
				kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
};
kha_Scheduler.archiveTimeTask = function(timeTask,frameEnd) {
};
kha_Scheduler.time = function() {
	return kha_Scheduler.current;
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
	kha_Scheduler.lastFrameEnd = 0;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g = 0;
	var _g1 = list.length;
	while(_g < _g1) {
		var i = _g++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = true;
kha_Shaders.init = function() {
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"Checker_mesh_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.Checker_mesh_frag = new kha_graphics4_FragmentShader(blobs,["Checker_mesh-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"Checker_mesh_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.Checker_mesh_vert = new kha_graphics4_VertexShader(blobs,["Checker_mesh-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"Checker_shadowmap_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.Checker_shadowmap_frag = new kha_graphics4_FragmentShader(blobs,["Checker_shadowmap-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"Checker_shadowmap_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.Checker_shadowmap_vert = new kha_graphics4_VertexShader(blobs,["Checker_shadowmap-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"Material_002_mesh_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.Material_002_mesh_frag = new kha_graphics4_FragmentShader(blobs,["Material_002_mesh-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"Material_002_mesh_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.Material_002_mesh_vert = new kha_graphics4_VertexShader(blobs,["Material_002_mesh-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"Material_003_mesh_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.Material_003_mesh_frag = new kha_graphics4_FragmentShader(blobs,["Material_003_mesh-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"World_World_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.World_World_frag = new kha_graphics4_FragmentShader(blobs,["World_World-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"World_World_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.World_World_vert = new kha_graphics4_VertexShader(blobs,["World_World-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"blur_edge_pass_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.blur_edge_pass_frag = new kha_graphics4_FragmentShader(blobs,["blur_edge_pass-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"compositor_pass_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.compositor_pass_frag = new kha_graphics4_FragmentShader(blobs,["compositor_pass-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"compositor_pass_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.compositor_pass_vert = new kha_graphics4_VertexShader(blobs,["compositor_pass-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"deferred_light_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.deferred_light_frag = new kha_graphics4_FragmentShader(blobs,["deferred_light-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_colored_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs,["painter-colored-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_colored_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs,["painter-colored-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_image_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs,["painter-image-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_image_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs,["painter-image-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_text_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs,["painter-text-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_text_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs,["painter-text-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_video_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs,["painter-video-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_video_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs,["painter-video-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"pass_copy_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.pass_copy_frag = new kha_graphics4_FragmentShader(blobs,["pass_copy-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"pass_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.pass_vert = new kha_graphics4_VertexShader(blobs,["pass-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"pass_viewray_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.pass_viewray_vert = new kha_graphics4_VertexShader(blobs,["pass_viewray-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"smaa_blend_weight_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.smaa_blend_weight_frag = new kha_graphics4_FragmentShader(blobs,["smaa_blend_weight-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"smaa_blend_weight_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.smaa_blend_weight_vert = new kha_graphics4_VertexShader(blobs,["smaa_blend_weight-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"smaa_edge_detect_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.smaa_edge_detect_frag = new kha_graphics4_FragmentShader(blobs,["smaa_edge_detect-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"smaa_edge_detect_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.smaa_edge_detect_vert = new kha_graphics4_VertexShader(blobs,["smaa_edge_detect-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"smaa_neighborhood_blend_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.smaa_neighborhood_blend_frag = new kha_graphics4_FragmentShader(blobs,["smaa_neighborhood_blend-webgl2.frag.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"smaa_neighborhood_blend_vertData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.smaa_neighborhood_blend_vert = new kha_graphics4_VertexShader(blobs,["smaa_neighborhood_blend-webgl2.vert.essl"]);
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"ssao_pass_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	kha_Shaders.ssao_pass_frag = new kha_graphics4_FragmentShader(blobs,["ssao_pass-webgl2.frag.essl"]);
};
var kha_Sound = function() {
	this.sampleRate = 0;
	this.channels = 0;
	this.length = 0;
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = true;
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	uncompress: function(done) {
		if(this.uncompressedData != null) {
			done();
			return;
		}
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			this.length = count / kha_audio2_Audio.samplesPerSecond;
			this.uncompressedData = kha_arrays_Float32Array._new(count * 2);
			var _g = 0;
			var _g1 = count;
			while(_g < _g1) {
				var i = _g++;
				var this1 = this.uncompressedData;
				var v = soundBytes.getFloat(i * 4);
				this1.setFloat32(i * 2 * 4,v,true);
				var this2 = this.uncompressedData;
				var v1 = soundBytes.getFloat(i * 4);
				this2.setFloat32((i * 2 + 1) * 4,v1,true);
			}
		} else {
			this.length = count / 2 / kha_audio2_Audio.samplesPerSecond;
			this.uncompressedData = kha_arrays_Float32Array._new(count);
			var _g = 0;
			var _g1 = count;
			while(_g < _g1) {
				var i = _g++;
				var this1 = this.uncompressedData;
				var v = soundBytes.getFloat(i * 4);
				this1.setFloat32(i * 4,v,true);
			}
		}
		this.channels = header.channel;
		this.sampleRate = header.sampleRate;
		this.compressedData = null;
		done();
	}
	,__class__: kha_Sound
};
var kha_SystemOptions = function(title,width,height,$window,framebuffer) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(title == null) {
		title = "Kha";
	}
	this.framebuffer = null;
	this.window = null;
	this.height = -1;
	this.width = -1;
	this.title = "Kha";
	this.title = title;
	this.window = $window == null ? new kha_WindowOptions(null,-1,-1,800,600,-1,true,null,0) : $window;
	if(width > 0) {
		this.window.width = width;
		this.width = width;
	} else {
		this.width = this.window.width;
	}
	if(height > 0) {
		this.window.height = height;
		this.height = height;
	} else {
		this.height = this.window.height;
	}
	if(this.window.title == null) {
		this.window.title = title;
	}
	this.framebuffer = framebuffer == null ? new kha_FramebufferOptions(60,true,32,16,8,1) : framebuffer;
};
$hxClasses["kha.SystemOptions"] = kha_SystemOptions;
kha_SystemOptions.__name__ = true;
kha_SystemOptions.prototype = {
	__class__: kha_SystemOptions
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = true;
kha_System.__properties__ = {get_time:"get_time"};
kha_System.start = function(options,callback) {
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.notifyOnFrames = function(listener) {
	kha_System.renderListeners.push(listener);
};
kha_System.notifyOnApplicationState = function(foregroundListener,resumeListener,pauseListener,backgroundListener,shutdownListener) {
	if(foregroundListener != null) {
		kha_System.foregroundListeners.push(foregroundListener);
	}
	if(resumeListener != null) {
		kha_System.resumeListeners.push(resumeListener);
	}
	if(pauseListener != null) {
		kha_System.pauseListeners.push(pauseListener);
	}
	if(backgroundListener != null) {
		kha_System.backgroundListeners.push(backgroundListener);
	}
	if(shutdownListener != null) {
		kha_System.shutdownListeners.push(shutdownListener);
	}
};
kha_System.render = function(framebuffers) {
	var _g = 0;
	var _g1 = kha_System.renderListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(framebuffers);
	}
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.dropFiles = function(filePath) {
	var _g = 0;
	var _g1 = kha_System.dropFilesListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(filePath);
	}
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get($window).get_width();
};
kha_System.windowHeight = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get($window).get_height();
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = true;
kha_GamepadStates.prototype = {
	__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = true;
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.ios = kha_SystemImpl.isIOS();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.firefox = kha_SystemImpl.isFirefox();
	kha_SystemImpl.safari = kha_SystemImpl.isSafari();
	kha_SystemImpl.ie = kha_SystemImpl.isIE();
	kha_SystemImpl.mobileAudioPlaying = !kha_SystemImpl.mobile && !kha_SystemImpl.chrome && !kha_SystemImpl.firefox;
	kha_SystemImpl.initSecondStep(callback);
};
kha_SystemImpl.initSecondStep = function(callback) {
	kha_SystemImpl.init2(kha_SystemImpl.options.window.width,kha_SystemImpl.options.window.height);
	kha_SystemImpl.initAnimate(callback);
};
kha_SystemImpl.isMobile = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("Android") != -1 || agent.indexOf("webOS") != -1 || agent.indexOf("BlackBerry") != -1 || agent.indexOf("Windows Phone") != -1) {
		return true;
	}
	if(kha_SystemImpl.isIOS()) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIOS = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("iPhone") != -1 || agent.indexOf("iPad") != -1 || agent.indexOf("iPod") != -1) {
		return true;
	}
	return false;
};
kha_SystemImpl.isChrome = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("Chrome") != -1) {
		return true;
	}
	return false;
};
kha_SystemImpl.isFirefox = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("Firefox") != -1) {
		return true;
	}
	return false;
};
kha_SystemImpl.isSafari = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("Safari") != -1 && agent.indexOf("Chrome") == -1) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIE = function() {
	var agent = $global.navigator.userAgent;
	if(agent.indexOf("MSIE ") != -1 || agent.indexOf("Trident/") != -1) {
		return true;
	}
	return false;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getTime = function() {
	var now = window.performance != null ? window.performance.now() : Date.now();
	return now / 1000;
};
kha_SystemImpl.init2 = function(defaultWidth,defaultHeight,backbufferFormat) {
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	kha_SystemImpl.gamepads[0] = new kha_input_Gamepad(0);
	kha_SystemImpl.gamepadStates[0] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[1] = new kha_input_Gamepad(1);
	kha_SystemImpl.gamepadStates[1] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[2] = new kha_input_Gamepad(2);
	kha_SystemImpl.gamepadStates[2] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[3] = new kha_input_Gamepad(3);
	kha_SystemImpl.gamepadStates[3] = new kha_GamepadStates();
	window.addEventListener("gamepadconnected",function(e) {
		var pad = e.gamepad;
		kha_input_Gamepad.sendConnectEvent(pad.index);
		var _g = 0;
		var _g1 = pad.buttons.length;
		while(_g < _g1) {
			var i = _g++;
			kha_SystemImpl.gamepadStates[pad.index].buttons[i] = 0;
		}
	});
	window.addEventListener("gamepaddisconnected",function(e) {
		kha_input_Gamepad.sendDisconnectEvent(e.gamepad.index);
	});
	var sysGamepads = kha_SystemImpl.getGamepads();
	if(sysGamepads != null) {
		var _g = 0;
		var _g1 = sysGamepads.length;
		while(_g < _g1) {
			var i = _g++;
			var pad = sysGamepads[i];
			if(pad != null) {
				kha_SystemImpl.gamepads[pad.index].connected = true;
			}
		}
	}
	var onCopy = function(e) {
		if(kha_System.copyListener != null) {
			var data = kha_System.copyListener();
			if(data != null) {
				e.clipboardData.setData("text/plain",data);
			}
			e.preventDefault();
		}
	};
	var onCut = function(e) {
		if(kha_System.cutListener != null) {
			var data = kha_System.cutListener();
			if(data != null) {
				e.clipboardData.setData("text/plain",data);
			}
			e.preventDefault();
		}
	};
	var onPaste = function(e) {
		if(kha_System.pasteListener != null) {
			var onPaste = e.clipboardData.getData("text/plain");
			kha_System.pasteListener(onPaste);
			e.preventDefault();
		}
	};
	var document = window.document;
	document.addEventListener("copy",onCopy);
	document.addEventListener("cut",onCut);
	document.addEventListener("paste",onPaste);
	kha_CanvasImage.init();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished(defaultWidth,defaultHeight);
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g = 0;
	var _g1 = pad.axes.length;
	while(_g < _g1) {
		var i = _g++;
		if(pad.axes[i] != null) {
			var axis = pad.axes[i];
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != axis) {
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g = 0;
	var _g1 = pad.buttons.length;
	while(_g < _g1) {
		var i = _g++;
		if(pad.buttons[i] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i] != pad.buttons[i].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i] = pad.buttons[i].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i,pad.buttons[i].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.getCanvasElement = function() {
	if(kha_SystemImpl.khanvas != null) {
		return kha_SystemImpl.khanvas;
	}
	return window.document.getElementById("khanvas");
};
kha_SystemImpl.loadFinished = function(defaultWidth,defaultHeight) {
	var canvas = kha_SystemImpl.getCanvasElement();
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("webgl2",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
		kha_SystemImpl.gl.pixelStorei(37441,1);
		kha_SystemImpl.halfFloat = { HALF_FLOAT_OES : 5131};
		kha_SystemImpl.depthTexture = { UNSIGNED_INT_24_8_WEBGL : 34042};
		kha_SystemImpl.drawBuffers = { COLOR_ATTACHMENT0_WEBGL : 36064};
		kha_SystemImpl.elementIndexUint = true;
		kha_SystemImpl.gl.getExtension("EXT_color_buffer_float");
		kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
		kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
		kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
		if(kha_SystemImpl.anisotropicFilter == null) {
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
		}
		gl = true;
		kha_SystemImpl.gl2 = true;
		kha_Shaders.init();
	} catch( _g ) {
		haxe_Log.trace("Could not initialize WebGL 2, falling back to WebGL.",{ fileName : "kha/SystemImpl.hx", lineNumber : 408, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	if(!kha_SystemImpl.gl2) {
		try {
			kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
			kha_SystemImpl.gl.pixelStorei(37441,1);
			kha_SystemImpl.gl.getExtension("OES_texture_float");
			kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
			kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
			kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
			kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
			kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
			kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
			if(kha_SystemImpl.anisotropicFilter == null) {
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
			kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
			gl = true;
			kha_Shaders.init();
		} catch( _g ) {
			haxe_Log.trace("Could not initialize WebGL, falling back to <canvas>.",{ fileName : "kha/SystemImpl.hx", lineNumber : 436, className : "kha.SystemImpl", methodName : "loadFinished"});
		}
	}
	kha_SystemImpl.setCanvas(canvas);
	kha_SystemImpl.window = new kha_Window(0,defaultWidth,defaultHeight,canvas);
	if(gl) {
		var g4 = new kha_js_graphics4_Graphics();
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		kha_js_Font.Kravur = kha_Kravur; kha_Kravur = kha_js_Font;
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	canvas.focus();
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
		canvas.onkeypress = kha_SystemImpl.keyPress;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	canvas.addEventListener("touchcancel",kha_SystemImpl.touchCancel,false);
	window.document.addEventListener("dragover",function(event) {
		event.preventDefault();
	});
	window.document.addEventListener("drop",function(event) {
		event.preventDefault();
		if(event.dataTransfer != null && event.dataTransfer.files != null) {
			var _g = 0;
			var _g1 = event.dataTransfer.files;
			while(_g < _g1.length) {
				var file = _g1[_g];
				++_g;
				kha_LoaderImpl.dropFiles.h[file.name] = file;
				kha_System.dropFiles("drop://" + file.name);
			}
		}
	});
	window.addEventListener("unload",function() {
		kha_System.shutdown();
	});
};
kha_SystemImpl.initAnimate = function(callback) {
	var canvas = kha_SystemImpl.getCanvasElement();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var isRefreshRateDetectionActive = false;
	var lastTimestamp = 0.0;
	var possibleRefreshRates = [30,60,75,90,120,144,240,340,360];
	var _g = [];
	var _g1 = 0;
	var _g2 = possibleRefreshRates.length;
	while(_g1 < _g2) {
		var _ = _g1++;
		_g.push(0);
	}
	var refreshRatesCounts = _g;
	var animate = null;
	animate = function(timestamp) {
		if(requestAnimationFrame == null) {
			window.setTimeout(animate,16.6666666666666679);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = kha_SystemImpl.getGamepads();
		if(sysGamepads != null) {
			var _g = 0;
			var _g1 = sysGamepads.length;
			while(_g < _g1) {
				var i = _g++;
				var pad = sysGamepads[i];
				if(pad != null) {
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext != null) {
			if(kha_SystemImpl.lastCanvasClientWidth != canvas.clientWidth || kha_SystemImpl.lastCanvasClientHeight != canvas.clientHeight) {
				var scale = window.devicePixelRatio;
				var clientWidth = canvas.clientWidth;
				var clientHeight = canvas.clientHeight;
				canvas.width = clientWidth;
				canvas.height = clientHeight;
				if(scale != 1) {
					canvas.style.width = (clientWidth / scale | 0) + "px";
					canvas.style.height = (clientHeight / scale | 0) + "px";
				}
				kha_SystemImpl.lastCanvasClientWidth = canvas.clientWidth;
				kha_SystemImpl.lastCanvasClientHeight = canvas.clientHeight;
			}
			kha_System.render([kha_SystemImpl.frame]);
			if(kha_SystemImpl.ie && kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
		if(!isRefreshRateDetectionActive) {
			return;
		}
		if(lastTimestamp == 0) {
			lastTimestamp = timestamp;
			return;
		}
		var fps = Math.floor(1000 / (timestamp - lastTimestamp));
		if(kha_SystemImpl.estimatedRefreshRate < fps) {
			kha_SystemImpl.estimatedRefreshRate = fps;
		}
		lastTimestamp = timestamp;
		var _g3_current = 0;
		var _g3_array = possibleRefreshRates;
		while(_g3_current < _g3_array.length) {
			var _g4_value = _g3_array[_g3_current];
			var _g4_key = _g3_current++;
			var i = _g4_key;
			var rate = _g4_value;
			if(fps > rate - 3 && fps < rate + 3) {
				refreshRatesCounts[i]++;
			}
		}
	};
	window.setTimeout(function() {
		isRefreshRateDetectionActive = true;
		return window.setTimeout(function() {
			isRefreshRateDetectionActive = false;
			var index = possibleRefreshRates.indexOf(60);
			var max = 0;
			var _g3_current = 0;
			var _g3_array = refreshRatesCounts;
			while(_g3_current < _g3_array.length) {
				var _g4_value = _g3_array[_g3_current];
				var _g4_key = _g3_current++;
				var i = _g4_key;
				var count = _g4_value;
				if(count > max) {
					max = count;
					index = i;
				}
			}
			return kha_SystemImpl.estimatedRefreshRate = possibleRefreshRates[index];
		},1000);
	},500);
	kha_Scheduler.start();
	requestAnimationFrame(animate);
	callback(kha_SystemImpl.window);
};
kha_SystemImpl.lockMouse = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestPointerLock))) {
		kha_SystemImpl.khanvas.requestPointerLock();
	} else if(kha_SystemImpl.khanvas.mozRequestPointerLock) {
		kha_SystemImpl.khanvas.mozRequestPointerLock();
	} else if(kha_SystemImpl.khanvas.webkitRequestPointerLock) {
		kha_SystemImpl.khanvas.webkitRequestPointerLock();
	}
};
kha_SystemImpl.unlockMouse = function() {
	if(document.exitPointerLock) {
		document.exitPointerLock();
	} else if(document.mozExitPointerLock) {
		document.mozExitPointerLock();
	} else if(document.webkitExitPointerLock) {
		document.webkitExitPointerLock();
	}
};
kha_SystemImpl.canLockMouse = function() {
	return 'pointerLockElement' in document ||
		'mozPointerLockElement' in document ||
		'webkitPointerLockElement' in document;
};
kha_SystemImpl.isMouseLocked = function() {
	return document.pointerLockElement === kha_SystemImpl.khanvas ||
			document.mozPointerLockElement === kha_SystemImpl.khanvas ||
			document.webkitPointerLockElement === kha_SystemImpl.khanvas;
};
kha_SystemImpl.notifyOfMouseLockChange = function(func,error) {
	window.document.addEventListener("pointerlockchange",func,false);
	window.document.addEventListener("mozpointerlockchange",func,false);
	window.document.addEventListener("webkitpointerlockchange",func,false);
	window.document.addEventListener("pointerlockerror",error,false);
	window.document.addEventListener("mozpointerlockerror",error,false);
	window.document.addEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.removeFromMouseLockChange = function(func,error) {
	window.document.removeEventListener("pointerlockchange",func,false);
	window.document.removeEventListener("mozpointerlockchange",func,false);
	window.document.removeEventListener("webkitpointerlockchange",func,false);
	window.document.removeEventListener("pointerlockerror",error,false);
	window.document.removeEventListener("mozpointerlockerror",error,false);
	window.document.removeEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockiOSSound = function() {
	if(!kha_SystemImpl.ios || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	source.start();
	source.stop();
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.unlockSound = function() {
	if(!kha_SystemImpl.soundEnabled) {
		var context = kha_audio2_Audio._context;
		if(context == null) {
			context = kha_audio2_Audio1._context;
		}
		if(context != null) {
			context.resume().then(function(c) {
				kha_SystemImpl.soundEnabled = true;
			}).catch(function(err) {
				haxe_Log.trace(err,{ fileName : "kha/SystemImpl.hx", lineNumber : 730, className : "kha.SystemImpl", methodName : "unlockSound"});
			});
		}
		kha_audio2_Audio.wakeChannels();
	}
	kha_SystemImpl.unlockiOSSound();
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.insideInputEvent = true;
	var _g = kha_input_Mouse.wheelEventBlockBehavior;
	switch(_g._hx_index) {
	case 0:
		event.preventDefault();
		break;
	case 1:
		break;
	case 2:
		var func = _g.func;
		if(func(event)) {
			event.preventDefault();
		}
		break;
	}
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	} else if(event.which == 4) {
		kha_SystemImpl.mouse.sendDownEvent(0,3,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseBackUp);
	} else if(event.which == 5) {
		kha_SystemImpl.mouse.sendDownEvent(0,4,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseForwardUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
	kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseBackUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 4) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseBackUp);
	kha_SystemImpl.mouse.sendUpEvent(0,3,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseForwardUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 5) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseForwardUp);
	kha_SystemImpl.mouse.sendUpEvent(0,4,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.documentMouseMove = function(event) {
	event.stopPropagation();
	kha_SystemImpl.mouseMove(event);
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		movementX = event.mozMovementX != null ? event.mozMovementX : event.webkitMovementX != null ? event.webkitMovementX : kha_SystemImpl.mouseX - lastMouseX;
		movementY = event.mozMovementY != null ? event.mozMovementY : event.webkitMovementY != null ? event.webkitMovementY : kha_SystemImpl.mouseY - lastMouseY;
	}
	if(kha_SystemImpl.firefox) {
		movementX = movementX * window.devicePixelRatio | 0;
		movementY = movementY * window.devicePixelRatio | 0;
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.stopPropagation();
	var _g = kha_input_Surface.touchDownEventBlockBehavior;
	switch(_g._hx_index) {
	case 0:
		event.preventDefault();
		break;
	case 1:
		break;
	case 2:
		var func = _g.func;
		if(func(event)) {
			event.preventDefault();
		}
		break;
	}
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(-1);
			if(id == -1) {
				id = kha_SystemImpl.iosTouchs.length;
			}
			kha_SystemImpl.iosTouchs[id] = touch.identifier;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		if(index == 0) {
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
		}
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
			kha_SystemImpl.iosTouchs[id] = -1;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.surface.sendMoveEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchCancel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.iosTouchs = [];
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keyDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.preventDefaultKeyBehavior(event);
	event.stopPropagation();
	if(event.repeat) {
		event.preventDefault();
		return;
	}
	var keyCode = kha_SystemImpl.fixedKeyCode(event);
	kha_SystemImpl.keyboard.sendDownEvent(keyCode);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.fixedKeyCode = function(event) {
	switch(event.keyCode) {
	case 91:case 93:
		return 224;
	case 186:
		return 59;
	case 187:
		return 61;
	case 189:
		return 173;
	default:
		return event.keyCode;
	}
};
kha_SystemImpl.preventDefaultKeyBehavior = function(event) {
	var _g = kha_input_Keyboard.keyBehavior;
	switch(_g._hx_index) {
	case 0:
		kha_SystemImpl.defaultKeyBlock(event);
		break;
	case 1:
		event.preventDefault();
		break;
	case 2:
		break;
	case 3:
		var func = _g.func;
		if(func(event.keyCode)) {
			event.preventDefault();
		}
		break;
	}
};
kha_SystemImpl.defaultKeyBlock = function(e) {
	if(e.ctrlKey || e.metaKey) {
		if(e.keyCode == 67 || e.keyCode == 88 || e.keyCode == 86) {
			return;
		}
		if(e.metaKey && e.keyCode == 81) {
			return;
		}
		e.preventDefault();
		return;
	}
	if(e.keyCode >= 112 && e.keyCode <= 123) {
		return;
	}
	if(e.key == null || e.key.length == 1) {
		return;
	}
	e.preventDefault();
};
kha_SystemImpl.keyUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.preventDefaultKeyBehavior(event);
	event.stopPropagation();
	var keyCode = kha_SystemImpl.fixedKeyCode(event);
	kha_SystemImpl.keyboard.sendUpEvent(keyCode);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.keyPress = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	if(event.which == 0) {
		return;
	}
	kha_SystemImpl.preventDefaultKeyBehavior(event);
	event.stopPropagation();
	var code = event.which;
	kha_SystemImpl.keyboard.sendPressEvent(String.fromCodePoint(code));
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.getGamepadId = function(index) {
	var sysGamepads = kha_SystemImpl.getGamepads();
	if(sysGamepads != null && sysGamepads[index]) {
		return sysGamepads[index].id;
	}
	return "unknown";
};
kha_SystemImpl.getGamepadVendor = function(index) {
	return "unknown";
};
kha_SystemImpl.setGamepadRumble = function(index,leftAmount,rightAmount) {
};
kha_SystemImpl.getGamepads = function() {
	if(kha_SystemImpl.chrome && kha_vr_VrInterface.instance != null && kha_vr_VrInterface.instance.IsVrEnabled()) {
		return null;
	}
	if(navigator.getGamepads) {
		return $global.navigator.getGamepads();
	} else {
		return null;
	}
};
kha_SystemImpl.getPen = function(num) {
	return null;
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat,samples,readable) {
	this.MSAAFrameBuffer = null;
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.myFormat = format;
	this.renderTarget = renderTarget;
	this.samples = samples;
	this.readable = readable;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = true;
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		kha_WebGLImage.canvas = window.document.createElement("canvas");
		if(kha_WebGLImage.canvas != null) {
			kha_WebGLImage.context = kha_WebGLImage.canvas.getContext("2d");
			kha_WebGLImage.canvas.width = 4096;
			kha_WebGLImage.canvas.height = 4096;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.myFormat) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.myFormat == 3) {
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAAFrameBuffer = kha_SystemImpl.gl.createFramebuffer();
					this.MSAAColorBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAAColorBuffer);
					var MSAAFormat;
					switch(this.myFormat) {
					case 0:
						MSAAFormat = kha_SystemImpl.gl.RGBA8;
						break;
					case 2:
						MSAAFormat = kha_SystemImpl.gl.RGBA32F;
						break;
					case 4:
						MSAAFormat = kha_SystemImpl.gl.RGBA16F;
						break;
					case 5:
						MSAAFormat = 33326;
						break;
					case 6:
						MSAAFormat = 33325;
						break;
					default:
						MSAAFormat = kha_SystemImpl.gl.RGBA8;
					}
					kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,MSAAFormat,this.get_realWidth(),this.get_realHeight());
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,36064,36161,this.MSAAColorBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
				kha_SystemImpl.gl.bindFramebuffer(36160,null);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			var e = kha_SystemImpl.gl.checkFramebufferStatus(36160);
			if(e != 36053) {
				haxe_Log.trace("checkframebufferStatus error " + e,{ fileName : "kha/WebGLImage.hx", lineNumber : 284, className : "kha.WebGLImage", methodName : "createTexture"});
			}
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			switch(this.myFormat) {
			case 0:
				if(((this.image) instanceof Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.myWidth,this.myHeight,0,6409,5121,this.image);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				if(depthStencilFormat == 1) {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				}
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAADepthBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAADepthBuffer);
					if(depthStencilFormat == 1) {
						kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,33190,this.get_realWidth(),this.get_realHeight());
					} else {
						kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,33189,this.get_realWidth(),this.get_realHeight());
					}
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
				kha_SystemImpl.gl.bindFramebuffer(36160,null);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				if(this.samples > 1 && kha_SystemImpl.gl2) {
					this.MSAADepthBuffer = kha_SystemImpl.gl.createRenderbuffer();
					kha_SystemImpl.gl.bindRenderbuffer(36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.renderbufferStorageMultisample(36161,this.samples,35056,this.get_realWidth(),this.get_realHeight());
					kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
					kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.MSAADepthBuffer);
					kha_SystemImpl.gl.bindFramebuffer(36160,this.MSAAFrameBuffer);
				}
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
	}
	,setDepthStencilFrom: function(image) {
		this.depthTexture = (js_Boot.__cast(image , kha_WebGLImage)).depthTexture;
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
		if(this.samples > 1 && kha_SystemImpl.gl2) {
			this.MSAADepthBuffer = (js_Boot.__cast(image , kha_WebGLImage)).MSAADepthBuffer;
			kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.MSAADepthBuffer);
		}
	}
	,bytesToArray: function(bytes) {
		switch(this.myFormat) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
		if(this.MSAAFrameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.MSAAFrameBuffer);
		}
		if(this.MSAAColorBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.MSAAColorBuffer);
		}
		if(this.MSAADepthBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.MSAADepthBuffer);
		}
	}
	,generateMipmaps: function(levels) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.generateMipmap(3553);
	}
	,setMipmaps: function(mipmaps) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.myFormat == 2) {
			var _g = 0;
			var _g1 = mipmaps.length;
			while(_g < _g1) {
				var i = _g++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,kha_SystemImpl.gl2 ? 34836 : 6408,mipmaps[i].get_width(),mipmaps[i].get_height(),0,6408,5126,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		} else if(this.myFormat == 4) {
			var _g = 0;
			var _g1 = mipmaps.length;
			while(_g < _g1) {
				var i = _g++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,kha_SystemImpl.gl2 ? 34842 : 6408,mipmaps[i].get_width(),mipmaps[i].get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		} else {
			var _g = 0;
			var _g1 = mipmaps.length;
			while(_g < _g1) {
				var i = _g++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,6408,6408,5121,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		}
	}
	,__class__: kha_WebGLImage
});
var kha_Window = function(num,defaultWidth,defaultHeight,canvas) {
	var _gthis = this;
	this.num = num;
	this.canvas = canvas;
	this.defaultWidth = defaultWidth;
	this.defaultHeight = defaultHeight;
	kha_Window.windows.push(this);
	kha_Window.resizeCallbacks[num] = [];
	kha_Window.windows.push(this);
	var observer = new MutationObserver(function(mutations,observer) {
		var isResize = false;
		var _g = 0;
		while(_g < mutations.length) {
			var mutation = mutations[_g];
			++_g;
			if(mutation.attributeName == "width" || mutation.attributeName == "height") {
				isResize = true;
				break;
			}
		}
		if(isResize) {
			_gthis.resize(canvas.width,canvas.height);
		}
	});
	observer.observe(canvas,{ attributes : true});
};
$hxClasses["kha.Window"] = kha_Window;
kha_Window.__name__ = true;
kha_Window.get = function(index) {
	return kha_Window.windows[index];
};
kha_Window.prototype = {
	resize: function(width,height) {
		var _g = 0;
		var _g1 = kha_Window.resizeCallbacks[this.num];
		while(_g < _g1.length) {
			var callback = _g1[_g];
			++_g;
			callback(width,height);
		}
	}
	,get_width: function() {
		if(this.canvas.width == 0) {
			return this.defaultWidth;
		} else {
			return this.canvas.width;
		}
	}
	,get_height: function() {
		if(this.canvas.height == 0) {
			return this.defaultHeight;
		} else {
			return this.canvas.height;
		}
	}
	,get_vSynced: function() {
		return true;
	}
	,__class__: kha_Window
	,__properties__: {get_vSynced:"get_vSynced",get_height:"get_height",get_width:"get_width"}
};
var kha_WindowOptions = function(title,x,y,width,height,display,visible,windowFeatures,mode) {
	if(mode == null) {
		mode = 0;
	}
	if(visible == null) {
		visible = true;
	}
	if(display == null) {
		display = -1;
	}
	if(height == null) {
		height = 600;
	}
	if(width == null) {
		width = 800;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	this.mode = 0;
	this.windowFeatures = 1 | 4 | 2;
	this.visible = true;
	this.display = -1;
	this.height = 600;
	this.width = 800;
	this.y = -1;
	this.x = -1;
	this.title = null;
	this.title = title;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.display = display;
	this.visible = visible;
	this.windowFeatures = windowFeatures == null ? 1 | 4 | 2 : windowFeatures;
	this.mode = mode;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = true;
kha_WindowOptions.prototype = {
	__class__: kha_WindowOptions
};
var kha_arrays_ByteArray = {};
kha_arrays_ByteArray._new = function(buffer,byteOffset,byteLength) {
	var this1 = new DataView(buffer,byteOffset,byteLength);
	return this1;
};
kha_arrays_ByteArray.make = function(byteLength) {
	return kha_arrays_ByteArray._new(kha_arrays_ByteBuffer.create(byteLength));
};
var kha_arrays_ByteBuffer = {};
kha_arrays_ByteBuffer.create = function(length) {
	return kha_arrays_ByteBuffer._new(length);
};
kha_arrays_ByteBuffer._new = function(length) {
	var this1 = new ArrayBuffer(length);
	return this1;
};
var kha_arrays_Float32Array = {};
kha_arrays_Float32Array._new = function(elements) {
	var this1 = kha_arrays_ByteArray.make(elements * 4);
	return this1;
};
var kha_arrays_Int16Array = {};
kha_arrays_Int16Array._new = function(elements) {
	var this1 = kha_arrays_ByteArray.make(elements * 2);
	return this1;
};
var kha_arrays_Uint32Array = {};
kha_arrays_Uint32Array._new = function(elements) {
	var this1 = kha_arrays_ByteArray.make(elements * 4);
	return this1;
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = true;
kha_audio1_AudioChannel.__isInterface__ = true;
kha_audio1_AudioChannel.prototype = {
	__class__: kha_audio1_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume"}
};
var kha_internal_IntBox = function(value) {
	this.value = value;
};
$hxClasses["kha.internal.IntBox"] = kha_internal_IntBox;
kha_internal_IntBox.__name__ = true;
kha_internal_IntBox.prototype = {
	__class__: kha_internal_IntBox
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = true;
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( _g ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( _g ) {
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	kha_audio2_Audio.samplesPerSecond = Math.round(kha_audio2_Audio._context.sampleRate);
	var bufferSize = 2048;
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(bufferSize * 4,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(bufferSize,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.intBox.value = e.outputBuffer.length * 2;
			kha_audio2_Audio.audioCallback(kha_audio2_Audio.intBox,kha_audio2_Audio.buffer);
			var _g = 0;
			var _g1 = e.outputBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				output1[i] = kha_audio2_Audio.buffer.data.getFloat32(kha_audio2_Audio.buffer.readLocation * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data.getFloat32(kha_audio2_Audio.buffer.readLocation * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g = 0;
			var _g1 = e.outputBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				output1[i] = 0;
				output2[i] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
kha_audio2_Audio.wakeChannels = function() {
	kha_SystemImpl.mobileAudioPlaying = true;
	var _g = 0;
	var _g1 = kha_audio2_Audio.virtualChannels;
	while(_g < _g1.length) {
		var channel = _g1[_g];
		++_g;
		channel.wake();
	}
};
kha_audio2_Audio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var element = window.document.createElement("audio");
	var blob = new Blob([sound.compressedData.b.bufferValue],{ type : "audio/mp4"});
	element.src = URL.createObjectURL(blob);
	element.loop = loop;
	var channel = new kha_js_AEAudioChannel(element,loop);
	if(kha_SystemImpl.mobileAudioPlaying) {
		channel.play();
		return channel;
	} else {
		var virtualChannel = new kha_audio2_VirtualStreamChannel(channel,loop);
		kha_audio2_Audio.virtualChannels.push(virtualChannel);
		return virtualChannel;
	}
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = true;
kha_audio2_Audio1._init = function() {
	var this1 = new Array(32);
	kha_audio2_Audio1.soundChannels = this1;
	var this1 = new Array(32);
	kha_audio2_Audio1.streamChannels = this1;
	var this1 = new Array(32);
	kha_audio2_Audio1.internalSoundChannels = this1;
	var this1 = new Array(32);
	kha_audio2_Audio1.internalStreamChannels = this1;
	kha_audio2_Audio1.sampleCache1 = kha_arrays_Float32Array._new(512);
	kha_audio2_Audio1.sampleCache2 = kha_arrays_Float32Array._new(512);
	kha_audio2_Audio1.lastAllocationCount = 0;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
};
kha_audio2_Audio1.mix = function(samplesBox,buffer) {
	var samples = samplesBox.value;
	if(kha_audio2_Audio1.sampleCache1.byteLength >> 2 < samples) {
		if(kha_audio2_Audio.disableGcInteractions) {
			haxe_Log.trace("Unexpected allocation request in audio thread.",{ fileName : "kha/audio2/Audio1.hx", lineNumber : 50, className : "kha.audio2.Audio1", methodName : "mix"});
			var _g = 0;
			var _g1 = samples;
			while(_g < _g1) {
				var i = _g++;
				buffer.data.setFloat32(buffer.writeLocation * 4,0,true);
				buffer.writeLocation += 1;
				if(buffer.writeLocation >= buffer.size) {
					buffer.writeLocation = 0;
				}
			}
			kha_audio2_Audio1.lastAllocationCount = 0;
			kha_audio2_Audio.disableGcInteractions = false;
			return;
		}
		kha_audio2_Audio1.sampleCache1 = kha_arrays_Float32Array._new(samples * 2);
		kha_audio2_Audio1.sampleCache2 = kha_arrays_Float32Array._new(samples * 2);
		kha_audio2_Audio1.lastAllocationCount = 0;
	} else if(kha_audio2_Audio1.lastAllocationCount > 100) {
		kha_audio2_Audio.disableGcInteractions = true;
	} else {
		kha_audio2_Audio1.lastAllocationCount += 1;
	}
	var _g = 0;
	var _g1 = samples;
	while(_g < _g1) {
		var i = _g++;
		kha_audio2_Audio1.sampleCache2.setFloat32(i * 4,0,true);
	}
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		kha_audio2_Audio1.internalSoundChannels[i] = kha_audio2_Audio1.soundChannels[i];
	}
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		kha_audio2_Audio1.internalStreamChannels[i] = kha_audio2_Audio1.streamChannels[i];
	}
	var _g = 0;
	var _g1 = kha_audio2_Audio1.internalSoundChannels;
	while(_g < _g1.length) {
		var channel = _g1[_g];
		++_g;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g2 = 0;
		var _g3 = samples;
		while(_g2 < _g3) {
			var i = _g2++;
			var _g4 = i;
			var _g5 = kha_audio2_Audio1.sampleCache2;
			var v = _g5.getFloat32(_g4 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) + kha_audio2_Audio1.sampleCache1.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * channel.get_volume();
			_g5.setFloat32(_g4 * 4,v,true);
		}
	}
	var _g = 0;
	var _g1 = kha_audio2_Audio1.internalStreamChannels;
	while(_g < _g1.length) {
		var channel = _g1[_g];
		++_g;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g2 = 0;
		var _g3 = samples;
		while(_g2 < _g3) {
			var i = _g2++;
			var _g4 = i;
			var _g5 = kha_audio2_Audio1.sampleCache2;
			var v = _g5.getFloat32(_g4 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) + kha_audio2_Audio1.sampleCache1.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN) * channel.get_volume();
			_g5.setFloat32(_g4 * 4,v,true);
		}
	}
	var _g = 0;
	var _g1 = samples;
	while(_g < _g1) {
		var i = _g++;
		var a = kha_audio2_Audio1.sampleCache2.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
		var a1 = a < 1.0 ? a : 1.0;
		var v = a1 > -1.0 ? a1 : -1.0;
		buffer.data.setFloat32(buffer.writeLocation * 4,v,true);
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
kha_audio2_Audio1.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = null;
	if(kha_audio2_Audio.samplesPerSecond != sound.sampleRate) {
		channel = new kha_audio2_ResamplingAudioChannel(loop,sound.sampleRate);
	} else {
		channel = new kha_audio2_AudioChannel(loop);
	}
	channel.data = sound.uncompressedData;
	var foundChannel = false;
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
			kha_audio2_Audio1.soundChannels[i] = channel;
			foundChannel = true;
			break;
		}
	}
	if(foundChannel) {
		return channel;
	} else {
		return null;
	}
};
kha_audio2_Audio1._playAgain = function(channel) {
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == channel) {
			kha_audio2_Audio1.soundChannels[i] = null;
		}
	}
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished() || kha_audio2_Audio1.soundChannels[i] == channel) {
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
};
kha_audio2_Audio1.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var hardwareChannel = kha_audio2_Audio.stream(sound,loop);
	if(hardwareChannel != null) {
		return hardwareChannel;
	}
	var channel = new kha_audio2_StreamChannel(sound.compressedData,loop);
	var foundChannel = false;
	var _g = 0;
	while(_g < 32) {
		var i = _g++;
		if(kha_audio2_Audio1.streamChannels[i] == null || kha_audio2_Audio1.streamChannels[i].get_finished()) {
			kha_audio2_Audio1.streamChannels[i] = channel;
			foundChannel = true;
			break;
		}
	}
	if(foundChannel) {
		return channel;
	} else {
		return null;
	}
};
var kha_audio2_AudioChannel = function(looping) {
	this.data = null;
	this.looping = looping;
	this.stopped = false;
	this.paused = false;
	this.myPosition = 0;
	this.myVolume = 1;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = true;
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	nextSamples: function(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			var _g = 0;
			var _g1 = requestedLength;
			while(_g < _g1) {
				var i = _g++;
				requestedSamples.setFloat32(i * 4,0,true);
			}
			return;
		}
		var requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			var _g = 0;
			var a = (this.data.byteLength >> 2) - this.myPosition;
			var b = requestedLength - requestedSamplesIndex;
			var _g1 = a < b ? a : b;
			while(_g < _g1) {
				var i = _g++;
				var v = this.data.getFloat32(this.myPosition++ * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				requestedSamples.setFloat32(requestedSamplesIndex++ * 4,v,true);
			}
			if(this.myPosition >= this.data.byteLength >> 2) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) requestedSamples.setFloat32(requestedSamplesIndex++ * 4,0,true);
	}
	,play: function() {
		this.paused = false;
		this.stopped = false;
		kha_audio2_Audio1._playAgain(this);
	}
	,stop: function() {
		this.myPosition = 0;
		this.stopped = true;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_audio2_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume"}
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	this.data = kha_arrays_Float32Array._new(size);
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = true;
kha_audio2_Buffer.prototype = {
	__class__: kha_audio2_Buffer
};
var kha_audio2_ResamplingAudioChannel = function(looping,sampleRate) {
	kha_audio2_AudioChannel.call(this,looping);
	this.sampleRate = sampleRate;
};
$hxClasses["kha.audio2.ResamplingAudioChannel"] = kha_audio2_ResamplingAudioChannel;
kha_audio2_ResamplingAudioChannel.__name__ = true;
kha_audio2_ResamplingAudioChannel.__super__ = kha_audio2_AudioChannel;
kha_audio2_ResamplingAudioChannel.prototype = $extend(kha_audio2_AudioChannel.prototype,{
	nextSamples: function(requestedSamples,requestedLength,sampleRate) {
		if(this.paused || this.stopped) {
			var _g = 0;
			var _g1 = requestedLength;
			while(_g < _g1) {
				var i = _g++;
				requestedSamples.setFloat32(i * 4,0,true);
			}
			return;
		}
		var requestedSamplesIndex = 0;
		while(requestedSamplesIndex < requestedLength) {
			var _g = 0;
			var value = Math.ceil((this.data.byteLength >> 2) * (sampleRate / this.sampleRate));
			var a = (value % 2 == 0 ? value : value + 1) - this.myPosition;
			var b = requestedLength - requestedSamplesIndex;
			var _g1 = a < b ? a : b;
			while(_g < _g1) {
				var i = _g++;
				var k = requestedSamplesIndex++;
				var position = this.myPosition++;
				var even = position % 2 == 0;
				var factor = this.sampleRate / sampleRate;
				var v;
				if(even) {
					position = position / 2 | 0;
					var pos = factor * position;
					var pos1 = Math.floor(pos);
					var pos2 = Math.floor(pos + 1);
					pos1 *= 2;
					pos2 *= 2;
					var minimum = 0;
					var maximum = (this.data.byteLength >> 2) - 1;
					if(maximum % 2 != 0) {
						--maximum;
					}
					var a1 = pos1 < minimum || pos1 > maximum ? 0 : this.data.getFloat32(pos1 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var b1 = pos2 < minimum || pos2 > maximum ? 0 : this.data.getFloat32(pos2 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var t = pos - Math.floor(pos);
					v = (1 - t) * a1 + t * b1;
				} else {
					position = position / 2 | 0;
					var pos3 = factor * position;
					var pos11 = Math.floor(pos3);
					var pos21 = Math.floor(pos3 + 1);
					pos11 = pos11 * 2 + 1;
					pos21 = pos21 * 2 + 1;
					var minimum1 = 1;
					var maximum1 = (this.data.byteLength >> 2) - 1;
					if(maximum1 % 2 == 0) {
						--maximum1;
					}
					var a2 = pos11 < minimum1 || pos11 > maximum1 ? 0 : this.data.getFloat32(pos11 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var b2 = pos21 < minimum1 || pos21 > maximum1 ? 0 : this.data.getFloat32(pos21 * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
					var t1 = pos3 - Math.floor(pos3);
					v = (1 - t1) * a2 + t1 * b2;
				}
				requestedSamples.setFloat32(k * 4,v,true);
			}
			var value1 = Math.ceil((this.data.byteLength >> 2) * (sampleRate / this.sampleRate));
			if(this.myPosition >= (value1 % 2 == 0 ? value1 : value1 + 1)) {
				this.myPosition = 0;
				if(!this.looping) {
					this.stopped = true;
					break;
				}
			}
		}
		while(requestedSamplesIndex < requestedLength) requestedSamples.setFloat32(requestedSamplesIndex++ * 4,0,true);
	}
	,play: function() {
		this.paused = false;
		this.stopped = false;
		kha_audio2_Audio1._playAgain(this);
	}
	,stop: function() {
		this.myPosition = 0;
		this.stopped = true;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_audio2_ResamplingAudioChannel
});
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = true;
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g = 0;
			var _g1 = length;
			while(_g < _g1) {
				var i = _g++;
				samples.setFloat32(i * 4,0,true);
			}
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g = count;
			var _g1 = length;
			while(_g < _g1) {
				var i = _g++;
				samples.setFloat32(i * 4,0,true);
			}
		}
	}
	,play: function() {
		this.paused = false;
	}
	,stop: function() {
		this.atend = true;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume"}
};
var kha_audio2_VirtualStreamChannel = function(aeChannel,looping) {
	this.mode = 2;
	this.aeChannel = aeChannel;
	this.looping = looping;
	this.lastTickTime = kha_Scheduler.realTime();
	this.lastPosition = 0;
};
$hxClasses["kha.audio2.VirtualStreamChannel"] = kha_audio2_VirtualStreamChannel;
kha_audio2_VirtualStreamChannel.__name__ = true;
kha_audio2_VirtualStreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_VirtualStreamChannel.prototype = {
	wake: function() {
		this.updatePosition();
		this.aeChannel.set_position(this.lastPosition);
		this.aeChannel.play();
	}
	,updatePosition: function() {
		var now = kha_Scheduler.realTime();
		switch(this.mode) {
		case 0:
			this.lastPosition = 0;
			break;
		case 1:
			break;
		case 2:
			this.lastPosition += now - this.lastTickTime;
			while(this.lastPosition > this.get_length()) this.lastPosition -= this.get_length();
			break;
		}
		this.lastTickTime = now;
	}
	,play: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			this.aeChannel.play();
		} else {
			this.updatePosition();
			this.mode = 2;
		}
	}
	,stop: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			this.aeChannel.stop();
		} else {
			this.updatePosition();
			this.mode = 0;
		}
	}
	,get_length: function() {
		return this.aeChannel.get_length();
	}
	,get_position: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			return this.aeChannel.get_position();
		} else {
			this.updatePosition();
			return this.lastPosition;
		}
	}
	,set_volume: function(value) {
		return this.aeChannel.set_volume(value);
	}
	,get_finished: function() {
		if(kha_SystemImpl.mobileAudioPlaying) {
			return this.aeChannel.get_finished();
		} else if(this.mode != 0) {
			if(!this.looping) {
				return this.get_position() >= this.get_length();
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: kha_audio2_VirtualStreamChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = true;
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	var this1 = new Array(256);
	kha_audio2_ogg_tools_Crc32.table = this1;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (UInt.gte(s,1 << 31) ? 79764919 : 0);
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = true;
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var bytes1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var bytes1 = input;
	decoder.setupSampleNumber(function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
	var header = decoder.header;
	var count = 0;
	var bufferSize = 4096;
	var buffer = kha_arrays_Float32Array._new(bufferSize * header.channel);
	while(true) {
		var n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
		var _g = 0;
		var _g1 = n * header.channel;
		while(_g < _g1) {
			var i = _g++;
			output.writeFloat(buffer.getFloat32(i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN));
		}
		if(n == 0) {
			break;
		}
		count += n;
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	get_header: function() {
		return this.decoder.header;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		var samples = this.get_currentSample();
		var b = this.get_header().sampleRate;
		return UInt.toFloat(samples) / UInt.toFloat(b) * 1000;
	}
	,set_currentMillisecond: function(value) {
		this.set_currentSample(Math.floor(UInt.toFloat(this.get_header().sampleRate) * (value / 1000)));
		return this.get_currentMillisecond();
	}
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
	,__properties__: {set_currentMillisecond:"set_currentMillisecond",get_currentMillisecond:"get_currentMillisecond",set_currentSample:"set_currentSample",get_currentSample:"get_currentSample",get_header:"get_header"}
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = true;
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var this1 = new Array(segmentCount);
		var vec = this1;
		var _g = 0;
		var _g1 = segmentCount;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i = segmentCount - 1;
			while(i >= 0) {
				if(this.segments[i] < 255) {
					break;
				}
				if(i >= 0) {
					this.endSegWithKnownLoc = i;
					this.knownLocForPacket = loc0;
				}
				--i;
			}
		}
		if(this.firstDecode) {
			var i = 0;
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g = 0;
			var _g1 = segmentCount;
			while(_g < _g1) {
				var i = _g++;
				len += this.segments[i];
			}
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Object.create(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g).unwrap();
				if(((_g1) instanceof kha_audio2_ogg_vorbis_data_ReaderError)) {
					var e = _g1;
					this.lastSeg = true;
					this.error = e;
					return 0;
				} else {
					throw _g;
				}
			}
			if((this.page.flag & 1) == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( _g ) {
				if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
					eof = true;
					x = 0;
				} else {
					throw _g;
				}
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z;
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 308, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 311, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		} else {
			var tmp = previousLength == 0 && currentLocValid;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = UInt.gte(inputLength,65536) && UInt.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g._hx_index) {
		case 0:
			var e = _g.end;
			var l = _g.last;
			end = e;
			last = l;
			break;
		case 1:
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		var lastPageLoc = this.inputPosition;
		_hx_loop1: while(!last) {
			seekFunc(this.inputPosition = end);
			var _g = this.findPage(seekFunc,inputLength);
			switch(_g._hx_index) {
			case 0:
				var e = _g.end;
				var l = _g.last;
				end = e;
				last = l;
				break;
			case 1:
				break _hx_loop1;
			}
			previousSafe = lastPageLoc + 1;
			lastPageLoc = this.inputPosition;
		}
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var this1 = new Array(6);
		var vec = this1;
		var _g = 0;
		var _g1 = 6;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		var vorbisHeader = vec;
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 553, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				var n = this.input.readByte();
				if(n == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var this1 = new Array(27);
					var header = this1;
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					this.inputPosition += 1;
					header[4] = this.input.readByte();
					this.inputPosition += 1;
					header[5] = this.input.readByte();
					this.inputPosition += 1;
					header[6] = this.input.readByte();
					this.inputPosition += 1;
					header[7] = this.input.readByte();
					this.inputPosition += 1;
					header[8] = this.input.readByte();
					this.inputPosition += 1;
					header[9] = this.input.readByte();
					this.inputPosition += 1;
					header[10] = this.input.readByte();
					this.inputPosition += 1;
					header[11] = this.input.readByte();
					this.inputPosition += 1;
					header[12] = this.input.readByte();
					this.inputPosition += 1;
					header[13] = this.input.readByte();
					this.inputPosition += 1;
					header[14] = this.input.readByte();
					this.inputPosition += 1;
					header[15] = this.input.readByte();
					this.inputPosition += 1;
					header[16] = this.input.readByte();
					this.inputPosition += 1;
					header[17] = this.input.readByte();
					this.inputPosition += 1;
					header[18] = this.input.readByte();
					this.inputPosition += 1;
					header[19] = this.input.readByte();
					this.inputPosition += 1;
					header[20] = this.input.readByte();
					this.inputPosition += 1;
					header[21] = this.input.readByte();
					this.inputPosition += 1;
					header[22] = this.input.readByte();
					this.inputPosition += 1;
					header[23] = this.input.readByte();
					this.inputPosition += 1;
					header[24] = this.input.readByte();
					this.inputPosition += 1;
					header[25] = this.input.readByte();
					this.inputPosition += 1;
					header[26] = this.input.readByte();
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					header[22] = 0;
					header[23] = 0;
					header[24] = 0;
					header[25] = 0;
					var crc = 0;
					var _g = 0;
					while(_g < 27) {
						var i = _g++;
						crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[i] ^ crc >>> 24];
					}
					var len = 0;
					try {
						var _g1 = 0;
						var _g2 = header[26];
						while(_g1 < _g2) {
							var i1 = _g1++;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g3 = 0;
						var _g4 = len;
						while(_g3 < _g4) {
							var i2 = _g3++;
							this.inputPosition += 1;
							var byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
						}
					} catch( _g5 ) {
						if(((haxe_Exception.caught(_g5).unwrap()) instanceof haxe_io_Eof)) {
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else {
							throw _g5;
						}
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( _g ) {
			if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else {
				throw _g;
			}
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var this1 = new Array(255);
		var packetType = this1;
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var this1 = new Array(27);
		var vec = this1;
		var _g = 0;
		var _g1 = 27;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		var pageHeader = vec;
		var n = pageHeader[26];
		this.inputPosition += n;
		var this1 = new Array(n);
		var vec = this1;
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		var lacing = vec;
		var len = 0;
		var _g = 0;
		var _g1 = pageHeader[26];
		while(_g < _g1) {
			var i = _g++;
			len += lacing[i];
		}
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (pageHeader[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g = 0;
		var _g1 = pageHeader[26];
		while(_g < _g1) {
			var i = _g++;
			if(packetStart) {
				if(lacing[i] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n = this.input.readByte();
				if((n & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n >>= 1;
				var n1 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				var b = n1 < 16384 ? n1 < 16 ? log2_4[n1] : n1 < 512 ? 5 + log2_4[n1 >> 5] : 10 + log2_4[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_4[n1 >> 15] : 20 + log2_4[n1 >> 20] : n1 < 536870912 ? 25 + log2_4[n1 >> 25] : n1 < -2147483648 ? 30 + log2_4[n1 >> 30] : 0;
				n &= (1 << b) - 1;
				if(n >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n].blockflag;
				var len = lacing[i] - 1;
				this.inputPosition += len;
				var this1 = new Array(len);
				var vec = this1;
				var _g2 = 0;
				var _g3 = len;
				while(_g2 < _g3) {
					var i1 = _g2++;
					vec[i1] = this.input.readByte();
				}
			} else {
				var len1 = lacing[i];
				this.inputPosition += len1;
				var this2 = new Array(len1);
				var vec1 = this2;
				var _g4 = 0;
				var _g5 = len1;
				while(_g4 < _g5) {
					var i2 = _g4++;
					vec1[i2] = this.input.readByte();
				}
			}
			packetStart = lacing[i] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i = numPacket - 2;
		while(i >= 1) {
			--i;
			if(packetType[i]) {
				if(packetType[i + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n = c.sortedEntries;
			while(n > 1) {
				var m = x + (n >> 1);
				if(UInt.gte(code,sortedCodewords[m])) {
					x = m;
					n -= n >> 1;
				} else {
					n >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var i = _g++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 847, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxEnums["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__:true,__constructs__:null
	,Found: ($_=function(end,last) { return {_hx_index:0,end:end,last:last,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}; },$_._hx_name="Found",$_.__params__ = ["end","last"],$_)
	,NotFound: {_hx_name:"NotFound",_hx_index:1,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}
};
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.__constructs__ = [kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found,kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound];
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	var this1 = new Array(header.channel);
	this.channelBuffers = this1;
	var this1 = new Array(header.channel);
	this.previousWindow = this1;
	var this1 = new Array(header.channel);
	this.finalY = this1;
	var _g = 0;
	var _g1 = header.channel;
	while(_g < _g1) {
		var i = _g++;
		var this1 = this.channelBuffers;
		var this2 = new Array(header.blocksize1);
		var vec = this2;
		this1[i] = vec;
		var this3 = this.previousWindow;
		var this4 = new Array(header.blocksize1 / 2 | 0);
		var vec1 = this4;
		this3[i] = vec1;
		this.finalY[i] = [];
	}
	var this1 = new Array(2);
	this.a = this1;
	var this1 = new Array(2);
	this.b = this1;
	var this1 = new Array(2);
	this.c = this1;
	var this1 = new Array(2);
	this.window = this1;
	var this1 = new Array(2);
	this.bitReverseData = this1;
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = true;
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var header = kha_audio2_ogg_vorbis_data_Header.read(decodeState);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(header,decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	read: function(output,samples,channels,sampleRate,useFloat) {
		var b = this.header.sampleRate;
		if((UInt.toFloat(sampleRate) % UInt.toFloat(b) | 0) != 0) {
			throw haxe_Exception.thrown("Unsupported sampleRate : can't convert " + (this.header.sampleRate == null ? "null" : Std.string(UInt.toFloat(this.header.sampleRate))) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw haxe_Exception.thrown("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var b = this.header.sampleRate;
		var sampleRepeat = UInt.toFloat(sampleRate) / UInt.toFloat(b) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g = this.channelBufferStart;
			var _g1 = this.channelBufferStart + k;
			while(_g < _g1) {
				var j = _g++;
				var _g2 = 0;
				var _g3 = sampleRepeat;
				while(_g2 < _g3) {
					var sr = _g2++;
					var _g4 = 0;
					var _g5 = this.header.channel;
					while(_g4 < _g5) {
						var i = _g4++;
						var _g6 = 0;
						var _g7 = channelRepeat;
						while(_g6 < _g7) {
							var cr = _g6++;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output.setFloat32(index * 4,value,true);
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g = n;
		var _g1 = len;
		while(_g < _g1) {
			var j = _g++;
			var _g2 = 0;
			var _g3 = sampleRepeat;
			while(_g2 < _g3) {
				var sr = _g2++;
				var _g4 = 0;
				var _g5 = this.header.channel;
				while(_g4 < _g5) {
					var i = _g4++;
					var _g6 = 0;
					var _g7 = channelRepeat;
					while(_g6 < _g7) {
						var cr = _g6++;
						if(useFloat) {
							output.setFloat32(index * 4,0,true);
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(UInt.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(UInt.toFloat(endOffset - startOffset) / UInt.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					probe = attempts >= 8 ? probe2 : UInt.gt(probe2,probe) ? probe + (probe2 - probe >>> 1) : probe2 + (probe - probe2 >>> 1);
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				var _g = this.decodeState.findPage(seekFunc,inputLength);
				switch(_g._hx_index) {
				case 0:
					var _g1 = _g.end;
					var _g2 = _g.last;
					break;
				case 1:
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g = 0;
			var _g1 = this.header.channel;
			while(_g < _g1) {
				var i = _g++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g2 = 0;
				var _g3 = n;
				while(_g2 < _g3) {
					var j = _g2++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			var pw = this.previousWindow[i];
			var cb = this.channelBuffers[i];
			var _g2 = 0;
			var _g3 = len - right;
			while(_g2 < _g3) {
				var j = _g2++;
				pw[j] = cb[right + j];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = this.a;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this1 = this.b;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this1 = this.c;
		var this2 = new Array(n4);
		this1[bs] = this2;
		var this1 = this.window;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this1 = this.bitReverseData;
		var this2 = new Array(n8);
		this1[bs] = this2;
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = new Array(n2);
		var buf2 = this1;
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		var eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var u = buffer;
		var v = buf2;
		var aaOffset = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset >= 0) {
			var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			var v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset + 4] - v40_20 * a[aaOffset + 5];
			u[dOffset1] = v40_20 * a[aaOffset + 4] + v41_21 * a[aaOffset + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset] - v40_20 * a[aaOffset + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset] + v41_21 * a[aaOffset + 1];
			aaOffset -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
			u[eeOffset0] += u[eeOffset2];
			u[eeOffset0 + (-1)] += u[eeOffset2 + (-1)];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
			k01_21 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
			u[eeOffset0 + (-2)] += u[eeOffset2 + (-2)];
			u[eeOffset0 + (-3)] += u[eeOffset2 + (-3)];
			u[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
			k01_21 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
			u[eeOffset0 + (-4)] += u[eeOffset2 + (-4)];
			u[eeOffset0 + (-5)] += u[eeOffset2 + (-5)];
			u[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
			k01_21 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
			u[eeOffset0 + (-6)] += u[eeOffset2 + (-6)];
			u[eeOffset0 + (-7)] += u[eeOffset2 + (-7)];
			u[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off = n2 - 1 - n4;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
			u[eeOffset0] += u[eeOffset2];
			u[eeOffset0 + (-1)] += u[eeOffset2 + (-1)];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
			k01_21 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
			u[eeOffset0 + (-2)] += u[eeOffset2 + (-2)];
			u[eeOffset0 + (-3)] += u[eeOffset2 + (-3)];
			u[eeOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
			k01_21 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
			u[eeOffset0 + (-4)] += u[eeOffset2 + (-4)];
			u[eeOffset0 + (-5)] += u[eeOffset2 + (-5)];
			u[eeOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
			k01_21 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
			u[eeOffset0 + (-6)] += u[eeOffset2 + (-6)];
			u[eeOffset0 + (-7)] += u[eeOffset2 + (-7)];
			u[eeOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset = 0;
		var eOffset0 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i = (n >> 5 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eOffset0] - u[eOffset2];
			var k01_21 = u[eOffset0 + (-1)] - u[eOffset2 + (-1)];
			u[eOffset0] += u[eOffset2];
			u[eOffset0 + (-1)] += u[eOffset2 + (-1)];
			u[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-2)] - u[eOffset2 + (-2)];
			k01_21 = u[eOffset0 + (-3)] - u[eOffset2 + (-3)];
			u[eOffset0 + (-2)] += u[eOffset2 + (-2)];
			u[eOffset0 + (-3)] += u[eOffset2 + (-3)];
			u[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-4)] - u[eOffset2 + (-4)];
			k01_21 = u[eOffset0 + (-5)] - u[eOffset2 + (-5)];
			u[eOffset0 + (-4)] += u[eOffset2 + (-4)];
			u[eOffset0 + (-5)] += u[eOffset2 + (-5)];
			u[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-6)] - u[eOffset2 + (-6)];
			k01_21 = u[eOffset0 + (-7)] - u[eOffset2 + (-7)];
			u[eOffset0 + (-6)] += u[eOffset2 + (-6)];
			u[eOffset0 + (-7)] += u[eOffset2 + (-7)];
			u[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += 16;
		}
		var d0 = n2 - 1 - n8;
		var aOffset = 0;
		var eOffset0 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i = (n >> 5 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eOffset0] - u[eOffset2];
			var k01_21 = u[eOffset0 + (-1)] - u[eOffset2 + (-1)];
			u[eOffset0] += u[eOffset2];
			u[eOffset0 + (-1)] += u[eOffset2 + (-1)];
			u[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-2)] - u[eOffset2 + (-2)];
			k01_21 = u[eOffset0 + (-3)] - u[eOffset2 + (-3)];
			u[eOffset0 + (-2)] += u[eOffset2 + (-2)];
			u[eOffset0 + (-3)] += u[eOffset2 + (-3)];
			u[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-4)] - u[eOffset2 + (-4)];
			k01_21 = u[eOffset0 + (-5)] - u[eOffset2 + (-5)];
			u[eOffset0 + (-4)] += u[eOffset2 + (-4)];
			u[eOffset0 + (-5)] += u[eOffset2 + (-5)];
			u[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-6)] - u[eOffset2 + (-6)];
			k01_21 = u[eOffset0 + (-7)] - u[eOffset2 + (-7)];
			u[eOffset0 + (-6)] += u[eOffset2 + (-6)];
			u[eOffset0 + (-7)] += u[eOffset2 + (-7)];
			u[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += 16;
		}
		var d0 = n2 - 1 - n8 * 2;
		var aOffset = 0;
		var eOffset0 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i = (n >> 5 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eOffset0] - u[eOffset2];
			var k01_21 = u[eOffset0 + (-1)] - u[eOffset2 + (-1)];
			u[eOffset0] += u[eOffset2];
			u[eOffset0 + (-1)] += u[eOffset2 + (-1)];
			u[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-2)] - u[eOffset2 + (-2)];
			k01_21 = u[eOffset0 + (-3)] - u[eOffset2 + (-3)];
			u[eOffset0 + (-2)] += u[eOffset2 + (-2)];
			u[eOffset0 + (-3)] += u[eOffset2 + (-3)];
			u[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-4)] - u[eOffset2 + (-4)];
			k01_21 = u[eOffset0 + (-5)] - u[eOffset2 + (-5)];
			u[eOffset0 + (-4)] += u[eOffset2 + (-4)];
			u[eOffset0 + (-5)] += u[eOffset2 + (-5)];
			u[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-6)] - u[eOffset2 + (-6)];
			k01_21 = u[eOffset0 + (-7)] - u[eOffset2 + (-7)];
			u[eOffset0 + (-6)] += u[eOffset2 + (-6)];
			u[eOffset0 + (-7)] += u[eOffset2 + (-7)];
			u[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += 16;
		}
		var d0 = n2 - 1 - n8 * 3;
		var aOffset = 0;
		var eOffset0 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i = (n >> 5 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eOffset0] - u[eOffset2];
			var k01_21 = u[eOffset0 + (-1)] - u[eOffset2 + (-1)];
			u[eOffset0] += u[eOffset2];
			u[eOffset0 + (-1)] += u[eOffset2 + (-1)];
			u[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-2)] - u[eOffset2 + (-2)];
			k01_21 = u[eOffset0 + (-3)] - u[eOffset2 + (-3)];
			u[eOffset0 + (-2)] += u[eOffset2 + (-2)];
			u[eOffset0 + (-3)] += u[eOffset2 + (-3)];
			u[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-4)] - u[eOffset2 + (-4)];
			k01_21 = u[eOffset0 + (-5)] - u[eOffset2 + (-5)];
			u[eOffset0 + (-4)] += u[eOffset2 + (-4)];
			u[eOffset0 + (-5)] += u[eOffset2 + (-5)];
			u[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 16;
			k00_20 = u[eOffset0 + (-6)] - u[eOffset2 + (-6)];
			k01_21 = u[eOffset0 + (-7)] - u[eOffset2 + (-7)];
			u[eOffset0 + (-6)] += u[eOffset2 + (-6)];
			u[eOffset0 + (-7)] += u[eOffset2 + (-7)];
			u[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			eOffset0 -= 8;
			eOffset2 -= 8;
			aOffset += 16;
		}
		var _g = 2;
		var _g1 = ld - 3 >> 1;
		while(_g < _g1) {
			var l = _g++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g2 = 0;
			var _g3 = lim;
			while(_g2 < _g3) {
				var i = _g2++;
				var d0 = n2 - 1 - k0 * i;
				var k1 = 1 << l + 3;
				var aOffset = 0;
				var eOffset0 = d0;
				var eOffset2 = d0 + -k0_2;
				var i1 = (n >> l + 4 >> 2) + 1;
				while(--i1 > 0) {
					var k00_20 = u[eOffset0] - u[eOffset2];
					var k01_21 = u[eOffset0 + (-1)] - u[eOffset2 + (-1)];
					u[eOffset0] += u[eOffset2];
					u[eOffset0 + (-1)] += u[eOffset2 + (-1)];
					u[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-1)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-2)] - u[eOffset2 + (-2)];
					k01_21 = u[eOffset0 + (-3)] - u[eOffset2 + (-3)];
					u[eOffset0 + (-2)] += u[eOffset2 + (-2)];
					u[eOffset0 + (-3)] += u[eOffset2 + (-3)];
					u[eOffset2 + (-2)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-3)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-4)] - u[eOffset2 + (-4)];
					k01_21 = u[eOffset0 + (-5)] - u[eOffset2 + (-5)];
					u[eOffset0 + (-4)] += u[eOffset2 + (-4)];
					u[eOffset0 + (-5)] += u[eOffset2 + (-5)];
					u[eOffset2 + (-4)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-5)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					aOffset += k1;
					k00_20 = u[eOffset0 + (-6)] - u[eOffset2 + (-6)];
					k01_21 = u[eOffset0 + (-7)] - u[eOffset2 + (-7)];
					u[eOffset0 + (-6)] += u[eOffset2 + (-6)];
					u[eOffset0 + (-7)] += u[eOffset2 + (-7)];
					u[eOffset2 + (-6)] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
					u[eOffset2 + (-7)] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
					eOffset0 -= 8;
					eOffset2 -= 8;
					aOffset += k1;
				}
			}
		}
		var _g = ld - 3 >> 1;
		var _g1 = ld - 6;
		while(_g < _g1) {
			var l = _g++;
			var k0 = n >> l + 2;
			var k1 = 1 << l + 3;
			var k0_2 = k0 >> 1;
			var rlim = n >> l + 6;
			var lim = 1 << l + 1;
			var aOffset = 0;
			var i_off = n2 - 1;
			var r = rlim + 1;
			while(--r > 0) {
				var A0 = a[aOffset];
				var A1 = a[aOffset + 1];
				var A2 = a[aOffset + k1];
				var A3 = a[aOffset + k1 + 1];
				var A4 = a[aOffset + k1 * 2];
				var A5 = a[aOffset + k1 * 2 + 1];
				var A6 = a[aOffset + k1 * 3];
				var A7 = a[aOffset + k1 * 3 + 1];
				var eeOffset0 = i_off;
				var eeOffset2 = i_off + -k0_2;
				var i = lim + 1;
				while(--i > 0) {
					var k00 = u[eeOffset0] - u[eeOffset2];
					var k11 = u[eeOffset0 + (-1)] - u[eeOffset2 + (-1)];
					u[eeOffset0] += u[eeOffset2];
					u[eeOffset0 + (-1)] += u[eeOffset2 + (-1)];
					u[eeOffset2] = k00 * A0 - k11 * A1;
					u[eeOffset2 + (-1)] = k11 * A0 + k00 * A1;
					k00 = u[eeOffset0 + (-2)] - u[eeOffset2 + (-2)];
					k11 = u[eeOffset0 + (-3)] - u[eeOffset2 + (-3)];
					u[eeOffset0 + (-2)] += u[eeOffset2 + (-2)];
					u[eeOffset0 + (-3)] += u[eeOffset2 + (-3)];
					u[eeOffset2 + (-2)] = k00 * A2 - k11 * A3;
					u[eeOffset2 + (-3)] = k11 * A2 + k00 * A3;
					k00 = u[eeOffset0 + (-4)] - u[eeOffset2 + (-4)];
					k11 = u[eeOffset0 + (-5)] - u[eeOffset2 + (-5)];
					u[eeOffset0 + (-4)] += u[eeOffset2 + (-4)];
					u[eeOffset0 + (-5)] += u[eeOffset2 + (-5)];
					u[eeOffset2 + (-4)] = k00 * A4 - k11 * A5;
					u[eeOffset2 + (-5)] = k11 * A4 + k00 * A5;
					k00 = u[eeOffset0 + (-6)] - u[eeOffset2 + (-6)];
					k11 = u[eeOffset0 + (-7)] - u[eeOffset2 + (-7)];
					u[eeOffset0 + (-6)] += u[eeOffset2 + (-6)];
					u[eeOffset0 + (-7)] += u[eeOffset2 + (-7)];
					u[eeOffset2 + (-6)] = k00 * A6 - k11 * A7;
					u[eeOffset2 + (-7)] = k11 * A6 + k00 * A7;
					eeOffset0 -= k0;
					eeOffset2 -= k0;
				}
				aOffset += k1 * 4;
				i_off -= 8;
			}
		}
		var i_off = n2 - 1;
		var A2 = a[n >> 3];
		var zOffset = i_off;
		var baseOffset = i_off - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = u[zOffset];
			var t1 = u[zOffset + (-8)];
			u[zOffset + (-8)] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + (-1)];
			t1 = u[zOffset + (-9)];
			u[zOffset + (-9)] = t0 - t1;
			u[zOffset + (-1)] = t0 + t1;
			t0 = u[zOffset + (-2)];
			t1 = u[zOffset + (-10)];
			var k00 = t0 - t1;
			u[zOffset + (-2)] = t0 + t1;
			t0 = u[zOffset + (-3)];
			t1 = u[zOffset + (-11)];
			var k11 = t0 - t1;
			u[zOffset + (-3)] = t0 + t1;
			u[zOffset + (-10)] = (k00 + k11) * A2;
			u[zOffset + (-11)] = (k11 - k00) * A2;
			t0 = u[zOffset + (-4)];
			t1 = u[zOffset + (-12)];
			k00 = t1 - t0;
			u[zOffset + (-4)] = t0 + t1;
			t0 = u[zOffset + (-5)];
			t1 = u[zOffset + (-13)];
			k11 = t0 - t1;
			u[zOffset + (-5)] = t0 + t1;
			u[zOffset + (-12)] = k11;
			u[zOffset + (-13)] = k00;
			t0 = u[zOffset + (-6)];
			t1 = u[zOffset + (-14)];
			k00 = t1 - t0;
			u[zOffset + (-6)] = t0 + t1;
			t0 = u[zOffset + (-7)];
			t1 = u[zOffset + (-15)];
			k11 = t0 - t1;
			u[zOffset + (-7)] = t0 + t1;
			u[zOffset + (-14)] = (k00 + k11) * A2;
			u[zOffset + (-15)] = (k00 - k11) * A2;
			var t01 = u[zOffset];
			var t11 = u[zOffset + (-4)];
			var k001 = t01 - t11;
			var y0 = t01 + t11;
			t01 = u[zOffset + (-2)];
			t11 = u[zOffset + (-6)];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + (-2)] = y0 - y2;
			var k33 = u[zOffset + (-3)] - u[zOffset + (-7)];
			u[zOffset + (-4)] = k001 + k33;
			u[zOffset + (-6)] = k001 - k33;
			t01 = u[zOffset + (-1)];
			t11 = u[zOffset + (-5)];
			var k111 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = u[zOffset + (-3)] + u[zOffset + (-7)];
			u[zOffset + (-1)] = y1 + y3;
			u[zOffset + (-3)] = y1 - y3;
			u[zOffset + (-5)] = k111 - k22;
			u[zOffset + (-7)] = k111 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = u[zOffset1];
			var t12 = u[zOffset1 + (-4)];
			var k002 = t02 - t12;
			var y01 = t02 + t12;
			t02 = u[zOffset1 + (-2)];
			t12 = u[zOffset1 + (-6)];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + (-2)] = y01 - y21;
			var k331 = u[zOffset1 + (-3)] - u[zOffset1 + (-7)];
			u[zOffset1 + (-4)] = k002 + k331;
			u[zOffset1 + (-6)] = k002 - k331;
			t02 = u[zOffset1 + (-1)];
			t12 = u[zOffset1 + (-5)];
			var k112 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = u[zOffset1 + (-3)] + u[zOffset1 + (-7)];
			u[zOffset1 + (-1)] = y11 + y31;
			u[zOffset1 + (-3)] = y11 - y31;
			u[zOffset1 + (-5)] = k112 - k221;
			u[zOffset1 + (-7)] = k112 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset0 = n4 - 4;
		var dOffset1 = n2 - 4;
		while(dOffset0 >= 0) {
			var k4 = bitReverse[brOffset];
			v[dOffset1 + 3] = u[k4];
			v[dOffset1 + 2] = u[k4 + 1];
			v[dOffset0 + 3] = u[k4 + 2];
			v[dOffset0 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset1 + 1] = u[k4];
			v[dOffset1] = u[k4 + 1];
			v[dOffset0 + 1] = u[k4 + 2];
			v[dOffset0] = u[k4 + 3];
			dOffset0 -= 4;
			dOffset1 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset = 0;
		var eOffset = n2 - 4;
		while(dOffset < eOffset) {
			var a02 = v[dOffset] - v[eOffset + 2];
			var a11 = v[dOffset + 1] + v[eOffset + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = v[dOffset] + v[eOffset + 2];
			var b3 = v[dOffset + 1] - v[eOffset + 3];
			v[dOffset] = b2 + b0;
			v[dOffset + 1] = b3 + b1;
			v[eOffset + 2] = b2 - b0;
			v[eOffset + 3] = b1 - b3;
			a02 = v[dOffset + 2] - v[eOffset];
			a11 = v[dOffset + 3] + v[eOffset + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset + 2] + v[eOffset];
			b3 = v[dOffset + 3] - v[eOffset + 1];
			v[dOffset + 2] = b2 + b0;
			v[dOffset + 3] = b3 + b1;
			v[eOffset] = b2 - b0;
			v[eOffset + 1] = b1 - b3;
			cOffset += 4;
			dOffset += 4;
			eOffset -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset = n2 - 8;
		var dOffset0 = 0;
		var dOffset1 = n2 - 4;
		var dOffset2 = n2;
		var dOffset3 = n - 4;
		while(eOffset >= 0) {
			var p3 = buf2[eOffset + 6] * b[bOffset + 7] - buf2[eOffset + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset + 6] * b[bOffset + 6] - buf2[eOffset + 7] * b[bOffset + 7];
			buffer[dOffset0] = p3;
			buffer[dOffset1 + 3] = -p3;
			buffer[dOffset2] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset + 4] * b[bOffset + 5] - buf2[eOffset + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset + 4] * b[bOffset + 4] - buf2[eOffset + 5] * b[bOffset + 5];
			buffer[dOffset0 + 1] = p1;
			buffer[dOffset1 + 2] = -p1;
			buffer[dOffset2 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset + 2] * b[bOffset + 3] - buf2[eOffset + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset + 2] * b[bOffset + 2] - buf2[eOffset + 3] * b[bOffset + 3];
			buffer[dOffset0 + 2] = p3;
			buffer[dOffset1 + 1] = -p3;
			buffer[dOffset2 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset] * b[bOffset + 1] - buf2[eOffset + 1] * b[bOffset];
			p0 = -buf2[eOffset] * b[bOffset] - buf2[eOffset + 1] * b[bOffset + 1];
			buffer[dOffset0 + 3] = p1;
			buffer[dOffset1] = -p1;
			buffer[dOffset2 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset -= 8;
			dOffset0 += 4;
			dOffset2 += 4;
			dOffset1 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		var rest = this.decodePacketRest(result);
		return rest;
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			if(this.decodeState.readBits(1) != 0) {
				while(true) {
					var _this = this.decodeState;
					var x;
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						x = -1;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						x = _this.input.readByte();
					}
					_this.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var i = this.decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
		if(i == -1 || i >= this.header.modes.length) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n;
		var prev;
		var next;
		if(m.blockflag) {
			n = this.header.blocksize1;
			prev = this.decodeState.readBits(1);
			next = this.decodeState.readBits(1);
		} else {
			next = 0;
			prev = next;
			n = this.header.blocksize0;
		}
		var windowCenter = n >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n - this.header.blocksize0 >> 2, end : n + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n * 3 - this.header.blocksize0 >> 2, end : n * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n}};
	}
	,decodePacketRest: function(r) {
		var len = 0;
		var m = this.header.modes[r.mode];
		var this1 = new Array(256);
		var zeroChannel = this1;
		var this1 = new Array(256);
		var reallyZeroChannel = this1;
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				if(this.decodeState.readBits(1) != 0) {
					var fy = [];
					var this1 = new Array(256);
					var step2Flag = this1;
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[0] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1);
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[1] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1);
					var _g2 = 0;
					var _g3 = g.partitions;
					while(_g2 < _g3) {
						var j = _g2++;
						var pclass = g.partitionClassList[j];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this = this.decodeState;
							if(_this.validBits < 10) {
								_this.prepHuffman();
							}
							var i1 = c.fastHuffman[_this.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this.acc = _this.acc >>> l;
								_this.validBits -= l;
								if(_this.validBits < 0) {
									_this.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g4 = 0;
						var _g5 = cdim;
						while(_g4 < _g5) {
							var k = _g4++;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp = offset++;
							var tmp1;
							if(book >= 0) {
								var _this1 = this.decodeState;
								var c1 = codebooks[book];
								if(_this1.validBits < 10) {
									_this1.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this1.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this1.acc = _this1.acc >>> l1;
									_this1.validBits -= l1;
									if(_this1.validBits < 0) {
										_this1.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this1.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp1 = val1;
							} else {
								tmp1 = 0;
							}
							fy[tmp] = tmp1;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g6 = 2;
					var _g7 = g.values;
					while(_g6 < _g7) {
						var j1 = _g6++;
						var low = naighbors[j1][0];
						var high = naighbors[j1][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var adx = xlist[high] - x0;
						var err = Math.abs(dy) * (xlist[j1] - x0);
						var off = err / adx | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j1];
						var highroom = range - lowroom;
						var room = highroom < lowroom ? highroom * 2 : lowroom * 2;
						if(val2 != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j1] = true;
							if(val2 >= room) {
								if(highroom > lowroom) {
									fy[j1] = val2 - lowroom + lowroom;
								} else {
									fy[j1] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j1] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j1] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j1] = false;
							fy[j1] = lowroom;
						}
					}
					var _g8 = 0;
					var _g9 = g.values;
					while(_g8 < _g9) {
						var j2 = _g8++;
						if(!step2Flag[j2]) {
							fy[j2] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			reallyZeroChannel[i] = zeroChannel[i];
		}
		var _g = 0;
		var _g1 = map.couplingSteps;
		while(_g < _g1) {
			var i = _g++;
			if(!zeroChannel[map.chan[i].magnitude] || !zeroChannel[map.chan[i].angle]) {
				zeroChannel[map.chan[i].magnitude] = zeroChannel[map.chan[i].angle] = false;
			}
		}
		var _g = 0;
		var _g1 = map.submaps;
		while(_g < _g1) {
			var i = _g++;
			var this1 = new Array(this.header.channel);
			var residueBuffers = this1;
			var this2 = new Array(256);
			var doNotDecode = this2;
			var ch = 0;
			var _g2 = 0;
			var _g3 = this.header.channel;
			while(_g2 < _g3) {
				var j = _g2++;
				if(map.chan[j].mux == i) {
					if(zeroChannel[j]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j];
					}
					++ch;
				}
			}
			var r1 = map.submapResidue[i];
			var residue = this.header.residueConfig[r1];
			residue.decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i = map.couplingSteps;
		var n2 = n >> 1;
		while(--i >= 0) {
			var m1 = this.channelBuffers[map.chan[i].magnitude];
			var a = this.channelBuffers[map.chan[i].angle];
			var _g = 0;
			var _g1 = n2;
			while(_g < _g1) {
				var j = _g++;
				var a2;
				var m2;
				if(m1[j] > 0) {
					if(a[j] > 0) {
						m2 = m1[j];
						a2 = m1[j] - a[j];
					} else {
						a2 = m1[j];
						m2 = m1[j] + a[j];
					}
				} else if(a[j] > 0) {
					m2 = m1[j];
					a2 = m1[j] + a[j];
				} else {
					a2 = m1[j];
					m2 = m1[j] - a[j];
				}
				m1[j] = m2;
				a[j] = a2;
			}
		}
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			if(reallyZeroChannel[i]) {
				var _g2 = 0;
				var _g3 = n2;
				while(_g2 < _g3) {
					var j = _g2++;
					this.channelBuffers[i][j] = 0;
				}
			} else {
				map.doFloor(this.header.floorConfig,i,n,this.channelBuffers[i],this.finalY[i],null);
			}
		}
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			this.inverseMdct(this.channelBuffers[i],n,m.blockflag);
		}
		var _this = this.decodeState;
		while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
			_this.bytesInSeg--;
			_this.inputPosition += 1;
			_this.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = true;
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(UInt.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,$window) {
	var n2 = n >> 1;
	var _g = 0;
	var _g1 = n2;
	while(_g < _g1) {
		var i = _g++;
		$window[i] = Math.sin(1.57079632679489656 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g = 0;
	var _g1 = n8;
	while(_g < _g1) {
		var i = _g++;
		var n = i;
		n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
		n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
		n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
		n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
		rev[i] = (n >>> 16 | n << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g = 0;
	var _g1 = n4;
	while(_g < _g1) {
		var k = _g++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k2 = 0;
	var _g = 0;
	var _g1 = n8;
	while(_g < _g1) {
		var k = _g++;
		cf[k2] = Math.cos(2 * (k2 + 1) * 3.14159265358979323846264 / n);
		cf[k2 + 1] = -Math.sin(2 * (k2 + 1) * 3.14159265358979323846264 / n);
		k2 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		var this1 = new Array(32);
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = this1;
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			var this1 = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable;
			var this2 = new Array(64);
			this1[i] = this2;
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var x = x0;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		sy = dy < 0 ? base - 1 : base + 1;
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	output[x] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	var _g = x + 1;
	var _g1 = x1;
	while(_g < _g1) {
		var i = _g++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		output[i] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = true;
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	if(decodeState.readBits(8) != 66 || decodeState.readBits(8) != 67 || decodeState.readBits(8) != 86) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x = decodeState.readBits(8);
	c.dimensions = (decodeState.readBits(8) << 8) + x;
	var x = decodeState.readBits(8);
	var y = decodeState.readBits(8);
	c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x;
	var ordered = decodeState.readBits(1);
	c.sparse = ordered != 0 ? false : decodeState.readBits(1) != 0;
	var this1 = new Array(c.entries);
	var lengths = this1;
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength = decodeState.readBits(5) + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = decodeState.readBits(limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0);
			if(currentEntry + n > c.entries) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				lengths[currentEntry + i] = currentLength;
			}
			currentEntry += n;
			++currentLength;
		}
	} else {
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var j = _g++;
			var present = c.sparse ? decodeState.readBits(1) : 1;
			if(present != 0) {
				lengths[j] = decodeState.readBits(5) + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp;
	if(c.sparse) {
		tmp = total;
	} else {
		var sortedCount = 0;
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var j = _g++;
			var l = lengths[j];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp = sortedCount;
	}
	c.sortedEntries = tmp;
	var values = null;
	if(!c.sparse) {
		var this1 = new Array(c.entries);
		c.codewords = this1;
	} else {
		if(c.sortedEntries != 0) {
			var this1 = new Array(c.sortedEntries);
			c.codewordLengths = this1;
			var this1 = new Array(c.entries);
			c.codewords = this1;
			var this1 = new Array(c.entries);
			values = this1;
		}
		var size = c.entries + 64 * c.sortedEntries;
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		var this1 = new Array(c.sortedEntries);
		c.sortedValues = this1;
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		values = null;
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	c.lookupType = decodeState.readBits(4);
	if(c.lookupType > 2) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x = decodeState.readBits(32);
		var mantissa = UInt.toFloat(x & 2097151);
		var sign = x & -2147483648;
		var exp = (x & 2145386496) >>> 21;
		var res = sign != 0 ? -mantissa : mantissa;
		c.minimumValue = res * Math.pow(2,exp - 788);
		var x = decodeState.readBits(32);
		var mantissa = UInt.toFloat(x & 2097151);
		var sign = x & -2147483648;
		var exp = (x & 2145386496) >>> 21;
		var res = sign != 0 ? -mantissa : mantissa;
		c.deltaValue = res * Math.pow(2,exp - 788);
		c.valueBits = decodeState.readBits(4) + 1;
		c.sequenceP = decodeState.readBits(1) != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var this1 = new Array(c.lookupValues);
		var mults = this1;
		var _g = 0;
		var _g1 = c.lookupValues;
		while(_g < _g1) {
			var j = _g++;
			var q = decodeState.readBits(c.valueBits);
			if(q == -1) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j] = q;
		}
		var this1 = new Array(c.lookupValues);
		c.multiplicands = this1;
		var _g = 0;
		var _g1 = c.lookupValues;
		while(_g < _g1) {
			var j = _g++;
			c.multiplicands[j] = mults[j] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g = 1;
			var _g1 = c.lookupValues;
			while(_g < _g1) {
				var j = _g++;
				c.multiplicands[j] = c.multiplicands[j - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	computeCodewords: function(len,n,values) {
		var this1 = new Array(32);
		var available = this1;
		available[0] = 0;
		available[1] = 0;
		available[2] = 0;
		available[3] = 0;
		available[4] = 0;
		available[5] = 0;
		available[6] = 0;
		available[7] = 0;
		available[8] = 0;
		available[9] = 0;
		available[10] = 0;
		available[11] = 0;
		available[12] = 0;
		available[13] = 0;
		available[14] = 0;
		available[15] = 0;
		available[16] = 0;
		available[17] = 0;
		available[18] = 0;
		available[19] = 0;
		available[20] = 0;
		available[21] = 0;
		available[22] = 0;
		available[23] = 0;
		available[24] = 0;
		available[25] = 0;
		available[26] = 0;
		available[27] = 0;
		available[28] = 0;
		available[29] = 0;
		available[30] = 0;
		available[31] = 0;
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			return true;
		}
		var m = 0;
		var count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count] = huffCode;
				this.codewordLengths[count] = len[i];
				values[count] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g = 0;
			var _g1 = this.entries;
			while(_g < _g1) {
				var i = _g++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
		} else {
			var _g = 0;
			var _g1 = this.sortedEntries;
			while(_g < _g1) {
				var i = _g++;
				var n = this.codewords[i];
				n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
				n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
				n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
				n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
				this.sortedCodewords[i] = n >>> 16 | n << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var len = this.sparse ? this.sortedEntries : this.entries;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			var huffLen = this.sparse ? lengths[values[i]] : lengths[i];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n = this.codewords[i];
				n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
				n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
				n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
				n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
				var code = n >>> 16 | n << 16;
				var x = 0;
				var n1 = this.sortedEntries;
				while(n1 > 1) {
					var m = x + (n1 >> 1);
					if(UInt.gte(code,this.sortedCodewords[m])) {
						x = m;
						n1 -= n1 >> 1;
					} else {
						n1 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		var this1 = new Array(1024);
		this.fastHuffman = this1;
		this.fastHuffman[0] = -1;
		var _g = 0;
		var _g1 = 1024;
		while(_g < _g1) {
			var i = _g++;
			this.fastHuffman[i] = -1;
		}
		var len = this.sparse ? this.sortedEntries : this.entries;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			if(this.codewordLengths[i] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i;
					z += 1 << this.codewordLengths[i];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var off = UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0;
				var val = multiplicands[off] + last;
				output[offset + i] += val;
				if(sequenceP) {
					last = val + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var val = multiplicands[z + i] + last;
				output[offset + i] += val;
				last = val + minimumValue;
			}
		} else {
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				output[offset + i] += multiplicands[z + i] + last;
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var off = UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0;
				var val = multiplicands[off] + last;
				output[offset + i * step] += val;
				if(sequenceP) {
					last = val;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			var val = multiplicands[z + i] + last;
			output[offset + i * step] += val;
			if(sequenceP) {
				last = val;
			}
		}
		return true;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g = 0;
					var _g1 = effective;
					while(_g < _g1) {
						var i1 = _g++;
						var off = UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0;
						var val1 = multiplicands[off] + last;
						residueBuffers[cInter][pInter] += val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g2 = 0;
					var _g3 = effective;
					while(_g2 < _g3) {
						var i2 = _g2++;
						var off1 = UInt.toFloat(z / div | 0) % UInt.toFloat(lookupValues) | 0;
						var val2 = multiplicands[off1] + last;
						residueBuffers[cInter][pInter] += val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g4 = 0;
					var _g5 = effective;
					while(_g4 < _g5) {
						var i3 = _g4++;
						var val3 = multiplicands[z + i3] + last;
						residueBuffers[cInter][pInter] += val3;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val3;
					}
				} else {
					var _g6 = 0;
					var _g7 = effective;
					while(_g6 < _g7) {
						var i4 = _g6++;
						var val4 = multiplicands[z + i4] + last;
						residueBuffers[cInter][pInter] += val4;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g = 0;
			var _g1 = step;
			while(_g < _g1) {
				var k = _g++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k = 0;
			while(k < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k)) {
					return false;
				}
				k += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = true;
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this.data.h,key)) {
			this.data.h[key].push(value);
		} else {
			var v = [value];
			this.data.h[key] = v;
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this.data.h,key)) {
			return this.data.h[key][0];
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
	,__properties__: {get_loopLength:"get_loopLength",get_loopStart:"get_loopStart"}
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	floor.type = decodeState.readBits(16);
	if(floor.type > 1) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		g.order = decodeState.readBits(8);
		g.rate = decodeState.readBits(16);
		g.barkMapSize = decodeState.readBits(16);
		g.amplitudeBits = decodeState.readBits(6);
		g.amplitudeOffset = decodeState.readBits(8);
		g.numberOfBooks = decodeState.readBits(4) + 1;
		var _g = 0;
		var _g1 = g.numberOfBooks;
		while(_g < _g1) {
			var j = _g++;
			g.bookList[j] = decodeState.readBits(8);
		}
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		g.partitions = decodeState.readBits(5);
		var this1 = new Array(g.partitions);
		g.partitionClassList = this1;
		var _g = 0;
		var _g1 = g.partitions;
		while(_g < _g1) {
			var j = _g++;
			g.partitionClassList[j] = decodeState.readBits(4);
			if(g.partitionClassList[j] > maxClass) {
				maxClass = g.partitionClassList[j];
			}
		}
		var this1 = new Array(maxClass + 1);
		g.classDimensions = this1;
		var this1 = new Array(maxClass + 1);
		g.classMasterbooks = this1;
		var this1 = new Array(maxClass + 1);
		g.classSubclasses = this1;
		var this1 = new Array(maxClass + 1);
		g.subclassBooks = this1;
		var _g = 0;
		var _g1 = maxClass + 1;
		while(_g < _g1) {
			var j = _g++;
			g.classDimensions[j] = decodeState.readBits(3) + 1;
			g.classSubclasses[j] = decodeState.readBits(2);
			if(g.classSubclasses[j] != 0) {
				g.classMasterbooks[j] = decodeState.readBits(8);
				if(g.classMasterbooks[j] >= codebooks.length) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g.classSubclasses[j];
			var this1 = g.subclassBooks;
			var this2 = new Array(kl);
			this1[j] = this2;
			var _g2 = 0;
			var _g3 = kl;
			while(_g2 < _g3) {
				var k = _g2++;
				g.subclassBooks[j][k] = decodeState.readBits(8) - 1;
				if(g.subclassBooks[j][k] >= codebooks.length) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		g.floor1Multiplier = decodeState.readBits(2) + 1;
		g.rangebits = decodeState.readBits(4);
		var this1 = new Array(250);
		g.xlist = this1;
		g.xlist[0] = 0;
		g.xlist[1] = 1 << g.rangebits;
		g.values = 2;
		var _g = 0;
		var _g1 = g.partitions;
		while(_g < _g1) {
			var j = _g++;
			var c = g.partitionClassList[j];
			var _g2 = 0;
			var _g3 = g.classDimensions[c];
			while(_g2 < _g3) {
				var k = _g2++;
				g.xlist[g.values] = decodeState.readBits(g.rangebits);
				g.values++;
			}
		}
		var _g = 0;
		var _g1 = g.values;
		while(_g < _g1) {
			var j = _g++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j].x = g.xlist[j];
			p[j].y = j;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		var this1 = new Array(g.values);
		g.sortedOrder = this1;
		var _g = 0;
		var _g1 = g.values;
		while(_g < _g1) {
			var j = _g++;
			g.sortedOrder[j] = p[j].y;
		}
		var this1 = new Array(g.values);
		g.neighbors = this1;
		var _g = 2;
		var _g1 = g.values;
		while(_g < _g1) {
			var j = _g++;
			var x = g.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g2 = 0;
			var _g3 = j;
			while(_g2 < _g3) {
				var i = _g2++;
				if(x[i] > low && x[i] < x[j]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j]) {
					phigh = i;
					high = x[i];
				}
			}
			var ne_low = plow;
			var ne_high = phigh;
			var this1 = g.neighbors;
			var this2 = new Array(g.values);
			this1[j] = this2;
			g.neighbors[j][0] = ne_low;
			g.neighbors[j][1] = ne_high;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = true;
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[0] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[1] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[2] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[3] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[4] = x;
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[5] = x;
	if(header.toString() != "vorbis") {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header.channel = decodeState.input.readByte();
	if(header.channel == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header.channel > 16) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header.sampleRate = decodeState.input.readInt32();
	if(header.sampleRate == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x = decodeState.input.readByte();
	var log0 = x & 15;
	var log1 = x >> 4;
	header.blocksize0 = 1 << log0;
	header.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x = decodeState.input.readByte();
	if((x & 1) == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	var vendorLength = packetInput.readInt32();
	header.vendor = packetInput.readString(vendorLength);
	header.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g = 0;
	var _g1 = commentCount;
	while(_g < _g1) {
		var i = _g++;
		var n = packetInput.readInt32();
		var str = packetInput.readString(n);
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	var x1 = packetInput.readByte();
	if((x1 & 1) == 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x1 != 5) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new haxe_io_Bytes(new ArrayBuffer(6));
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[0] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[1] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[2] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[3] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[4] = x1;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header1.b[5] = x1;
	if(header1.toString() != "vorbis") {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount = decodeState.readBits(8) + 1;
	var this1 = new Array(codebookCount);
	header.codebooks = this1;
	var _g = 0;
	var _g1 = codebookCount;
	while(_g < _g1) {
		var i = _g++;
		header.codebooks[i] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	}
	x = decodeState.readBits(6) + 1;
	var _g = 0;
	var _g1 = x;
	while(_g < _g1) {
		var i = _g++;
		if(decodeState.readBits(16) != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount = decodeState.readBits(6) + 1;
	var this1 = new Array(floorCount);
	header.floorConfig = this1;
	var _g = 0;
	var _g1 = floorCount;
	while(_g < _g1) {
		var i = _g++;
		header.floorConfig[i] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header.codebooks);
	}
	var residueCount = decodeState.readBits(6) + 1;
	var this1 = new Array(residueCount);
	header.residueConfig = this1;
	var _g = 0;
	var _g1 = residueCount;
	while(_g < _g1) {
		var i = _g++;
		header.residueConfig[i] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header.codebooks);
	}
	var mappingCount = decodeState.readBits(6) + 1;
	var this1 = new Array(mappingCount);
	header.mapping = this1;
	var _g = 0;
	var _g1 = mappingCount;
	while(_g < _g1) {
		var i = _g++;
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header.channel);
		header.mapping[i] = map;
		var _g2 = 0;
		var _g3 = map.submaps;
		while(_g2 < _g3) {
			var j = _g2++;
			if(map.submapFloor[j] >= header.floorConfig.length) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header.residueConfig.length) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount = decodeState.readBits(6) + 1;
	var this1 = new Array(modeCount);
	header.modes = this1;
	var _g = 0;
	var _g1 = modeCount;
	while(_g < _g1) {
		var i = _g++;
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header.modes[i] = mode;
		if(mode.mapping >= header.mapping.length) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = true;
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = true;
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType = decodeState.readBits(16);
	if(mappingType != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	var this1 = new Array(channels);
	m.chan = this1;
	var _g = 0;
	var _g1 = channels;
	while(_g < _g1) {
		var j = _g++;
		m.chan[j] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	}
	if(decodeState.readBits(1) != 0) {
		m.submaps = decodeState.readBits(4) + 1;
	} else {
		m.submaps = 1;
	}
	if(decodeState.readBits(1) != 0) {
		m.couplingSteps = decodeState.readBits(8) + 1;
		var _g = 0;
		var _g1 = m.couplingSteps;
		while(_g < _g1) {
			var k = _g++;
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].magnitude = decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
			var n1 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].angle = decodeState.readBits(n1 < 16384 ? n1 < 16 ? log2_41[n1] : n1 < 512 ? 5 + log2_41[n1 >> 5] : 10 + log2_41[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_41[n1 >> 15] : 20 + log2_41[n1 >> 20] : n1 < 536870912 ? 25 + log2_41[n1 >> 25] : n1 < -2147483648 ? 30 + log2_41[n1 >> 30] : 0);
			if(m.chan[k].magnitude >= channels) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	if(decodeState.readBits(2) != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g = 0;
		var _g1 = channels;
		while(_g < _g1) {
			var j = _g++;
			m.chan[j].mux = decodeState.readBits(4);
			if(m.chan[j].mux >= m.submaps) {
				throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g = 0;
		var _g1 = channels;
		while(_g < _g1) {
			var j = _g++;
			m.chan[j].mux = 0;
		}
	}
	var this1 = new Array(m.submaps);
	m.submapFloor = this1;
	var this1 = new Array(m.submaps);
	m.submapResidue = this1;
	var _g = 0;
	var _g1 = m.submaps;
	while(_g < _g1) {
		var j = _g++;
		decodeState.readBits(8);
		m.submapFloor[j] = decodeState.readBits(8);
		m.submapResidue[j] = decodeState.readBits(8);
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var s = this.chan[i].mux;
		var floor;
		var floor = floors[this.submapFloor[s]];
		if(floor.type == 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g = 1;
			var _g1 = g.values;
			while(_g < _g1) {
				var q = _g++;
				var j = g.sortedOrder[q];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g = lx;
				var _g1 = n2;
				while(_g < _g1) {
					var j = _g++;
					target[j] *= kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = true;
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = true;
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	m.blockflag = decodeState.readBits(1) != 0;
	m.windowtype = decodeState.readBits(16);
	m.transformtype = decodeState.readBits(16);
	m.mapping = decodeState.readBits(8);
	if(m.windowtype != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = true;
kha_audio2_ogg_vorbis_data_Page.prototype = {
	clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "kha/audio2/ogg/vorbis/data/Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = true;
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = true;
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxEnums["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__:true,__constructs__:null
	,NEED_MORE_DATA: {_hx_name:"NEED_MORE_DATA",_hx_index:0,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_API_MIXING: {_hx_name:"INVALID_API_MIXING",_hx_index:1,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OUTOFMEM: {_hx_name:"OUTOFMEM",_hx_index:2,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FEATURE_NOT_SUPPORTED: {_hx_name:"FEATURE_NOT_SUPPORTED",_hx_index:3,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,TOO_MANY_CHANNELS: {_hx_name:"TOO_MANY_CHANNELS",_hx_index:4,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FILE_OPEN_FAILURE: {_hx_name:"FILE_OPEN_FAILURE",_hx_index:5,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_WITHOUT_LENGTH: {_hx_name:"SEEK_WITHOUT_LENGTH",_hx_index:6,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,UNEXPECTED_EOF: {_hx_name:"UNEXPECTED_EOF",_hx_index:7,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_INVALID: {_hx_name:"SEEK_INVALID",_hx_index:8,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_SETUP: {_hx_name:"INVALID_SETUP",_hx_index:9,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM: {_hx_name:"INVALID_STREAM",_hx_index:10,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,MISSING_CAPTURE_PATTERN: {_hx_name:"MISSING_CAPTURE_PATTERN",_hx_index:11,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM_STRUCTURE_VERSION: {_hx_name:"INVALID_STREAM_STRUCTURE_VERSION",_hx_index:12,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CONTINUED_PACKET_FLAG_INVALID: {_hx_name:"CONTINUED_PACKET_FLAG_INVALID",_hx_index:13,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INCORRECT_STREAM_SERIAL_NUMBER: {_hx_name:"INCORRECT_STREAM_SERIAL_NUMBER",_hx_index:14,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_FIRST_PAGE: {_hx_name:"INVALID_FIRST_PAGE",_hx_index:15,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,BAD_PACKET_TYPE: {_hx_name:"BAD_PACKET_TYPE",_hx_index:16,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CANT_FIND_LAST_PAGE: {_hx_name:"CANT_FIND_LAST_PAGE",_hx_index:17,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_FAILED: {_hx_name:"SEEK_FAILED",_hx_index:18,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OTHER: {_hx_name:"OTHER",_hx_index:19,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
};
kha_audio2_ogg_vorbis_data_ReaderErrorType.__constructs__ = [kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING,kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM,kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE,kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH,kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF,kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER,kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE,kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER];
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = true;
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	r.type = decodeState.readBits(16);
	if(r.type > 2) {
		throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var this1 = new Array(64);
	var residueCascade = this1;
	r.begin = decodeState.readBits(24);
	r.end = decodeState.readBits(24);
	r.partSize = decodeState.readBits(24) + 1;
	var classifications = r.classifications = decodeState.readBits(6) + 1;
	r.classbook = decodeState.readBits(8);
	var _g = 0;
	var _g1 = r.classifications;
	while(_g < _g1) {
		var j = _g++;
		var highBits = 0;
		var lowBits = decodeState.readBits(3);
		if(decodeState.readBits(1) != 0) {
			highBits = decodeState.readBits(5);
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	var this1 = new Array(r.classifications);
	r.residueBooks = this1;
	var _g = 0;
	var _g1 = r.classifications;
	while(_g < _g1) {
		var j = _g++;
		var this1 = r.residueBooks;
		var this2 = new Array(8);
		this1[j] = this2;
		var _g2 = 0;
		while(_g2 < 8) {
			var k = _g2++;
			if((residueCascade[j] & 1 << k) != 0) {
				r.residueBooks[j][k] = decodeState.readBits(8);
				if(r.residueBooks[j][k] >= codebooks.length) {
					throw haxe_Exception.thrown(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	var this1 = new Array(el);
	r.classdata = this1;
	var _g = 0;
	var _g1 = el;
	while(_g < _g1) {
		var j = _g++;
		var temp = j;
		var k = classwords;
		var this1 = r.classdata;
		var this2 = new Array(classwords);
		var cd = this1[j] = this2;
		while(--k >= 0) {
			cd[k] = temp % classifications;
			temp = temp / classifications | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var nRead = this.end - this.begin;
		var partSize = this.partSize;
		var partRead = UInt.toFloat(nRead) / UInt.toFloat(partSize) | 0;
		var this1 = new Array(header.channel * partRead + 1);
		var classifications = this1;
		var _g = 0;
		var _g1 = ch;
		while(_g < _g1) {
			var i = _g++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g2 = 0;
				var _g3 = buffer.length;
				while(_g2 < _g3) {
					var j = _g2++;
					buffer[j] = 0;
				}
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g = 0;
			var _g1 = ch;
			while(_g < _g1) {
				var j = _g++;
				if(!doNotDecode[j]) {
					break;
				} else if(j == ch - 1) {
					return;
				}
			}
			var _g = 0;
			while(_g < 8) {
				var pass = _g++;
				var pcount = 0;
				var classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i >= 0) {
								var l = c.codewordLengths[i];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i1 = classwords;
							while(--i1 >= 0) {
								classifications[i1 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g1 = 0;
						var _g2 = classwords;
						while(_g1 < _g2) {
							var i2 = _g1++;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var c1 = classifications[pcount];
							var b = this.residueBooks[c1][pass];
							if(b >= 0) {
								var book = codebooks[b];
								var result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var z2 = this.begin + pcount * partSize;
						var cInter1 = 0;
						var pInter1 = z2;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i3 = c2.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i3 >= 0) {
								var l1 = c2.codewordLengths[i3];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i3;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val1 = c2.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i4 = classwords;
							while(--i4 >= 0) {
								classifications[i4 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g3 = 0;
						var _g4 = classwords;
						while(_g3 < _g4) {
							var i5 = _g3++;
							if(pcount >= partRead) {
								break;
							}
							var z3 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var book1 = codebooks[b1];
								var result1 = book1.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z3 = z3 + partSize;
								cInter1 = 0;
								pInter1 = z3;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z4 = this.begin + pcount * partSize;
						var cInter2 = UInt.toFloat(z4) % UInt.toFloat(ch) | 0;
						var pInter2 = UInt.toFloat(z4) / UInt.toFloat(ch) | 0;
						if(pass == 0) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i6 = c3.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i6 >= 0) {
								var l2 = c3.codewordLengths[i6];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i6;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val2 = c3.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i7 = classwords;
							while(--i7 >= 0) {
								classifications[i7 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g5 = 0;
						var _g6 = classwords;
						while(_g5 < _g6) {
							var i8 = _g5++;
							if(pcount >= partRead) {
								break;
							}
							var z5 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var book2 = codebooks[b2];
								var result2 = book2.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z5 = z5 + partSize;
								cInter2 = UInt.toFloat(z5) % UInt.toFloat(ch) | 0;
								pInter2 = UInt.toFloat(z5) / UInt.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g = 0;
		while(_g < 8) {
			var pass = _g++;
			var pcount = 0;
			var classSet = 0;
			while(pcount < partRead) {
				if(pass == 0) {
					var _g1 = 0;
					var _g2 = ch;
					while(_g1 < _g2) {
						var j = _g1++;
						if(!doNotDecode[j]) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i >= 0) {
								var l = c.codewordLengths[i];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var temp = val;
							if(temp == -1) {
								return;
							}
							var i1 = classwords;
							while(--i1 >= 0) {
								classifications[j * partRead + i1 + pcount] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g3 = 0;
				var _g4 = classwords;
				while(_g3 < _g4) {
					var i2 = _g3++;
					if(pcount >= partRead) {
						break;
					}
					var _g5 = 0;
					var _g6 = ch;
					while(_g5 < _g6) {
						var j1 = _g5++;
						if(!doNotDecode[j1]) {
							var c1 = classifications[j1 * partRead + pcount];
							var b = this.residueBooks[c1][pass];
							if(b >= 0) {
								var target = residueBuffers[j1];
								var offset = this.begin + pcount * partSize;
								var n = partSize;
								var book = codebooks[b];
								if(!book.residueDecode(decodeState,target,offset,n,this.type)) {
									return;
								}
							}
						}
					}
					++pcount;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = true;
kha_graphics1_Graphics.__isInterface__ = true;
var kha_graphics2_Graphics = function() {
	this.transformations = [new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1)];
	this.transformationIndex = 0;
	this.opacities = [1];
	this.myFontSize = 12;
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = true;
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,fillRect: function(x,y,width,height) {
	}
	,set_color: function(color) {
		return -16777216;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,__class__: kha_graphics2_Graphics
	,__properties__: {get_opacity:"get_opacity",get_fontSize:"get_fontSize",set_color:"set_color"}
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = true;
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	__class__: kha_graphics2_Graphics1
};
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = true;
kha_graphics4_ConstantLocation.__isInterface__ = true;
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = true;
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.createRenderTarget = function(size,format,depthStencil) {
	if(format == null) {
		format = 0;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	return new kha_graphics4_CubeMap(size,format,true,depthStencil);
};
kha_graphics4_CubeMap.prototype = {
	createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format) {
			case 0:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
			}
			if(this.format == 3) {
				kha_SystemImpl.gl.texParameteri(34067,10240,9728);
				kha_SystemImpl.gl.texParameteri(34067,10241,9728);
				this.isDepthAttachment = true;
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069,colortex,0);
					kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34070,colortex,0);
					kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34071,colortex,0);
					kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34072,colortex,0);
					kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34073,colortex,0);
					kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34074,colortex,0);
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			if(depthStencilFormat == 1) {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.myWidth,this.myHeight,0,6402,5125,null);
			} else {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
			}
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
	,__properties__: {get_g4:"get_g4",get_height:"get_height",get_width:"get_width"}
};
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = true;
kha_graphics4_FragmentShader.fromSource = function(source) {
	var shader = new kha_graphics4_FragmentShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_FragmentShader.prototype = {
	__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function() { };
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = true;
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = true;
kha_graphics4_Graphics.__isInterface__ = true;
kha_graphics4_Graphics.prototype = {
	__class__: kha_graphics4_Graphics
};
var kha_graphics4_InternalPipeline = function(pipeline,projectionLocation,textureLocation) {
	this.pipeline = pipeline;
	this.projectionLocation = projectionLocation;
	this.textureLocation = textureLocation;
};
$hxClasses["kha.graphics4.InternalPipeline"] = kha_graphics4_InternalPipeline;
kha_graphics4_InternalPipeline.__name__ = true;
kha_graphics4_InternalPipeline.prototype = {
	__class__: kha_graphics4_InternalPipeline
};
var kha_graphics4_PipelineCache = function() { };
$hxClasses["kha.graphics4.PipelineCache"] = kha_graphics4_PipelineCache;
kha_graphics4_PipelineCache.__name__ = true;
kha_graphics4_PipelineCache.__isInterface__ = true;
kha_graphics4_PipelineCache.prototype = {
	__class__: kha_graphics4_PipelineCache
};
var kha_graphics4_PerFramebufferPipelineCache = function(pipeline,texture) {
	this.pipelines = [];
	pipeline.compile();
	var projectionLocation = null;
	try {
		projectionLocation = pipeline.getConstantLocation("projectionMatrix");
	} catch( _g ) {
		var x = haxe_Exception.caught(_g).unwrap();
		haxe_Log.trace(x,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 90, className : "kha.graphics4.PerFramebufferPipelineCache", methodName : "new"});
	}
	var textureLocation = null;
	if(texture) {
		try {
			textureLocation = pipeline.getTextureUnit("tex");
		} catch( _g ) {
			var x = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(x,{ fileName : "kha/graphics4/Graphics2.hx", lineNumber : 99, className : "kha.graphics4.PerFramebufferPipelineCache", methodName : "new"});
		}
	}
	this.pipelines.push(new kha_graphics4_InternalPipeline(pipeline,projectionLocation,textureLocation));
};
$hxClasses["kha.graphics4.PerFramebufferPipelineCache"] = kha_graphics4_PerFramebufferPipelineCache;
kha_graphics4_PerFramebufferPipelineCache.__name__ = true;
kha_graphics4_PerFramebufferPipelineCache.__interfaces__ = [kha_graphics4_PipelineCache];
kha_graphics4_PerFramebufferPipelineCache.prototype = {
	get: function(colorFormats,depthStencilFormat) {
		return this.pipelines[this.hash(colorFormats,depthStencilFormat)];
	}
	,hash: function(colorFormats,depthStencilFormat) {
		return 0;
	}
	,__class__: kha_graphics4_PerFramebufferPipelineCache
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	kha_graphics4_ImageShaderPainter.bufferStart = 0;
	kha_graphics4_ImageShaderPainter.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ImageShaderPainter.standardImagePipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = true;
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.structure == null) {
		kha_graphics4_ImageShaderPainter.structure = kha_graphics4_Graphics2.createImageVertexStructure();
	}
	if(kha_graphics4_ImageShaderPainter.standardImagePipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_ImageShaderPainter.structure);
		kha_graphics4_ImageShaderPainter.standardImagePipeline = new kha_graphics4_PerFramebufferPipelineCache(pipeline,true);
	}
};
kha_graphics4_ImageShaderPainter.prototype = {
	setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ImageShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ImageShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(6000,kha_graphics4_ImageShaderPainter.structure,1);
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ImageShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(9000,0);
			var indices = kha_graphics4_ImageShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1500) {
				var i = _g++;
				var k = i * 3 * 2;
				indices.setUint32(k * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp = k * 4;
				var k1 = i * 3 * 2 + 1;
				indices.setUint32(k1 * 4,i * 4 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp1 = k1 * 4;
				var k2 = i * 3 * 2 + 2;
				indices.setUint32(k2 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp2 = k2 * 4;
				var k3 = i * 3 * 2 + 3;
				indices.setUint32(k3 * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp3 = k3 * 4;
				var k4 = i * 3 * 2 + 4;
				indices.setUint32(k4 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp4 = k4 * 4;
				var k5 = i * 3 * 2 + 5;
				indices.setUint32(k5 * 4,i * 4 + 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp5 = k5 * 4;
			}
			kha_graphics4_ImageShaderPainter.indexBuffer.unlock();
		}
	}
	,drawBuffer: function(end) {
		if(kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart == 0) {
			return;
		}
		kha_graphics4_ImageShaderPainter.rectVertexBuffer.unlock((kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 4);
		var pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ImageShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ImageShaderPainter.indexBuffer);
		this.g.setTexture(pipeline.textureLocation,kha_graphics4_ImageShaderPainter.lastTexture);
		this.g.setTextureParameters(pipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,this.bilinearMipmaps ? 2 : 0);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(kha_graphics4_ImageShaderPainter.bufferStart * 2 * 3,(kha_graphics4_ImageShaderPainter.bufferIndex - kha_graphics4_ImageShaderPainter.bufferStart) * 2 * 3);
		this.g.setTexture(pipeline.textureLocation,null);
		if(end || (kha_graphics4_ImageShaderPainter.bufferStart + kha_graphics4_ImageShaderPainter.bufferIndex + 1) * 4 >= 1500) {
			kha_graphics4_ImageShaderPainter.bufferStart = 0;
			kha_graphics4_ImageShaderPainter.bufferIndex = 0;
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock(0);
		} else {
			kha_graphics4_ImageShaderPainter.bufferStart = kha_graphics4_ImageShaderPainter.bufferIndex;
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock(kha_graphics4_ImageShaderPainter.bufferStart * 4);
		}
	}
	,end: function() {
		if(kha_graphics4_ImageShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		kha_graphics4_ImageShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_ColoredShaderPainter.standardColorPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = true;
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.structure == null) {
		kha_graphics4_ColoredShaderPainter.structure = kha_graphics4_Graphics2.createColoredVertexStructure();
	}
	if(kha_graphics4_ColoredShaderPainter.standardColorPipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createColoredPipeline(kha_graphics4_ColoredShaderPainter.structure);
		kha_graphics4_ColoredShaderPainter.standardColorPipeline = new kha_graphics4_PerFramebufferPipelineCache(pipeline,false);
	}
};
kha_graphics4_ColoredShaderPainter.prototype = {
	setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ColoredShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ColoredShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			var indices = kha_graphics4_ColoredShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				var k = i * 3 * 2;
				indices.setUint32(k * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp = k * 4;
				var k1 = i * 3 * 2 + 1;
				indices.setUint32(k1 * 4,i * 4 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp1 = k1 * 4;
				var k2 = i * 3 * 2 + 2;
				indices.setUint32(k2 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp2 = k2 * 4;
				var k3 = i * 3 * 2 + 3;
				indices.setUint32(k3 * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp3 = k3 * 4;
				var k4 = i * 3 * 2 + 4;
				indices.setUint32(k4 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp4 = k4 * 4;
				var k5 = i * 3 * 2 + 5;
				indices.setUint32(k5 * 4,i * 4 + 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp5 = k5 * 4;
			}
			kha_graphics4_ColoredShaderPainter.indexBuffer.unlock();
			kha_graphics4_ColoredShaderPainter.triangleVertexBuffer = new kha_graphics4_VertexBuffer(3000,kha_graphics4_ColoredShaderPainter.structure,1);
			kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer = new kha_graphics4_IndexBuffer(3000,0);
			var triIndices = kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				var k = i * 3;
				triIndices.setUint32(k * 4,i * 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp = k * 4;
				var k1 = i * 3 + 1;
				triIndices.setUint32(k1 * 4,i * 3 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp1 = k1 * 4;
				var k2 = i * 3 + 2;
				triIndices.setUint32(k2 * 4,i * 3 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp2 = k2 * 4;
			}
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 4 * 4;
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32(baseIndex * 4,bottomleftx,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 1) * 4,bottomlefty,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 2) * 4,-5.0,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 4) * 4,topleftx,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 5) * 4,toplefty,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 6) * 4,-5.0,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 8) * 4,toprightx,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 9) * 4,toprighty,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 10) * 4,-5.0,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 12) * 4,bottomrightx,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 13) * 4,bottomrighty,true);
		kha_graphics4_ColoredShaderPainter.rectVertices.setFloat32((baseIndex + 14) * 4,-5.0,true);
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 4 * 4 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		var r = a * (((color & 16711680) >>> 16) * 0.00392156862745098);
		var g = a * (((color & 65280) >>> 8) * 0.00392156862745098);
		var b = a * ((color & 255) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 12,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 12 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 12 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 12 + 3,a * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 28,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 28 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 28 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 28 + 3,a * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 44,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 44 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 44 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 44 + 3,a * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 60,r * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 60 + 1,g * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 60 + 2,b * 255 | 0);
		kha_graphics4_ColoredShaderPainter.rectVertices.setUint8(baseIndex + 60 + 3,a * 255 | 0);
	}
	,drawBuffer: function(trisDone) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex == 0) {
			return;
		}
		if(!trisDone) {
			if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.rectVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.bufferIndex * 4);
		var pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.indexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.bufferIndex * 2 * 3);
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.unlock(kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		var pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.triangleVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.triangleIndexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex + 1 >= 1000) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++kha_graphics4_ColoredShaderPainter.bufferIndex;
	}
	,__class__: kha_graphics4_ColoredShaderPainter
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_TextShaderPainter.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.myPipeline = kha_graphics4_TextShaderPainter.standardTextPipeline;
	this.initBuffers();
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = true;
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.structure == null) {
		kha_graphics4_TextShaderPainter.structure = kha_graphics4_Graphics2.createTextVertexStructure();
	}
	if(kha_graphics4_TextShaderPainter.standardTextPipeline == null) {
		var pipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_TextShaderPainter.structure);
		kha_graphics4_TextShaderPainter.standardTextPipeline = new kha_graphics4_PerFramebufferPipelineCache(pipeline,true);
	}
};
kha_graphics4_TextShaderPainter.prototype = {
	setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_TextShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_TextShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(4000,kha_graphics4_TextShaderPainter.structure,1);
			kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_TextShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(6000,0);
			var indices = kha_graphics4_TextShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1000) {
				var i = _g++;
				var k = i * 3 * 2;
				indices.setUint32(k * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp = k * 4;
				var k1 = i * 3 * 2 + 1;
				indices.setUint32(k1 * 4,i * 4 + 1,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp1 = k1 * 4;
				var k2 = i * 3 * 2 + 2;
				indices.setUint32(k2 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp2 = k2 * 4;
				var k3 = i * 3 * 2 + 3;
				indices.setUint32(k3 * 4,i * 4,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp3 = k3 * 4;
				var k4 = i * 3 * 2 + 4;
				indices.setUint32(k4 * 4,i * 4 + 2,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp4 = k4 * 4;
				var k5 = i * 3 * 2 + 5;
				indices.setUint32(k5 * 4,i * 4 + 3,kha_arrays_ByteArray.LITTLE_ENDIAN);
				var tmp5 = k5 * 4;
			}
			kha_graphics4_TextShaderPainter.indexBuffer.unlock();
		}
	}
	,drawBuffer: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex == 0) {
			return;
		}
		kha_graphics4_TextShaderPainter.rectVertexBuffer.unlock(kha_graphics4_TextShaderPainter.bufferIndex * 4);
		var pipeline = this.myPipeline.get(null,3);
		this.g.setPipeline(pipeline.pipeline);
		this.g.setVertexBuffer(kha_graphics4_TextShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_TextShaderPainter.indexBuffer);
		this.g.setMatrix(pipeline.projectionLocation,this.projectionMatrix);
		this.g.setTexture(pipeline.textureLocation,kha_graphics4_TextShaderPainter.lastTexture);
		this.g.setTextureParameters(pipeline.textureLocation,2,2,this.bilinear ? 1 : 0,this.bilinear ? 1 : 0,0);
		this.g.drawIndexedVertices(0,kha_graphics4_TextShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(pipeline.textureLocation,null);
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
	}
	,end: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
};
var kha_graphics4_Graphics2 = function(canvas) {
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.projectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = true;
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.createImageVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexUV",1);
	structure.add("vertexColor",16);
	return structure;
};
kha_graphics4_Graphics2.createImagePipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createColoredVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexColor",16);
	return structure;
};
kha_graphics4_Graphics2.createColoredPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 1;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 1;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createTextVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexUV",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createTextPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = 3;
	shaderPipeline.blendDestination = 5;
	shaderPipeline.alphaBlendSource = 3;
	shaderPipeline.alphaBlendDestination = 5;
	return shaderPipeline;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if(((this.canvas) instanceof kha_Framebuffer)) {
			var _this = this.projectionMatrix;
			var tx = -width / width;
			var ty = -height / (0 - height);
			var tz = -1.00020002000200026;
			var m__00 = 2 / width;
			var m__10 = 0;
			var m__20 = 0;
			var m__30 = tx;
			var m__01 = 0;
			var m__11 = 2.0 / (0 - height);
			var m__21 = 0;
			var m__31 = ty;
			var m__02 = 0;
			var m__12 = 0;
			var m__22 = -0.002000200020002;
			var m__32 = tz;
			var m__03 = 0;
			var m__13 = 0;
			var m__23 = 0;
			var m__33 = 1;
			_this._00 = m__00;
			_this._10 = m__10;
			_this._20 = m__20;
			_this._30 = m__30;
			_this._01 = m__01;
			_this._11 = m__11;
			_this._21 = m__21;
			_this._31 = m__31;
			_this._02 = m__02;
			_this._12 = m__12;
			_this._22 = m__22;
			_this._32 = m__32;
			_this._03 = m__03;
			_this._13 = m__13;
			_this._23 = m__23;
			_this._33 = m__33;
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(kha_Image.renderTargetsInvertedY()) {
				var _this = this.projectionMatrix;
				var tx = -width / width;
				var ty = -height / height;
				var tz = -1.00020002000200026;
				var m__00 = 2 / width;
				var m__10 = 0;
				var m__20 = 0;
				var m__30 = tx;
				var m__01 = 0;
				var m__11 = 2.0 / height;
				var m__21 = 0;
				var m__31 = ty;
				var m__02 = 0;
				var m__12 = 0;
				var m__22 = -0.002000200020002;
				var m__32 = tz;
				var m__03 = 0;
				var m__13 = 0;
				var m__23 = 0;
				var m__33 = 1;
				_this._00 = m__00;
				_this._10 = m__10;
				_this._20 = m__20;
				_this._30 = m__30;
				_this._01 = m__01;
				_this._11 = m__11;
				_this._21 = m__21;
				_this._31 = m__31;
				_this._02 = m__02;
				_this._12 = m__12;
				_this._22 = m__22;
				_this._32 = m__32;
				_this._03 = m__03;
				_this._13 = m__13;
				_this._23 = m__23;
				_this._33 = m__33;
			} else {
				var _this = this.projectionMatrix;
				var tx = -width / width;
				var ty = -height / (0 - height);
				var tz = -1.00020002000200026;
				var m__00 = 2 / width;
				var m__10 = 0;
				var m__20 = 0;
				var m__30 = tx;
				var m__01 = 0;
				var m__11 = 2.0 / (0 - height);
				var m__21 = 0;
				var m__31 = ty;
				var m__02 = 0;
				var m__12 = 0;
				var m__22 = -0.002000200020002;
				var m__32 = tz;
				var m__03 = 0;
				var m__13 = 0;
				var m__23 = 0;
				var m__33 = 1;
				_this._00 = m__00;
				_this._10 = m__10;
				_this._20 = m__20;
				_this._30 = m__30;
				_this._01 = m__01;
				_this._11 = m__11;
				_this._21 = m__21;
				_this._31 = m__31;
				_this._02 = m__02;
				_this._12 = m__12;
				_this._22 = m__22;
				_this._32 = m__32;
				_this._03 = m__03;
				_this._13 = m__13;
				_this._23 = m__23;
				_this._33 = m__33;
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = y + height;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		var p1_x = x2;
		var p1_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x;
		var y1 = y;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		var p2_x = x2;
		var p2_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width;
		var y1 = y;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x2 = x1;
		var y2 = y1;
		if(y2 == null) {
			y2 = 0;
		}
		if(x2 == null) {
			x2 = 0;
		}
		var p3_x = x2;
		var p3_y = y2;
		var _this = this.transformations[this.transformationIndex];
		var x1 = x + width;
		var y1 = y + height;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var x1 = x;
		var y1 = y;
		if(y1 == null) {
			y1 = 0;
		}
		if(x1 == null) {
			x1 = 0;
		}
		var p4_x = x1;
		var p4_y = y1;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(kha_graphics4_Graphics2.current == null) {
			kha_graphics4_Graphics2.current = this;
		} else {
			throw haxe_Exception.thrown("End before you begin");
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
		if(kha_graphics4_Graphics2.current == this) {
			kha_graphics4_Graphics2.current = null;
		} else {
			throw haxe_Exception.thrown("Begin before you end");
		}
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.lockEnd = 0;
	this.lockStart = 0;
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this._data = kha_arrays_Uint32Array._new(indexCount);
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = true;
kha_graphics4_IndexBuffer.prototype = {
	lock: function(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		var end = this.lockEnd;
		var start = this.lockStart * 4;
		var end1 = end != null ? end * 4 : null;
		return kha_arrays_ByteArray._new(this._data.buffer,start,end1 != null ? end1 - start : null);
	}
	,unlock: function(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var end = this.lockEnd;
		var start = this.lockStart * 4;
		var end1 = end != null ? end * 4 : null;
		var data = kha_arrays_ByteArray._new(this._data.buffer,start,end1 != null ? end1 - start : null);
		var glData = kha_SystemImpl.elementIndexUint == null ? new Uint16Array(data.buffer) : data;
		kha_SystemImpl.gl.bufferData(34963,glData,this.usage == 1 ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = 2;
	this.depthWrite = false;
	this.depthMode = 0;
	this.stencilFrontMode = 0;
	this.stencilFrontBothPass = 0;
	this.stencilFrontDepthFail = 0;
	this.stencilFrontFail = 0;
	this.stencilBackMode = 0;
	this.stencilBackBothPass = 0;
	this.stencilBackDepthFail = 0;
	this.stencilBackFail = 0;
	this.stencilReferenceValue = kha_graphics4_StencilValue.Static(0);
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = 1;
	this.blendDestination = 2;
	this.blendOperation = 0;
	this.alphaBlendSource = 1;
	this.alphaBlendDestination = 2;
	this.alphaBlendOperation = 0;
	this.colorWriteMasksRed = [];
	this.colorWriteMasksGreen = [];
	this.colorWriteMasksBlue = [];
	this.colorWriteMasksAlpha = [];
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorAttachmentCount = 1;
	this.colorAttachments = [];
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.colorAttachments.push(0);
	this.depthStencilAttachment = 0;
	this.conservativeRasterization = false;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = true;
kha_graphics4_PipelineStateBase.prototype = {
	__class__: kha_graphics4_PipelineStateBase
};
var kha_graphics4_PipelineState = function() {
	this.program = null;
	kha_graphics4_PipelineStateBase.call(this);
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = true;
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	'delete': function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
	}
	,compile: function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
		this.program = kha_SystemImpl.gl.createProgram();
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var structure = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = structure.elements;
			while(_g2 < _g3.length) {
				var element = _g3[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == 4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			var message = "Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program);
			haxe_Log.trace("Error: " + message,{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 49, className : "kha.graphics4.PipelineState", methodName : "compile"});
			throw haxe_Exception.thrown(message);
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g = 0;
		var _g1 = this.textureValues.length;
		while(_g < _g1) {
			var index = _g++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMasksRed[0],this.colorWriteMasksGreen[0],this.colorWriteMasksBlue[0],this.colorWriteMasksAlpha[0]);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highp = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338);
		var highpSupported = highp.precision != 0;
		var files = shader.files;
		var _g = 0;
		var _g1 = files.length;
		while(_g < _g1) {
			var i = _g++;
			if(kha_SystemImpl.gl2) {
				if(files[i].indexOf("-webgl2") >= 0 || files[i].indexOf("runtime-string") >= 0) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			} else {
				if(!highpSupported && (files[i].indexOf("-relaxed") >= 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
				if(highpSupported && (files[i].indexOf("-relaxed") < 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			var message = "Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s);
			haxe_Log.trace("Error: " + message,{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 89, className : "kha.graphics4.PipelineState", methodName : "compileShader"});
			throw haxe_Exception.thrown(message);
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		if(location == null) {
			haxe_Log.trace("Warning: Uniform " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 98, className : "kha.graphics4.PipelineState", methodName : "getConstantLocation"});
		}
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,i);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			if(location == null) {
				haxe_Log.trace("Warning: Sampler " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 117, className : "kha.graphics4.PipelineState", methodName : "getTextureUnit"});
			}
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g = 0;
		var _g1 = this.textures.length;
		while(_g < _g1) {
			var index = _g++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilValue = $hxEnums["kha.graphics4.StencilValue"] = { __ename__:true,__constructs__:null
	,Dynamic: {_hx_name:"Dynamic",_hx_index:0,__enum__:"kha.graphics4.StencilValue",toString:$estr}
	,Static: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"kha.graphics4.StencilValue",toString:$estr}; },$_._hx_name="Static",$_.__params__ = ["value"],$_)
};
kha_graphics4_StencilValue.__constructs__ = [kha_graphics4_StencilValue.Dynamic,kha_graphics4_StencilValue.Static];
var kha_graphics4_TessellationControlShader = function() { };
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = true;
var kha_graphics4_TessellationEvaluationShader = function() { };
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = true;
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = true;
kha_graphics4_TextureUnit.__isInterface__ = true;
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.lockEnd = 0;
	this.lockStart = 0;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		this.myStride += kha_graphics4_VertexStructure.dataByteSize(element.data);
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this._data = kha_arrays_ByteArray.make(vertexCount * this.myStride);
	this.sizes = [];
	this.offsets = [];
	this.types = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	this.types[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		var size;
		var type;
		switch(element.data) {
		case 0:
			size = 1;
			type = 5126;
			break;
		case 1:
			size = 2;
			type = 5126;
			break;
		case 2:
			size = 3;
			type = 5126;
			break;
		case 3:
			size = 4;
			type = 5126;
			break;
		case 4:
			size = 16;
			type = 5126;
			break;
		case 5:case 7:
			size = 1;
			type = 5120;
			break;
		case 6:case 8:
			size = 1;
			type = 5121;
			break;
		case 10:case 12:
			size = 2;
			type = 5121;
			break;
		case 9:case 11:
			size = 2;
			type = 5120;
			break;
		case 13:case 15:
			size = 4;
			type = 5120;
			break;
		case 14:case 16:
			size = 4;
			type = 5121;
			break;
		case 17:case 19:
			size = 1;
			type = 5122;
			break;
		case 18:case 20:
			size = 1;
			type = 5123;
			break;
		case 21:case 23:
			size = 2;
			type = 5122;
			break;
		case 22:case 24:
			size = 2;
			type = 5123;
			break;
		case 25:case 27:
			size = 4;
			type = 5122;
			break;
		case 26:case 28:
			size = 4;
			type = 5123;
			break;
		case 29:
			size = 1;
			type = 5124;
			break;
		case 30:
			size = 1;
			type = 5125;
			break;
		case 31:
			size = 2;
			type = 5124;
			break;
		case 32:
			size = 2;
			type = 5125;
			break;
		case 33:
			size = 3;
			type = 5124;
			break;
		case 34:
			size = 3;
			type = 5125;
			break;
		case 35:
			size = 4;
			type = 5124;
			break;
		case 36:
			size = 4;
			type = 5125;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		this.types[index] = type;
		offset += kha_graphics4_VertexStructure.dataByteSize(element.data);
		++index;
	}
	kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
	var tmp = kha_SystemImpl.gl;
	var this1 = this._data;
	var start = 0 * this.stride();
	var end = this.mySize * this.stride();
	tmp.bufferData(34962,kha_arrays_ByteArray._new(this1.buffer,start,end != null ? end - start : null),usage == 1 ? 35048 : 35044);
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = true;
kha_graphics4_VertexBuffer.prototype = {
	lock: function(start,count) {
		this.lockStart = start != null ? start : 0;
		this.lockEnd = count != null ? start + count : this.mySize;
		var this1 = this._data;
		var start = this.lockStart * this.stride();
		var end = this.lockEnd * this.stride();
		return kha_arrays_ByteArray._new(this1.buffer,start,end != null ? end - start : null);
	}
	,unlock: function(count) {
		if(count != null) {
			this.lockEnd = this.lockStart + count;
		}
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		if(kha_SystemImpl.safari) {
			var tmp = kha_SystemImpl.gl;
			var this1 = this._data;
			var start = 0 * this.stride();
			var end = this.lockEnd * this.stride();
			tmp.bufferData(34962,kha_arrays_ByteArray._new(this1.buffer,start,end != null ? end - start : null),35048);
		} else {
			var tmp = kha_SystemImpl.gl;
			var tmp1 = this.lockStart * this.stride();
			var this1 = this._data;
			var start = this.lockStart * this.stride();
			var end = this.lockEnd * this.stride();
			tmp.bufferSubData(34962,tmp1,kha_arrays_ByteArray._new(this1.buffer,start,end != null ? end - start : null));
		}
	}
	,stride: function() {
		return this.myStride;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl2 ? true : kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g = 0;
		var _g1 = this.sizes.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						if(kha_SystemImpl.gl2) {
							kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
						} else {
							ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
						}
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				var normalized = this.types[i] == 5126 ? false : true;
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],this.types[i],normalized,this.myStride,this.offsets[i]);
				if(ext) {
					if(kha_SystemImpl.gl2) {
						kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
					} else {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = true;
kha_graphics4_VertexElement.prototype = {
	__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = true;
kha_graphics4_VertexShader.fromSource = function(source) {
	var shader = new kha_graphics4_VertexShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_VertexShader.prototype = {
	__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
	this.instanced = false;
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = true;
kha_graphics4_VertexStructure.dataByteSize = function(data) {
	switch(data) {
	case 0:
		return 4;
	case 1:
		return 8;
	case 2:
		return 12;
	case 3:
		return 16;
	case 4:
		return 64;
	case 5:case 6:case 7:case 8:
		return 1;
	case 9:case 10:case 11:case 12:
		return 2;
	case 13:case 14:case 15:case 16:
		return 4;
	case 17:case 18:case 19:case 20:
		return 2;
	case 21:case 22:case 23:case 24:
		return 4;
	case 25:case 26:case 27:case 28:
		return 8;
	case 29:case 30:
		return 4;
	case 31:case 32:
		return 8;
	case 33:case 34:
		return 12;
	case 35:case 36:
		return 16;
	}
};
kha_graphics4_VertexStructure.prototype = {
	add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,byteSize: function() {
		var byteSize = 0;
		var _g = 0;
		var _g1 = this.elements.length;
		while(_g < _g1) {
			var i = _g++;
			byteSize += kha_graphics4_VertexStructure.dataByteSize(this.elements[i].data);
		}
		return byteSize;
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(index,id) {
	if(id == null) {
		id = "unknown";
	}
	if(index == null) {
		index = 0;
	}
	this.connected = false;
	this.index = index;
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[index] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = true;
kha_input_Gamepad.get = function(index) {
	if(index == null) {
		index = 0;
	}
	if(index >= kha_input_Gamepad.instances.length) {
		return null;
	}
	return kha_input_Gamepad.instances[index];
};
kha_input_Gamepad.notifyOnConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		kha_input_Gamepad.connectListeners.push(connectListener);
	}
	if(disconnectListener != null) {
		kha_input_Gamepad.disconnectListeners.push(disconnectListener);
	}
};
kha_input_Gamepad.removeConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.connectListeners,connectListener);
	}
	if(disconnectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.disconnectListeners,disconnectListener);
	}
};
kha_input_Gamepad.sendConnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = true;
	var _g = 0;
	var _g1 = kha_input_Gamepad.connectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.sendDisconnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = false;
	var _g = 0;
	var _g1 = kha_input_Gamepad.disconnectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.prototype = {
	notify: function(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	,remove: function(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	,rumble: function(leftAmount,rightAmount) {
		kha_SystemImpl.setGamepadRumble(this.index,leftAmount,rightAmount);
	}
	,get_id: function() {
		return kha_SystemImpl.getGamepadId(this.index);
	}
	,get_vendor: function() {
		return kha_SystemImpl.getGamepadVendor(this.index);
	}
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	,__class__: kha_input_Gamepad
	,__properties__: {get_vendor:"get_vendor",get_id:"get_id"}
};
var kha_input_BlockInterventions = $hxEnums["kha.input.BlockInterventions"] = { __ename__:true,__constructs__:null
	,Default: {_hx_name:"Default",_hx_index:0,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:1,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,None: {_hx_name:"None",_hx_index:2,__enum__:"kha.input.BlockInterventions",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:3,func:func,__enum__:"kha.input.BlockInterventions",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["func"],$_)
};
kha_input_BlockInterventions.__constructs__ = [kha_input_BlockInterventions.Default,kha_input_BlockInterventions.Full,kha_input_BlockInterventions.None,kha_input_BlockInterventions.Custom];
var kha_netsync_Controller = function() {
	this.__id = kha_netsync_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.netsync.Controller"] = kha_netsync_Controller;
kha_netsync_Controller.__name__ = true;
kha_netsync_Controller.prototype = {
	_id: function() {
		return this.__id;
	}
	,__class__: kha_netsync_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_netsync_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	this.pressListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = true;
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.disableSystemInterventions = function(behavior) {
	kha_input_Keyboard.keyBehavior = behavior;
};
kha_input_Keyboard.__super__ = kha_netsync_Controller;
kha_input_Keyboard.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
		if(pressListener != null) {
			this.pressListeners.push(pressListener);
		}
	}
	,remove: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
		if(pressListener != null) {
			HxOverrides.remove(this.pressListeners,pressListener);
		}
	}
	,show: function() {
	}
	,hide: function() {
	}
	,sendDownEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,0);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendUpEvent: function(code) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,1);
			bytes.b[4] = code;
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendPressEvent: function(char) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,2);
			bytes.b[4] = HxOverrides.cca(char,0);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.pressListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(char);
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.b[4];
			this.sendDownEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input0 = bytes.b[4];
			this.sendUpEvent(input0);
			return;
		}
		if(funcindex == 2) {
			var code = bytes.b[4];
			var input0 = String.fromCodePoint(code);
			this.sendPressEvent(input0);
			return;
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_MouseEventBlockBehavior = $hxEnums["kha.input.MouseEventBlockBehavior"] = { __ename__:true,__constructs__:null
	,Full: {_hx_name:"Full",_hx_index:0,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,None: {_hx_name:"None",_hx_index:1,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.MouseEventBlockBehavior",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["func"],$_)
};
kha_input_MouseEventBlockBehavior.__constructs__ = [kha_input_MouseEventBlockBehavior.Full,kha_input_MouseEventBlockBehavior.None,kha_input_MouseEventBlockBehavior.Custom];
var kha_input_MouseCursor = $hxEnums["kha.input.MouseCursor"] = { __ename__:true,__constructs__:null
	,Default: {_hx_name:"Default",_hx_index:0,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Pointer: {_hx_name:"Pointer",_hx_index:1,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Text: {_hx_name:"Text",_hx_index:2,__enum__:"kha.input.MouseCursor",toString:$estr}
	,EastWestResize: {_hx_name:"EastWestResize",_hx_index:3,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthSouthResize: {_hx_name:"NorthSouthResize",_hx_index:4,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthEastResize: {_hx_name:"NorthEastResize",_hx_index:5,__enum__:"kha.input.MouseCursor",toString:$estr}
	,SouthEastResize: {_hx_name:"SouthEastResize",_hx_index:6,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NorthWestResize: {_hx_name:"NorthWestResize",_hx_index:7,__enum__:"kha.input.MouseCursor",toString:$estr}
	,SouthWestResize: {_hx_name:"SouthWestResize",_hx_index:8,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Grab: {_hx_name:"Grab",_hx_index:9,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Grabbing: {_hx_name:"Grabbing",_hx_index:10,__enum__:"kha.input.MouseCursor",toString:$estr}
	,NotAllowed: {_hx_name:"NotAllowed",_hx_index:11,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Wait: {_hx_name:"Wait",_hx_index:12,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Crosshair: {_hx_name:"Crosshair",_hx_index:13,__enum__:"kha.input.MouseCursor",toString:$estr}
	,Custom: ($_=function(image) { return {_hx_index:14,image:image,__enum__:"kha.input.MouseCursor",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["image"],$_)
};
kha_input_MouseCursor.__constructs__ = [kha_input_MouseCursor.Default,kha_input_MouseCursor.Pointer,kha_input_MouseCursor.Text,kha_input_MouseCursor.EastWestResize,kha_input_MouseCursor.NorthSouthResize,kha_input_MouseCursor.NorthEastResize,kha_input_MouseCursor.SouthEastResize,kha_input_MouseCursor.NorthWestResize,kha_input_MouseCursor.SouthWestResize,kha_input_MouseCursor.Grab,kha_input_MouseCursor.Grabbing,kha_input_MouseCursor.NotAllowed,kha_input_MouseCursor.Wait,kha_input_MouseCursor.Crosshair,kha_input_MouseCursor.Custom];
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_netsync_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = true;
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.setWheelEventBlockBehavior = function(behavior) {
	kha_input_Mouse.wheelEventBlockBehavior = behavior;
};
kha_input_Mouse.__super__ = kha_netsync_Controller;
kha_input_Mouse.prototype = $extend(kha_netsync_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 152, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 156, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 166, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 170, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 180, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 184, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 194, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 198, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 208, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 212, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,canLock: function() {
		return false;
	}
	,isLocked: function() {
		return false;
	}
	,notifyOnLockChange: function(change,error) {
	}
	,removeFromLockChange: function(change,error) {
	}
	,hideSystemCursor: function() {
	}
	,showSystemCursor: function() {
	}
	,setSystemCursor: function(cursor) {
	}
	,sendLeaveEvent: function(windowId) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_netsync_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_netsync_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.getInt32(4);
			this.sendLeaveEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input0 = bytes.getInt32(4);
			var input1 = bytes.getInt32(8);
			var input2 = bytes.getInt32(12);
			var input3 = bytes.getInt32(16);
			this.sendDownEvent(input0,input1,input2,input3);
			return;
		}
		if(funcindex == 2) {
			var input0 = bytes.getInt32(4);
			var input1 = bytes.getInt32(8);
			var input2 = bytes.getInt32(12);
			var input3 = bytes.getInt32(16);
			this.sendUpEvent(input0,input1,input2,input3);
			return;
		}
		if(funcindex == 3) {
			var input0 = bytes.getInt32(4);
			var input1 = bytes.getInt32(8);
			var input2 = bytes.getInt32(12);
			var input3 = bytes.getInt32(16);
			var input4 = bytes.getInt32(20);
			this.sendMoveEvent(input0,input1,input2,input3,input4);
			return;
		}
		if(funcindex == 4) {
			var input0 = bytes.getInt32(4);
			var input1 = bytes.getInt32(8);
			this.sendWheelEvent(input0,input1);
			return;
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = true;
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	lock: function() {
		kha_SystemImpl.lockMouse();
	}
	,unlock: function() {
		kha_SystemImpl.unlockMouse();
	}
	,canLock: function() {
		return kha_SystemImpl.canLockMouse();
	}
	,isLocked: function() {
		return kha_SystemImpl.isMouseLocked();
	}
	,notifyOnLockChange: function(func,error) {
		kha_SystemImpl.notifyOfMouseLockChange(func,error);
	}
	,removeFromLockChange: function(func,error) {
		kha_SystemImpl.removeFromMouseLockChange(func,error);
	}
	,hideSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "none";
	}
	,showSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "default";
	}
	,setSystemCursor: function(cursor) {
		var tmp;
		switch(cursor._hx_index) {
		case 0:
			tmp = "default";
			break;
		case 1:
			tmp = "pointer";
			break;
		case 2:
			tmp = "text";
			break;
		case 3:
			tmp = "ew-resize";
			break;
		case 4:
			tmp = "ns-resize";
			break;
		case 5:
			tmp = "ne-resize";
			break;
		case 6:
			tmp = "se-resize";
			break;
		case 7:
			tmp = "nw-resize";
			break;
		case 8:
			tmp = "sw-resize";
			break;
		case 9:
			tmp = "grab";
			break;
		case 10:
			tmp = "grabbing";
			break;
		case 11:
			tmp = "not-allowed";
			break;
		case 12:
			tmp = "wait";
			break;
		case 13:
			tmp = "crosshair";
			break;
		case 14:
			var image = cursor.image;
			var canvas = window.document.createElement("canvas");
			canvas.width = image.get_width();
			canvas.height = image.get_height();
			if(((image) instanceof kha_WebGLImage)) {
				canvas.getContext("2d",null).drawImage((js_Boot.__cast(image , kha_WebGLImage)).image,0,0);
			} else {
				canvas.getContext("2d",null).drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,0,0);
			}
			var dataURL = canvas.toDataURL("image/png");
			dataURL = StringTools.replace(dataURL,"/^data:image\\/(png|jpg);base64,/","");
			tmp = "url('" + dataURL + "'),auto";
			break;
		}
		kha_SystemImpl.khanvas.style.cursor = tmp;
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
	}
	,__class__: kha_input_MouseImpl
});
var kha_input_Pen = function() {
	kha_input_Pen.instance = this;
};
$hxClasses["kha.input.Pen"] = kha_input_Pen;
kha_input_Pen.__name__ = true;
kha_input_Pen.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getPen(num);
};
kha_input_Pen.prototype = {
	notify: function(downListener,upListener,moveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
	}
	,__class__: kha_input_Pen
};
var kha_input_TouchDownEventBlockBehavior = $hxEnums["kha.input.TouchDownEventBlockBehavior"] = { __ename__:true,__constructs__:null
	,Full: {_hx_name:"Full",_hx_index:0,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,None: {_hx_name:"None",_hx_index:1,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}
	,Custom: ($_=function(func) { return {_hx_index:2,func:func,__enum__:"kha.input.TouchDownEventBlockBehavior",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["func"],$_)
};
kha_input_TouchDownEventBlockBehavior.__constructs__ = [kha_input_TouchDownEventBlockBehavior.Full,kha_input_TouchDownEventBlockBehavior.None,kha_input_TouchDownEventBlockBehavior.Custom];
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = true;
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.setTouchDownEventBlockBehavior = function(behavior) {
	kha_input_Surface.touchDownEventBlockBehavior = behavior;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			HxOverrides.remove(this.moveListeners,moveListener);
		}
	}
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.bytes = bytes;
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = true;
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.prototype = {
	get_length: function() {
		return this.bytes.length;
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,toBytes: function() {
		return this.bytes;
	}
	,__class__: kha_internal_BytesBlob
	,__properties__: {get_length:"get_length"}
};
var kha_internal_HdrFormat = function() { };
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = true;
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 39, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var this1 = new Uint8Array(4);
	var rgbe = this1;
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var this1 = new Uint8Array(2);
	var buf = this1;
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 55, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0];
			data[offset++] = rgbe[1];
			data[offset++] = rgbe[2];
			data[offset++] = rgbe[3];
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 70, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			var this1 = new Uint8Array(4 * scanline_width);
			scanline_buffer = this1;
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			ptr_end = (i + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 84, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 91, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1];
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 102, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1];
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 108, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = scanline_width;
		while(_g1 < _g2) {
			var i1 = _g1++;
			data[offset] = scanline_buffer[i1];
			data[offset + 1] = scanline_buffer[i1 + scanline_width];
			data[offset + 2] = scanline_buffer[i1 + 2 * scanline_width];
			data[offset + 3] = scanline_buffer[i1 + 3 * scanline_width];
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCodePoint(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io_UInt8Array.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var exposure = 1.0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			exposure = parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 171, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var this1 = new Uint8Array(width * height * 4);
	var data = this1;
	var scanline_width = width;
	var num_scanlines = height;
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,scanline_width,num_scanlines);
	var this1 = new Float32Array(width * height * 4);
	var floatData = this1;
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var e = data[offset + 3];
		var f = Math.pow(2.0,e - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
var kha_js_AEAudioChannel = function(element,looping) {
	this.stopped = false;
	this.element = element;
	this.looping = looping;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = true;
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	play: function() {
		this.stopped = false;
		this.element.play();
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
			this.stopped = true;
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(e,{ fileName : "kha/js/AEAudioChannel.hx", lineNumber : 37, className : "kha.js.AEAudioChannel", methodName : "stop"});
		}
	}
	,get_length: function() {
		var f = this.element.duration;
		if(isFinite(f)) {
			return this.element.duration;
		} else {
			return Infinity;
		}
	}
	,get_position: function() {
		return this.element.currentTime;
	}
	,set_position: function(value) {
		return this.element.currentTime = value;
	}
	,set_volume: function(value) {
		return this.element.volume = value;
	}
	,get_finished: function() {
		if(!this.stopped) {
			if(!this.looping) {
				return this.get_position() >= this.get_length();
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: kha_js_AEAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",set_position:"set_position",get_position:"get_position",get_length:"get_length"}
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = true;
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element,loop);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha_Color.fromBytes(0,0,0);
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = true;
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,fillRect: function(x,y,width,height) {
		var tmp = this.get_opacity();
		this.canvas.globalAlpha = tmp * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = true;
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( _g ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( _g ) {
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = true;
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,stop: function() {
		var wasStopped = this.paused || this.stopped;
		this.paused = false;
		this.stopped = true;
		if(wasStopped) {
			return;
		}
		this.source.stop();
	}
	,set_volume: function(value) {
		return this.gain.gain.value = value;
	}
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_js_MobileWebAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume"}
};
var kha_js_MobileWebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis.length = buffer.duration;
			_gthis.channels = buffer.numberOfChannels;
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			failed({ url : filename, error : "Audio format not supported"});
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = true;
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done,failed) {
	kha_Sound.call(this);
	this.done = done;
	this.failed = failed;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/wav") != "" && StringTools.endsWith(filename,".wav")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = true;
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		this.failed({ url : this.element.src});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_WebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = true;
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var ch0 = buffer.getChannelData(0);
			var ch1 = buffer.numberOfChannels == 1 ? ch0 : buffer.getChannelData(1);
			var len = ch0.length;
			_gthis.uncompressedData = kha_arrays_Float32Array._new(len * 2);
			_gthis.length = buffer.duration;
			_gthis.channels = buffer.numberOfChannels;
			_gthis.sampleRate = Math.round(buffer.sampleRate);
			var idx = 0;
			var i = 0;
			var lidx = len * 2;
			var uncompressInner = null;
			uncompressInner = function() {
				var chk_len = idx + 11025;
				var next_chk = chk_len > lidx ? lidx : chk_len;
				while(idx < next_chk) {
					var v = ch0[i];
					_gthis.uncompressedData.setFloat32(idx * 4,v,true);
					var v1 = ch1[i];
					_gthis.uncompressedData.setFloat32((idx + 1) * 4,v1,true);
					idx += 2;
					i += 1;
				}
				if(idx < lidx) {
					window.setTimeout(uncompressInner,0);
				} else {
					_gthis.compressedData = null;
					done();
				}
			};
			uncompressInner();
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = true;
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.colorMaskAlpha = true;
	this.colorMaskBlue = true;
	this.colorMaskGreen = true;
	this.colorMaskRed = true;
	this.depthMask = false;
	this.depthTest = false;
	this.currentPipeline = null;
	this.renderTarget = renderTarget;
	this.init();
	if(kha_SystemImpl.gl2) {
		this.instancedExtension = true;
	} else {
		this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
	}
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = true;
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor) {
	case 1:
		return 1;
	case 0:case 2:
		return 0;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = ((this.renderTarget) instanceof kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetMSAA = image.MSAAFrameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		if(kha_js_graphics4_Graphics.current == null) {
			kha_js_graphics4_Graphics.current = this;
		} else {
			throw haxe_Exception.thrown("End before you begin");
		}
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g = 0;
				var _g1 = additionalRenderTargets.length;
				while(_g < _g1) {
					var i = _g++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g = 0;
				var _g1 = additionalRenderTargets.length;
				while(_g < _g1) {
					var i = _g++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1);
				}
				if(kha_SystemImpl.gl2) {
					kha_SystemImpl.gl.drawBuffers(attachments);
				} else {
					kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
				}
			}
		}
	}
	,beginFace: function(face) {
		if(kha_js_graphics4_Graphics.current == null) {
			kha_js_graphics4_Graphics.current = this;
		} else {
			throw haxe_Exception.thrown("End before you begin");
		}
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,this.isDepthAttachment ? 36096 : 36064,34069 + face,this.renderTargetTexture,0);
		kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
	}
	,end: function() {
		if(kha_js_graphics4_Graphics.current == this) {
			kha_js_graphics4_Graphics.current = null;
		} else {
			throw haxe_Exception.thrown("Begin before you end");
		}
		if(this.renderTargetMSAA != null) {
			kha_SystemImpl.gl.bindFramebuffer(kha_SystemImpl.gl.READ_FRAMEBUFFER,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.bindFramebuffer(kha_SystemImpl.gl.DRAW_FRAMEBUFFER,this.renderTargetMSAA);
			kha_SystemImpl.gl.blitFramebuffer(0,0,this.renderTarget.get_width(),this.renderTarget.get_height(),0,0,this.renderTarget.get_width(),this.renderTarget.get_height(),16384,9728);
		}
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask |= 16384;
			kha_SystemImpl.gl.colorMask(true,true,true,true);
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		kha_SystemImpl.gl.colorMask(this.colorMaskRed,this.colorMaskGreen,this.colorMaskBlue,this.colorMaskAlpha);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,viewport: function(x,y,width,height) {
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.viewport(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.viewport(x,y,width,height);
		}
	}
	,scissor: function(x,y,width,height) {
		kha_SystemImpl.gl.enable(3089);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.scissor(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.scissor(x,y,width,height);
		}
	}
	,disableScissor: function() {
		kha_SystemImpl.gl.disable(3089);
	}
	,setDepthMode: function(write,mode) {
		switch(mode) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == 1 && destination == 2) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,setVertexBuffer: function(vertexBuffer) {
		var _g = 0;
		var _g1 = kha_js_graphics4_Graphics.useVertexAttributes;
		while(_g < _g1) {
			var i = _g++;
			kha_SystemImpl.gl.disableVertexAttribArray(i);
		}
		kha_js_graphics4_Graphics.useVertexAttributes = vertexBuffer.set(0);
	}
	,setVertexBuffers: function(vertexBuffers) {
		var _g = 0;
		var _g1 = kha_js_graphics4_Graphics.useVertexAttributes;
		while(_g < _g1) {
			var i = _g++;
			kha_SystemImpl.gl.disableVertexAttribArray(i);
		}
		var offset = 0;
		var _g = 0;
		while(_g < vertexBuffers.length) {
			var vertexBuffer = vertexBuffers[_g];
			++_g;
			offset += vertexBuffer.set(offset);
		}
		kha_js_graphics4_Graphics.useVertexAttributes = offset;
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		indexBuffer.set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + stage.value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set(stage.value);
		}
	}
	,setTextureDepth: function(stage,texture) {
		(js_Boot.__cast(texture , kha_WebGLImage)).setDepth(stage.value);
	}
	,setImageTexture: function(unit,texture) {
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + texunit.value);
		switch(uAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter) {
		case 0:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == 2) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setTexture3DParameters: function(texunit,uAddressing,vAddressing,wAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
	}
	,setTextureCompareMode: function(texunit,enabled) {
		if(enabled) {
			kha_SystemImpl.gl.texParameteri(3553,34892,34894);
			kha_SystemImpl.gl.texParameteri(3553,34893,515);
		} else {
			kha_SystemImpl.gl.texParameteri(3553,34892,0);
		}
	}
	,setCubeMapCompareMode: function(texunit,enabled) {
		if(enabled) {
			kha_SystemImpl.gl.texParameteri(34067,34892,34894);
			kha_SystemImpl.gl.texParameteri(34067,34893,515);
		} else {
			kha_SystemImpl.gl.texParameteri(34067,34892,0);
		}
	}
	,setCubeMap: function(stage,cubeMap) {
		if(cubeMap == null) {
			kha_SystemImpl.gl.activeTexture(33984 + stage.value);
			kha_SystemImpl.gl.bindTexture(34067,null);
		} else {
			cubeMap.set(stage.value);
		}
	}
	,setCubeMapDepth: function(stage,cubeMap) {
		cubeMap.setDepth(stage.value);
	}
	,setCullMode: function(mode) {
		switch(mode) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		if(pipe.stencilFrontMode == 0 && pipe.stencilBackMode == 0 && pipe.stencilFrontBothPass == 0 && pipe.stencilBackBothPass == 0 && pipe.stencilFrontDepthFail == 0 && pipe.stencilBackDepthFail == 0 && pipe.stencilFrontFail == 0 && pipe.stencilBackFail == 0) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			this.setStencilParameters(true,pipe.stencilFrontMode,pipe.stencilFrontBothPass,pipe.stencilFrontDepthFail,pipe.stencilFrontFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
			this.setStencilParameters(false,pipe.stencilBackMode,pipe.stencilBackBothPass,pipe.stencilBackDepthFail,pipe.stencilBackFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		}
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		this.currentPipeline = pipe;
		pipe.set();
		this.colorMaskRed = pipe.colorWriteMasksRed[0];
		this.colorMaskGreen = pipe.colorWriteMasksGreen[0];
		this.colorMaskBlue = pipe.colorWriteMasksBlue[0];
		this.colorMaskAlpha = pipe.colorWriteMasksAlpha[0];
	}
	,setBool: function(location,value) {
		kha_SystemImpl.gl.uniform1i(location.value,value ? 1 : 0);
	}
	,setInt: function(location,value) {
		kha_SystemImpl.gl.uniform1i(location.value,value);
	}
	,setFloat: function(location,value) {
		kha_SystemImpl.gl.uniform1f(location.value,value);
	}
	,setFloat2: function(location,value1,value2) {
		kha_SystemImpl.gl.uniform2f(location.value,value1,value2);
	}
	,setFloat3: function(location,value1,value2,value3) {
		kha_SystemImpl.gl.uniform3f(location.value,value1,value2,value3);
	}
	,setFloat4: function(location,value1,value2,value3,value4) {
		kha_SystemImpl.gl.uniform4f(location.value,value1,value2,value3,value4);
	}
	,setFloats: function(location,values) {
		var webglLocation = location;
		var rawValues = new Float32Array(values.buffer,values.byteOffset,values.byteLength >> 2);
		switch(webglLocation.type) {
		case 35664:
			kha_SystemImpl.gl.uniform2fv(webglLocation.value,rawValues);
			break;
		case 35665:
			kha_SystemImpl.gl.uniform3fv(webglLocation.value,rawValues);
			break;
		case 35666:
			kha_SystemImpl.gl.uniform4fv(webglLocation.value,rawValues);
			break;
		case 35676:
			kha_SystemImpl.gl.uniformMatrix4fv(webglLocation.value,false,rawValues);
			break;
		default:
			kha_SystemImpl.gl.uniform1fv(webglLocation.value,rawValues);
		}
	}
	,setMatrix: function(location,matrix) {
		kha_js_graphics4_Graphics.matrixCache[0] = matrix._00;
		kha_js_graphics4_Graphics.matrixCache[1] = matrix._01;
		kha_js_graphics4_Graphics.matrixCache[2] = matrix._02;
		kha_js_graphics4_Graphics.matrixCache[3] = matrix._03;
		kha_js_graphics4_Graphics.matrixCache[4] = matrix._10;
		kha_js_graphics4_Graphics.matrixCache[5] = matrix._11;
		kha_js_graphics4_Graphics.matrixCache[6] = matrix._12;
		kha_js_graphics4_Graphics.matrixCache[7] = matrix._13;
		kha_js_graphics4_Graphics.matrixCache[8] = matrix._20;
		kha_js_graphics4_Graphics.matrixCache[9] = matrix._21;
		kha_js_graphics4_Graphics.matrixCache[10] = matrix._22;
		kha_js_graphics4_Graphics.matrixCache[11] = matrix._23;
		kha_js_graphics4_Graphics.matrixCache[12] = matrix._30;
		kha_js_graphics4_Graphics.matrixCache[13] = matrix._31;
		kha_js_graphics4_Graphics.matrixCache[14] = matrix._32;
		kha_js_graphics4_Graphics.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv(location.value,false,kha_js_graphics4_Graphics.matrixCache);
	}
	,setMatrix3: function(location,matrix) {
		kha_js_graphics4_Graphics.matrix3Cache[0] = matrix._00;
		kha_js_graphics4_Graphics.matrix3Cache[1] = matrix._01;
		kha_js_graphics4_Graphics.matrix3Cache[2] = matrix._02;
		kha_js_graphics4_Graphics.matrix3Cache[3] = matrix._10;
		kha_js_graphics4_Graphics.matrix3Cache[4] = matrix._11;
		kha_js_graphics4_Graphics.matrix3Cache[5] = matrix._12;
		kha_js_graphics4_Graphics.matrix3Cache[6] = matrix._20;
		kha_js_graphics4_Graphics.matrix3Cache[7] = matrix._21;
		kha_js_graphics4_Graphics.matrix3Cache[8] = matrix._22;
		kha_SystemImpl.gl.uniformMatrix3fv(location.value,false,kha_js_graphics4_Graphics.matrix3Cache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		var size = type == 5123 ? 2 : 4;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * size);
	}
	,convertStencilAction: function(action) {
		switch(action) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,convertCompareMode: function(compareMode) {
		switch(compareMode) {
		case 0:
			return 519;
		case 1:
			return 512;
		case 2:
			return 514;
		case 3:
			return 517;
		case 4:
			return 513;
		case 5:
			return 515;
		case 6:
			return 516;
		case 7:
			return 518;
		}
	}
	,setStencilParameters: function(front,compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		var stencilFunc = this.convertCompareMode(compareMode);
		kha_SystemImpl.gl.stencilMaskSeparate(front ? 1028 : 1029,writeMask);
		var tmp = kha_SystemImpl.gl;
		var tmp1 = this.convertStencilAction(stencilFail);
		tmp.stencilOpSeparate(front ? 1028 : 1029,tmp1,this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
		switch(referenceValue._hx_index) {
		case 0:
			kha_SystemImpl.gl.stencilFuncSeparate(front ? 1028 : 1029,stencilFunc,0,readMask);
			break;
		case 1:
			var value = referenceValue.value;
			kha_SystemImpl.gl.stencilFuncSeparate(front ? 1028 : 1029,stencilFunc,value,readMask);
			break;
		}
	}
	,drawIndexedVerticesInstanced: function(instanceCount,start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		if(this.instancedRenderingAvailable()) {
			var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
			var typeSize = kha_SystemImpl.elementIndexUint == null ? 2 : 4;
			if(kha_SystemImpl.gl2) {
				kha_SystemImpl.gl.drawElementsInstanced(4,count == -1 ? this.indicesCount : count,type,start * typeSize,instanceCount);
			} else {
				this.instancedExtension.drawElementsInstancedANGLE(4,count == -1 ? this.indicesCount : count,type,start * typeSize,instanceCount);
			}
		}
	}
	,instancedRenderingAvailable: function() {
		return this.instancedExtension;
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = true;
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = true;
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = true;
kha_vr_VrInterface.prototype = {
	IsVrEnabled: function() {
		return false;
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrHeight = 0;
	this.vrWidth = 0;
	this.height = 0;
	this.width = 0;
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
	var displayEnabled = false;
	if(displayEnabled) {
		this.vrEnabled = true;
		this.getVRDisplays();
		haxe_Log.trace("Display enabled.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 40, className : "kha.js.vr.VrInterface", methodName : "new"});
	}
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = true;
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	getVRDisplays: function() {
		var _gthis = this;
		var vrDisplayInstance = navigator.getVRDisplays();
		vrDisplayInstance.then(function(displays) {
			if(displays.length > 0) {
				_gthis.frameData = new VRFrameData();
				_gthis.vrDisplay = displays[0];
				_gthis.vrDisplay.depthNear = 0.1;
				_gthis.vrDisplay.depthFar = 1024.0;
				var leftEye = _gthis.vrDisplay.getEyeParameters("left");
				var rightEye = _gthis.vrDisplay.getEyeParameters("right");
				_gthis.width = kha_SystemImpl.khanvas.width;
				_gthis.height = kha_SystemImpl.khanvas.height;
				_gthis.vrWidth = Math.max(leftEye.renderWidth,rightEye.renderWidth) * 2 | 0;
				_gthis.vrHeight = Math.max(leftEye.renderHeight,rightEye.renderHeight) | 0;
			} else {
				haxe_Log.trace("There are no VR displays connected.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 61, className : "kha.js.vr.VrInterface", methodName : "getVRDisplays"});
			}
		});
	}
	,IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_math_FastVector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.FastVector3"] = kha_math_FastVector3;
kha_math_FastVector3.__name__ = true;
kha_math_FastVector3.prototype = {
	__class__: kha_math_FastVector3
};
var kha_netsync_ControllerBuilder = function() { };
$hxClasses["kha.netsync.ControllerBuilder"] = kha_netsync_ControllerBuilder;
kha_netsync_ControllerBuilder.__name__ = true;
var kha_netsync_Session = function(maxPlayers,address,port) {
	this.controllers = new haxe_ds_IntMap();
	kha_netsync_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.netsync.Session"] = kha_netsync_Session;
kha_netsync_Session.__name__ = true;
kha_netsync_Session.the = function() {
	return kha_netsync_Session.instance;
};
kha_netsync_Session.prototype = {
	sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,__class__: kha_netsync_Session
};
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = true;
$hxClasses["Array"] = Array;
Array.__name__ = true;
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
armory_data_ConstData.ltc_mat = [0.000200,-0.000000,1.000000,-0.000000,0.000504,-0.000000,1.000000,-0.000000,0.002016,-0.000000,1.000000,-0.000000,0.004535,-0.000000,1.000000,-0.000000,0.008063,-0.000000,1.000000,-0.000000,0.012598,-0.000000,1.000000,-0.000000,0.018141,-0.000000,1.000000,-0.000000,0.024692,-0.000000,1.000000,-0.000000,0.032252,-0.000000,1.000000,-0.000000,0.040821,-0.000000,1.000000,-0.000000,0.050400,-0.000000,1.000000,-0.000000,0.060989,-0.000000,1.000000,-0.000000,0.072591,-0.000000,1.000000,-0.000000,0.085206,-0.000000,1.000000,-0.000000,0.098836,-0.000000,1.000000,-0.000000,0.113483,-0.000000,1.000000,-0.000000,0.129147,-0.000000,1.000000,-0.000000,0.145828,-0.000000,1.000000,-0.000000,0.163499,-0.000000,1.000000,-0.000000,0.181972,-0.000000,1.000000,-0.000000,0.199498,-0.000000,1.000000,-0.000000,0.220031,-0.000000,1.000000,-0.000000,0.241588,-0.000000,1.000000,-0.000000,0.264120,-0.000000,1.000000,-0.000000,0.287521,-0.000000,1.000000,-0.000000,0.311478,-0.000000,1.000000,-0.000000,0.335127,-0.000000,1.000000,-0.000000,0.359811,-0.000000,1.000000,-0.000000,0.386446,-0.000000,1.000000,-0.000000,0.413161,-0.000000,1.000000,-0.000000,0.439142,-0.000000,1.000000,-0.000000,0.467039,-0.000000,1.000000,-0.000000,0.495170,-0.000000,1.000000,-0.000000,0.522324,-0.000000,1.000000,-0.000000,0.551482,-0.000000,1.000000,-0.000000,0.579621,-0.000000,1.000000,-0.000000,0.608255,-0.000000,1.000000,-0.000000,0.636515,-0.000000,1.000000,-0.000000,0.664835,-0.000000,1.000000,-0.000000,0.692549,-0.000000,1.000000,-0.000000,0.720375,-0.000000,1.000000,-0.000000,0.747238,-0.000000,1.000000,-0.000000,0.773956,-0.000000,1.000000,-0.000000,0.799879,-0.000000,1.000000,-0.000000,0.824889,-0.000000,1.000000,-0.000000,0.849357,-0.000000,1.000000,-0.000000,0.873016,-0.000000,1.000000,-0.000000,0.895670,-0.000000,1.000000,-0.000000,0.917194,-0.000000,1.000000,-0.000000,0.937978,-0.000000,1.000000,-0.000000,0.957872,-0.000000,1.000000,-0.000000,0.976736,-0.000000,1.000000,-0.000000,0.994433,-0.000000,1.000000,-0.000000,1.011206,-0.000000,1.000000,-0.000000,1.026820,-0.000000,1.000000,-0.000000,1.041720,-0.000000,1.000000,-0.000000,1.055657,-0.000000,1.000000,-0.000000,1.068642,-0.000000,1.000000,-0.000000,1.080646,-0.000000,1.000000,-0.000000,1.091637,-0.000000,1.000000,-0.000000,1.101837,-0.000000,1.000000,-0.000000,1.111292,-0.000000,1.000000,-0.000000,1.120025,-0.000000,1.000000,-0.000000,1.127918,-0.000000,1.000000,-0.000000,0.000200,-0.000005,1.000623,0.024938,0.000504,-0.000013,1.000643,0.024938,0.002016,-0.000050,1.000618,0.024938,0.004535,-0.000113,1.000621,0.024938,0.008063,-0.000201,1.000746,0.024938,0.012596,-0.000314,1.000463,0.024937,0.018140,-0.000452,1.000511,0.024939,0.024693,-0.000616,1.000541,0.024938,0.032253,-0.000804,1.000684,0.024938,0.040815,-0.001018,1.000524,0.024940,0.050399,-0.001257,1.000582,0.024937,0.060989,-0.001521,1.000655,0.024937,0.072591,-0.001810,1.000608,0.024938,0.085204,-0.002125,1.000622,0.024939,0.098835,-0.002465,1.000632,0.024937,0.113483,-0.002830,1.000640,0.024939,0.129143,-0.003220,1.000568,0.024938,0.145830,-0.003633,1.000635,0.024938,0.163497,-0.004062,1.000626,0.024938,0.181956,-0.004424,1.000612,0.024924,0.199791,-0.004593,1.000627,0.024890,0.220029,-0.005480,1.000594,0.024935,0.241586,-0.006010,1.000616,0.024933,0.264115,-0.006550,1.000607,0.024927,0.287514,-0.007072,1.000595,0.024909,0.311455,-0.007472,1.000616,0.024872,0.335083,-0.007491,1.000589,0.024755,0.359805,-0.008810,1.000601,0.024877,0.386438,-0.009282,1.000640,0.024824,0.413131,-0.009534,1.000599,0.024708,0.439249,-0.009701,1.000497,0.024573,0.466997,-0.010878,1.000467,0.024652,0.495138,-0.010959,1.000539,0.024455,0.522654,-0.011386,1.000518,0.024318,0.551415,-0.012022,1.000533,0.024216,0.579610,-0.011805,1.000495,0.023867,0.608185,-0.012773,1.000474,0.023834,0.636492,-0.012377,1.000488,0.023327,0.664826,-0.013172,1.000576,0.023205,0.692674,-0.012847,1.000505,0.022708,0.720341,-0.013141,1.000424,0.022349,0.747373,-0.013227,1.000449,0.021871,0.773980,-0.012739,1.000478,0.021171,0.799839,-0.012999,1.000396,0.020606,0.825113,-0.012727,1.000425,0.020006,0.849579,-0.012170,1.000469,0.019089,0.873046,-0.011855,1.000411,0.018291,0.895777,-0.011711,1.000426,0.017534,0.917518,-0.011107,1.000373,0.016542,0.938264,-0.010439,1.000322,0.015512,0.958032,-0.009807,1.000324,0.014491,0.976838,-0.009268,1.000341,0.013468,0.994631,-0.008662,1.000318,0.012376,1.011434,-0.007923,1.000289,0.011187,1.027169,-0.007132,1.000216,0.010078,1.041929,-0.006332,1.000096,0.008924,1.055767,-0.005554,1.000156,0.007770,1.068595,-0.004811,1.000084,0.006611,1.080612,-0.003950,1.000047,0.005485,1.091785,-0.003174,1.000109,0.004352,1.101998,-0.002363,1.000029,0.003180,1.111423,-0.001552,0.999985,0.002091,1.120007,-0.000786,0.999947,0.000991,1.127918,0.000004,1.000000,-0.000004,0.000200,-0.000010,1.002495,0.049907,0.000504,-0.000025,1.002476,0.049908,0.002016,-0.000101,1.002500,0.049908,0.004535,-0.000226,1.002487,0.049908,0.008062,-0.000402,1.002364,0.049908,0.012598,-0.000629,1.002412,0.049908,0.018140,-0.000905,1.002379,0.049908,0.024691,-0.001232,1.002490,0.049907,0.032251,-0.001610,1.002398,0.049908,0.040821,-0.002037,1.002392,0.049908,0.050398,-0.002515,1.002431,0.049907,0.060989,-0.003044,1.002475,0.049908,0.072592,-0.003623,1.002546,0.049907,0.085204,-0.004252,1.002467,0.049907,0.098832,-0.004932,1.002450,0.049908,0.113481,-0.005663,1.002482,0.049907,0.129145,-0.006443,1.002443,0.049907,0.145825,-0.007271,1.002495,0.049906,0.163491,-0.008128,1.002475,0.049903,0.181911,-0.008826,1.002459,0.049879,0.200065,-0.009285,1.002443,0.049824,0.220025,-0.010966,1.002450,0.049897,0.241581,-0.012025,1.002463,0.049893,0.264099,-0.013105,1.002395,0.049881,0.287493,-0.014145,1.002390,0.049855,0.311399,-0.014925,1.002414,0.049769,0.335096,-0.015239,1.002363,0.049591,0.359815,-0.017559,1.002415,0.049777,0.386365,-0.018554,1.002354,0.049675,0.413017,-0.019043,1.002297,0.049444,0.439519,-0.019815,1.002284,0.049253,0.466938,-0.021741,1.002307,0.049327,0.494999,-0.021887,1.002181,0.048922,0.522922,-0.022844,1.002107,0.048677,0.551270,-0.024014,1.002101,0.048478,0.579771,-0.024156,1.002060,0.047904,0.608156,-0.025317,1.002077,0.047594,0.636662,-0.025321,1.001975,0.046876,0.664846,-0.026018,1.001992,0.046354,0.692877,-0.026041,1.001846,0.045504,0.720316,-0.026252,1.001846,0.044655,0.747658,-0.026159,1.001931,0.043670,0.774252,-0.026086,1.001845,0.042515,0.800179,-0.025653,1.001794,0.041211,0.825525,-0.025170,1.001787,0.039823,0.850013,-0.024788,1.001806,0.038409,0.873593,-0.023992,1.001688,0.036767,0.896343,-0.022985,1.001666,0.034900,0.918062,-0.022005,1.001548,0.033010,0.938928,-0.021110,1.001503,0.031143,0.958667,-0.019893,1.001341,0.029059,0.977457,-0.018546,1.001194,0.026888,0.995243,-0.017152,1.001095,0.024713,1.012023,-0.015750,1.001100,0.022496,1.027614,-0.014289,1.000851,0.020153,1.042389,-0.012688,1.000724,0.017839,1.056161,-0.011118,1.000572,0.015529,1.068968,-0.009540,1.000407,0.013240,1.080866,-0.007963,1.000258,0.010940,1.091944,-0.006416,1.000254,0.008716,1.102104,-0.004771,1.000175,0.006434,1.111571,-0.003056,1.000148,0.004169,1.120084,-0.001458,1.000050,0.002033,1.127981,0.000021,0.999987,-0.000027,0.000200,-0.000015,1.005620,0.074940,0.000504,-0.000038,1.005650,0.074939,0.002016,-0.000151,1.005613,0.074939,0.004535,-0.000340,1.005618,0.074939,0.008062,-0.000604,1.005614,0.074939,0.012597,-0.000944,1.005616,0.074940,0.018141,-0.001359,1.005558,0.074939,0.024695,-0.001851,1.005495,0.074940,0.032253,-0.002417,1.005616,0.074939,0.040822,-0.003059,1.005591,0.074940,0.050399,-0.003777,1.005596,0.074940,0.060989,-0.004570,1.005599,0.074939,0.072591,-0.005440,1.005616,0.074940,0.085203,-0.006385,1.005616,0.074939,0.098833,-0.007406,1.005595,0.074938,0.113481,-0.008502,1.005605,0.074938,0.129147,-0.009674,1.005605,0.074937,0.145817,-0.010916,1.005513,0.074937,0.163485,-0.012199,1.005579,0.074928,0.181824,-0.013172,1.005552,0.074885,0.200274,-0.014100,1.005524,0.074825,0.220017,-0.016464,1.005529,0.074928,0.241568,-0.018052,1.005490,0.074914,0.264084,-0.019671,1.005457,0.074898,0.287450,-0.021217,1.005431,0.074860,0.311281,-0.022341,1.005395,0.074717,0.335228,-0.023296,1.005320,0.074526,0.360047,-0.025965,1.005302,0.074649,0.386273,-0.027808,1.005285,0.074575,0.412855,-0.028504,1.005167,0.074237,0.439705,-0.030007,1.005129,0.074013,0.466975,-0.032263,1.005082,0.073967,0.494874,-0.032931,1.004960,0.073475,0.523066,-0.034348,1.004834,0.073084,0.551198,-0.035739,1.004806,0.072657,0.579889,-0.036575,1.004687,0.072029,0.608282,-0.037434,1.004605,0.071309,0.636812,-0.038323,1.004589,0.070507,0.665010,-0.038676,1.004403,0.069424,0.693063,-0.039237,1.004340,0.068370,0.720750,-0.039332,1.004224,0.066988,0.747911,-0.039179,1.004117,0.065447,0.774576,-0.039110,1.004035,0.063838,0.800737,-0.038542,1.004027,0.061923,0.825966,-0.037966,1.003825,0.059859,0.850534,-0.036943,1.003786,0.057529,0.874289,-0.035853,1.003560,0.055081,0.897152,-0.034730,1.003549,0.052476,0.919029,-0.033242,1.003454,0.049647,0.939851,-0.031508,1.003215,0.046670,0.959599,-0.029695,1.002916,0.043588,0.978293,-0.027845,1.002720,0.040401,0.996085,-0.025775,1.002445,0.037060,1.012768,-0.023607,1.002133,0.033726,1.028404,-0.021374,1.001822,0.030217,1.043150,-0.019108,1.001602,0.026820,1.056760,-0.016823,1.001274,0.023372,1.069471,-0.014378,1.000964,0.019891,1.081283,-0.011884,1.000684,0.016405,1.092238,-0.009398,1.000514,0.012950,1.102384,-0.007030,1.000319,0.009579,1.111737,-0.004751,1.000225,0.006384,1.120274,-0.002404,1.000046,0.003192,1.128182,0.000031,1.000020,0.000033,0.000200,-0.000020,1.010006,0.100065,0.000504,-0.000050,1.009927,0.100065,0.002016,-0.000202,1.010026,0.100064,0.004535,-0.000454,1.010018,0.100065,0.008062,-0.000807,1.009891,0.100064,0.012599,-0.001261,1.010175,0.100064,0.018141,-0.001815,1.010067,0.100065,0.024692,-0.002471,1.010014,0.100066,0.032251,-0.003227,1.009950,0.100065,0.040818,-0.004084,1.009963,0.100067,0.050401,-0.005043,1.010032,0.100064,0.060988,-0.006102,1.009979,0.100064,0.072588,-0.007263,1.009984,0.100063,0.085205,-0.008525,1.010023,0.100063,0.098832,-0.009888,1.009960,0.100062,0.113479,-0.011352,1.009974,0.100063,0.129142,-0.012916,1.009945,0.100062,0.145817,-0.014573,1.009924,0.100058,0.163468,-0.016276,1.009912,0.100050,0.181674,-0.017411,1.009859,0.099975,0.200435,-0.019002,1.009842,0.099932,0.220005,-0.021978,1.009820,0.100043,0.241550,-0.024096,1.009778,0.100031,0.264058,-0.026250,1.009765,0.100002,0.287399,-0.028286,1.009724,0.099939,0.311134,-0.029698,1.009596,0.099748,0.335350,-0.031442,1.009508,0.099582,0.360295,-0.034401,1.009475,0.099613,0.386112,-0.037030,1.009329,0.099558,0.412733,-0.038163,1.009250,0.099137,0.439833,-0.040250,1.009125,0.098866,0.467099,-0.042583,1.009011,0.098626,0.494828,-0.044299,1.008803,0.098149,0.523217,-0.045876,1.008712,0.097600,0.551338,-0.047440,1.008509,0.096929,0.579917,-0.048995,1.008371,0.096178,0.608454,-0.049901,1.008212,0.095145,0.636785,-0.051224,1.007963,0.094151,0.665220,-0.051675,1.007741,0.092728,0.693194,-0.052278,1.007616,0.091195,0.721008,-0.052406,1.007327,0.089384,0.748196,-0.052529,1.007219,0.087461,0.774975,-0.051950,1.006851,0.085133,0.801129,-0.051456,1.006732,0.082628,0.826668,-0.050569,1.006612,0.079817,0.851291,-0.049328,1.006374,0.076710,0.875056,-0.047988,1.006183,0.073481,0.897872,-0.046149,1.005742,0.069943,0.919803,-0.044144,1.005514,0.066151,0.940701,-0.042095,1.005153,0.062247,0.960580,-0.039730,1.004843,0.058158,0.979427,-0.037104,1.004535,0.053850,0.997157,-0.034369,1.004023,0.049403,1.013777,-0.031555,1.003622,0.044944,1.029452,-0.028571,1.003212,0.040414,1.044029,-0.025416,1.002698,0.035723,1.057586,-0.022217,1.002202,0.031072,1.070148,-0.019037,1.001703,0.026429,1.081875,-0.015936,1.001322,0.021896,1.092789,-0.012734,1.001053,0.017288,1.102704,-0.009454,1.000604,0.012841,1.112011,-0.006199,1.000387,0.008446,1.120590,-0.003010,1.000166,0.004122,1.128283,0.000027,0.999956,-0.000038,0.000200,-0.000025,1.015664,0.125315,0.000504,-0.000063,1.015664,0.125316,0.002016,-0.000253,1.015727,0.125315,0.004535,-0.000568,1.015695,0.125314,0.008063,-0.001010,1.015823,0.125316,0.012599,-0.001579,1.015867,0.125315,0.018141,-0.002273,1.015758,0.125316,0.024691,-0.003094,1.015662,0.125316,0.032252,-0.004042,1.015674,0.125316,0.040820,-0.005115,1.015678,0.125316,0.050400,-0.006316,1.015684,0.125315,0.060989,-0.007642,1.015685,0.125315,0.072590,-0.009096,1.015703,0.125314,0.085203,-0.010676,1.015654,0.125314,0.098833,-0.012383,1.015670,0.125315,0.113477,-0.014215,1.015635,0.125312,0.129138,-0.016173,1.015599,0.125311,0.145815,-0.018246,1.015610,0.125306,0.163450,-0.020360,1.015564,0.125294,0.181595,-0.021807,1.015460,0.125204,0.200563,-0.023971,1.015440,0.125165,0.220186,-0.027280,1.015412,0.125250,0.241528,-0.030164,1.015342,0.125267,0.264020,-0.032847,1.015269,0.125233,0.287311,-0.035345,1.015232,0.125138,0.310993,-0.037108,1.015063,0.124903,0.335467,-0.039653,1.014970,0.124749,0.360497,-0.042914,1.014819,0.124702,0.385986,-0.046142,1.014685,0.124623,0.412703,-0.048050,1.014543,0.124193,0.439929,-0.050527,1.014315,0.123833,0.467163,-0.052880,1.014087,0.123375,0.494824,-0.055672,1.013898,0.122982,0.523222,-0.057388,1.013647,0.122166,0.551557,-0.059328,1.013403,0.121343,0.579884,-0.061315,1.013059,0.120430,0.608619,-0.062531,1.012745,0.119140,0.637014,-0.063778,1.012425,0.117721,0.665425,-0.064734,1.012067,0.116069,0.693580,-0.065315,1.011712,0.114146,0.721194,-0.065535,1.011200,0.111846,0.748586,-0.065501,1.010896,0.109309,0.775437,-0.065091,1.010576,0.106504,0.801554,-0.064332,1.010136,0.103308,0.827079,-0.063078,1.009629,0.099695,0.851693,-0.061728,1.009233,0.095946,0.875586,-0.059853,1.008726,0.091802,0.898589,-0.057727,1.008412,0.087339,0.920421,-0.055377,1.007767,0.082687,0.941533,-0.052571,1.007529,0.077716,0.961426,-0.049544,1.006929,0.072574,0.980287,-0.046400,1.006393,0.067217,0.998080,-0.042966,1.005872,0.061757,1.014940,-0.039321,1.005346,0.056072,1.030455,-0.035585,1.004609,0.050410,1.045078,-0.031823,1.004151,0.044622,1.058555,-0.027947,1.003421,0.038893,1.071009,-0.023891,1.002704,0.032977,1.082594,-0.019822,1.002023,0.027290,1.093265,-0.015765,1.001403,0.021543,1.103132,-0.011790,1.000944,0.016072,1.112348,-0.007784,1.000550,0.010511,1.120845,-0.003849,1.000224,0.005174,1.128573,0.000057,0.999975,-0.000039,0.000200,-0.000030,1.022609,0.150725,0.000504,-0.000076,1.022728,0.150725,0.002016,-0.000304,1.022728,0.150725,0.004535,-0.000684,1.022733,0.150725,0.008062,-0.001215,1.022715,0.150725,0.012598,-0.001899,1.022720,0.150725,0.018141,-0.002734,1.022659,0.150725,0.024694,-0.003722,1.022801,0.150724,0.032254,-0.004861,1.022779,0.150726,0.040815,-0.006152,1.022693,0.150724,0.050400,-0.007596,1.022716,0.150725,0.060990,-0.009192,1.022733,0.150725,0.072587,-0.010939,1.022630,0.150723,0.085203,-0.012839,1.022676,0.150725,0.098828,-0.014891,1.022659,0.150725,0.113473,-0.017095,1.022589,0.150720,0.129137,-0.019449,1.022572,0.150716,0.145803,-0.021938,1.022508,0.150712,0.163417,-0.024443,1.022471,0.150691,0.181580,-0.026329,1.022406,0.150600,0.200667,-0.028997,1.022336,0.150553,0.220429,-0.032584,1.022296,0.150610,0.241497,-0.036260,1.022202,0.150658,0.263975,-0.039465,1.022119,0.150619,0.287210,-0.042385,1.021988,0.150490,0.310935,-0.044758,1.021771,0.150241,0.335556,-0.047922,1.021658,0.150076,0.360667,-0.051493,1.021437,0.149931,0.386028,-0.054931,1.021228,0.149754,0.412665,-0.058007,1.021023,0.149400,0.439951,-0.060813,1.020723,0.148913,0.467262,-0.063461,1.020332,0.148319,0.494972,-0.066738,1.020097,0.147798,0.523153,-0.068976,1.019630,0.146903,0.551700,-0.071268,1.019245,0.145863,0.580046,-0.073439,1.018797,0.144695,0.608649,-0.075193,1.018201,0.143237,0.637239,-0.076536,1.017746,0.141463,0.665388,-0.077771,1.017111,0.139462,0.693755,-0.078344,1.016609,0.137082,0.721345,-0.078817,1.015863,0.134403,0.748879,-0.078512,1.015390,0.131252,0.775560,-0.078128,1.014652,0.127866,0.801897,-0.077094,1.013877,0.123928,0.827193,-0.075863,1.013021,0.119733,0.851990,-0.073973,1.012395,0.115055,0.875823,-0.071765,1.011595,0.110098,0.898655,-0.069241,1.010862,0.104722,0.920915,-0.066232,1.010185,0.098991,0.941969,-0.062980,1.009588,0.093044,0.961882,-0.059507,1.008777,0.086925,0.980952,-0.055606,1.008252,0.080520,0.998955,-0.051503,1.007633,0.073890,1.015756,-0.047292,1.006908,0.067302,1.031571,-0.042804,1.006338,0.060412,1.046095,-0.038132,1.005512,0.053497,1.059542,-0.033380,1.004592,0.046569,1.072006,-0.028613,1.003731,0.039679,1.083348,-0.023811,1.002871,0.032772,1.093969,-0.018930,1.002068,0.025894,1.103697,-0.014098,1.001284,0.019178,1.112813,-0.009339,1.000820,0.012652,1.121193,-0.004661,1.000324,0.006226,1.128930,0.000052,0.999988,-0.000008,0.000200,-0.000035,1.030857,0.176327,0.000504,-0.000089,1.031137,0.176326,0.002016,-0.000355,1.031049,0.176325,0.004535,-0.000800,1.031105,0.176326,0.008062,-0.001422,1.030973,0.176326,0.012598,-0.002221,1.031168,0.176326,0.018141,-0.003199,1.031093,0.176326,0.024695,-0.004354,1.031297,0.176326,0.032253,-0.005687,1.031091,0.176327,0.040821,-0.007197,1.031012,0.176326,0.050399,-0.008886,1.031068,0.176325,0.060987,-0.010752,1.030967,0.176323,0.072588,-0.012797,1.031028,0.176324,0.085200,-0.015019,1.030985,0.176322,0.098829,-0.017419,1.030983,0.176320,0.113474,-0.019997,1.030953,0.176317,0.129133,-0.022748,1.030891,0.176312,0.145800,-0.025655,1.030825,0.176306,0.163372,-0.028510,1.030781,0.176279,0.181578,-0.030914,1.030683,0.176187,0.200761,-0.034076,1.030574,0.176139,0.220645,-0.037985,1.030476,0.176160,0.241473,-0.042391,1.030384,0.176238,0.263922,-0.046105,1.030241,0.176175,0.287074,-0.049390,1.030049,0.176013,0.310915,-0.052511,1.029839,0.175776,0.335604,-0.056236,1.029608,0.175578,0.360775,-0.060118,1.029355,0.175359,0.386196,-0.063907,1.029052,0.175083,0.412599,-0.067997,1.028766,0.174791,0.439916,-0.071088,1.028326,0.174174,0.467444,-0.074247,1.027890,0.173487,0.495132,-0.077728,1.027374,0.172774,0.523117,-0.080822,1.026763,0.171824,0.551783,-0.083228,1.026205,0.170554,0.580234,-0.085682,1.025614,0.169090,0.608568,-0.087860,1.024668,0.167468,0.637357,-0.089346,1.023939,0.165283,0.665507,-0.090704,1.022946,0.162966,0.693704,-0.091388,1.022010,0.160131,0.721396,-0.091783,1.021085,0.156957,0.748676,-0.091688,1.019894,0.153292,0.775370,-0.090992,1.018608,0.149158,0.801547,-0.089881,1.017646,0.144551,0.827013,-0.088267,1.016355,0.139614,0.851708,-0.086132,1.015446,0.134026,0.875652,-0.083707,1.014321,0.128101,0.898703,-0.080619,1.013454,0.121841,0.920904,-0.077280,1.012634,0.115379,0.942077,-0.073484,1.011770,0.108355,0.962245,-0.069252,1.010894,0.101153,0.981385,-0.064807,1.010114,0.093666,0.999379,-0.060080,1.009294,0.086007,1.016494,-0.055007,1.008591,0.078194,1.032357,-0.049760,1.007821,0.070328,1.047061,-0.044468,1.006871,0.062358,1.060675,-0.038960,1.006062,0.054279,1.073032,-0.033343,1.004911,0.046158,1.084293,-0.027699,1.003791,0.038111,1.094724,-0.022130,1.002744,0.030239,1.104302,-0.016508,1.001815,0.022397,1.113290,-0.010846,1.001083,0.014747,1.121649,-0.005294,1.000490,0.007234,1.129230,0.000071,0.999975,-0.000053,0.000200,-0.000040,1.040431,0.202155,0.000504,-0.000102,1.040912,0.202154,0.002016,-0.000407,1.041328,0.202152,0.004535,-0.000917,1.040877,0.202154,0.008063,-0.001630,1.040867,0.202153,0.012598,-0.002547,1.040870,0.202153,0.018140,-0.003667,1.040808,0.202153,0.024692,-0.004991,1.040861,0.202153,0.032252,-0.006519,1.040861,0.202153,0.040822,-0.008252,1.040864,0.202153,0.050397,-0.010187,1.040717,0.202151,0.060988,-0.012327,1.040791,0.202152,0.072582,-0.014669,1.040640,0.202149,0.085198,-0.017217,1.040716,0.202147,0.098827,-0.019968,1.040748,0.202141,0.113467,-0.022921,1.040632,0.202142,0.129129,-0.026074,1.040606,0.202137,0.145793,-0.029399,1.040566,0.202127,0.163294,-0.032524,1.040459,0.202078,0.181589,-0.035552,1.040315,0.201996,0.200844,-0.039208,1.040221,0.201948,0.220835,-0.043489,1.040047,0.201945,0.241471,-0.048523,1.039921,0.202031,0.263854,-0.052764,1.039756,0.201957,0.286935,-0.056387,1.039497,0.201743,0.310902,-0.060338,1.039252,0.201531,0.335642,-0.064594,1.038954,0.201286,0.360859,-0.068772,1.038582,0.200983,0.386419,-0.073086,1.038160,0.200651,0.412588,-0.077887,1.037724,0.200343,0.439836,-0.081391,1.037182,0.199618,0.467538,-0.085121,1.036602,0.198839,0.495286,-0.088718,1.035893,0.197895,0.523231,-0.092514,1.035121,0.196887,0.551730,-0.095238,1.034127,0.195390,0.580302,-0.097949,1.033131,0.193668,0.608559,-0.100418,1.031962,0.191773,0.637224,-0.102129,1.030838,0.189319,0.665597,-0.103578,1.029511,0.186529,0.693535,-0.104652,1.028263,0.183303,0.721325,-0.104766,1.026611,0.179497,0.748384,-0.104717,1.025128,0.175283,0.775058,-0.103846,1.023385,0.170493,0.801387,-0.102728,1.022236,0.165187,0.826412,-0.100679,1.019908,0.159362,0.851314,-0.098451,1.018839,0.153059,0.875100,-0.095363,1.017306,0.146284,0.898280,-0.092008,1.016151,0.138975,0.920450,-0.088095,1.014880,0.131361,0.941727,-0.083690,1.013556,0.123417,0.962308,-0.079077,1.012998,0.115201,0.981364,-0.073894,1.011841,0.106711,0.999798,-0.068435,1.011021,0.098063,1.016983,-0.062830,1.010194,0.089183,1.033039,-0.056914,1.009292,0.080190,1.047994,-0.050721,1.008474,0.071010,1.061580,-0.044454,1.007386,0.061867,1.074023,-0.038145,1.006135,0.052711,1.085470,-0.031679,1.004890,0.043595,1.095673,-0.025157,1.003627,0.034506,1.105000,-0.018702,1.002331,0.025468,1.113795,-0.012458,1.001278,0.016834,1.122012,-0.006169,1.000548,0.008265,1.129683,0.000078,0.999988,-0.000072,0.000200,-0.000046,1.052496,0.228243,0.000504,-0.000115,1.052079,0.228243,0.002016,-0.000460,1.052079,0.228241,0.004535,-0.001035,1.052091,0.228242,0.008062,-0.001840,1.051962,0.228242,0.012598,-0.002875,1.052087,0.228242,0.018141,-0.004140,1.052088,0.228242,0.024692,-0.005636,1.052096,0.228239,0.032251,-0.007361,1.052029,0.228243,0.040820,-0.009316,1.052038,0.228241,0.050399,-0.011501,1.052042,0.228239,0.060990,-0.013917,1.052046,0.228238,0.072586,-0.016562,1.051990,0.228236,0.085198,-0.019437,1.051946,0.228234,0.098824,-0.022542,1.051879,0.228229,0.113467,-0.025875,1.051841,0.228227,0.129121,-0.029430,1.051724,0.228219,0.145780,-0.033170,1.051672,0.228205,0.163222,-0.036567,1.051556,0.228143,0.181604,-0.040245,1.051382,0.228069,0.200913,-0.044395,1.051230,0.228010,0.221005,-0.049088,1.051062,0.227988,0.241667,-0.054506,1.050881,0.228044,0.263777,-0.059437,1.050643,0.227986,0.286841,-0.063590,1.050312,0.227755,0.310879,-0.068224,1.050009,0.227525,0.335650,-0.072986,1.049597,0.227253,0.360869,-0.077435,1.049121,0.226845,0.386609,-0.082385,1.048587,0.226466,0.412742,-0.087570,1.047987,0.226059,0.439789,-0.091929,1.047308,0.225331,0.467558,-0.096038,1.046423,0.224409,0.495406,-0.099938,1.045481,0.223288,0.523417,-0.104050,1.044512,0.222066,0.551755,-0.107503,1.043408,0.220487,0.580468,-0.110234,1.042016,0.218451,0.608904,-0.112993,1.040535,0.216200,0.637230,-0.115173,1.038934,0.213458,0.665566,-0.116433,1.036961,0.210158,0.693413,-0.117589,1.035130,0.206457,0.721025,-0.117885,1.033080,0.202197,0.748054,-0.117606,1.030752,0.197296,0.774631,-0.116771,1.028608,0.191813,0.800677,-0.115194,1.026350,0.185691,0.826062,-0.113138,1.024472,0.179053,0.850590,-0.110359,1.022174,0.171839,0.874550,-0.107072,1.020381,0.164067,0.897567,-0.103268,1.018777,0.155959,0.919609,-0.098794,1.016886,0.147320,0.941177,-0.094067,1.015880,0.138365,0.961752,-0.088670,1.014616,0.129051,0.981518,-0.082965,1.013807,0.119515,0.999880,-0.076971,1.012793,0.109897,1.017370,-0.070518,1.011894,0.099872,1.033661,-0.063830,1.010943,0.089883,1.048672,-0.057040,1.009802,0.079691,1.062479,-0.049917,1.008670,0.069458,1.075052,-0.042735,1.007429,0.059191,1.086371,-0.035513,1.005991,0.048894,1.096623,-0.028359,1.004468,0.038770,1.105871,-0.021111,1.002927,0.028745,1.114481,-0.013908,1.001728,0.018884,1.122610,-0.006843,1.000740,0.009264,1.130165,0.000062,0.999983,-0.000006,0.000200,-0.000051,1.064931,0.254630,0.000504,-0.000128,1.064668,0.254630,0.002016,-0.000513,1.064794,0.254630,0.004535,-0.001155,1.064851,0.254630,0.008063,-0.002053,1.064966,0.254630,0.012598,-0.003208,1.064840,0.254630,0.018140,-0.004619,1.064602,0.254631,0.024695,-0.006288,1.064965,0.254632,0.032251,-0.008211,1.064795,0.254630,0.040821,-0.010393,1.064802,0.254628,0.050398,-0.012830,1.064758,0.254627,0.060987,-0.015525,1.064731,0.254625,0.072584,-0.018474,1.064615,0.254621,0.085199,-0.021682,1.064672,0.254619,0.098826,-0.025144,1.064630,0.254613,0.113465,-0.028860,1.064515,0.254606,0.129119,-0.032823,1.064416,0.254598,0.145767,-0.036969,1.064347,0.254579,0.163190,-0.040754,1.064132,0.254506,0.181622,-0.044989,1.063951,0.254437,0.200981,-0.049642,1.063745,0.254370,0.221145,-0.054776,1.063547,0.254324,0.241896,-0.060538,1.063289,0.254346,0.263684,-0.066113,1.063013,0.254296,0.286796,-0.070925,1.062625,0.254059,0.310867,-0.076187,1.062216,0.253817,0.335644,-0.081406,1.061703,0.253481,0.360917,-0.086336,1.061066,0.253005,0.386786,-0.091790,1.060454,0.252558,0.412921,-0.097230,1.059568,0.252008,0.439722,-0.102574,1.058706,0.251323,0.467559,-0.106972,1.057682,0.250239,0.495605,-0.111329,1.056612,0.248944,0.523589,-0.115561,1.055101,0.247471,0.551787,-0.119732,1.053745,0.245777,0.580426,-0.122711,1.051829,0.243448,0.608778,-0.125436,1.049642,0.240769,0.637069,-0.127993,1.047749,0.237739,0.665251,-0.129448,1.045244,0.233928,0.692977,-0.130408,1.042279,0.229640,0.720346,-0.130931,1.039693,0.224829,0.747365,-0.130392,1.036675,0.219144,0.773734,-0.129540,1.033719,0.212965,0.799578,-0.127689,1.030774,0.206047,0.825002,-0.125456,1.028551,0.198576,0.849564,-0.122291,1.025800,0.190471,0.873412,-0.118720,1.023657,0.181739,0.896628,-0.114323,1.021381,0.172586,0.918952,-0.109587,1.019674,0.162914,0.940602,-0.104093,1.018126,0.153039,0.960917,-0.098187,1.016339,0.142774,0.980911,-0.091963,1.015440,0.132316,0.999686,-0.085159,1.014377,0.121453,1.017538,-0.078139,1.013498,0.110527,1.033918,-0.070797,1.012332,0.099437,1.049390,-0.063129,1.011368,0.088157,1.063402,-0.055354,1.010111,0.076951,1.076096,-0.047522,1.008774,0.065616,1.087562,-0.039447,1.007202,0.054310,1.097591,-0.031359,1.005346,0.042948,1.106782,-0.023393,1.003710,0.031799,1.115234,-0.015461,1.002116,0.020943,1.123166,-0.007589,1.000858,0.010288,1.130796,0.000104,1.000032,-0.000024,0.000200,-0.000056,1.078780,0.281356,0.000504,-0.000142,1.079271,0.281355,0.002015,-0.000567,1.078635,0.281355,0.004535,-0.001276,1.079164,0.281356,0.008064,-0.002269,1.079300,0.281355,0.012598,-0.003544,1.079149,0.281355,0.018143,-0.005104,1.079329,0.281355,0.024691,-0.006947,1.079073,0.281353,0.032254,-0.009074,1.079253,0.281354,0.040822,-0.011484,1.079176,0.281353,0.050399,-0.014177,1.079057,0.281349,0.060987,-0.017153,1.079007,0.281347,0.072586,-0.020412,1.078998,0.281343,0.085203,-0.023956,1.078962,0.281336,0.098823,-0.027778,1.078839,0.281332,0.113464,-0.031882,1.078783,0.281325,0.129114,-0.036255,1.078633,0.281315,0.145748,-0.040790,1.078545,0.281287,0.163179,-0.045024,1.078311,0.281208,0.181649,-0.049791,1.078135,0.281137,0.201042,-0.054953,1.077845,0.281063,0.221267,-0.060551,1.077576,0.281006,0.242114,-0.066663,1.077257,0.280978,0.263568,-0.072771,1.076897,0.280925,0.286744,-0.078349,1.076405,0.280689,0.310840,-0.084201,1.075898,0.280418,0.335612,-0.089846,1.075287,0.280020,0.360975,-0.095394,1.074482,0.279513,0.386932,-0.101290,1.073617,0.278961,0.413171,-0.107042,1.072719,0.278283,0.439886,-0.113083,1.071698,0.277547,0.467535,-0.118010,1.070213,0.276311,0.495701,-0.122793,1.068857,0.274867,0.523772,-0.127278,1.067037,0.273153,0.551849,-0.131671,1.064923,0.271176,0.580338,-0.135293,1.062749,0.268626,0.608771,-0.138065,1.059944,0.265569,0.636756,-0.140565,1.056851,0.262054,0.664574,-0.142434,1.053461,0.257807,0.692151,-0.143237,1.049910,0.252930,0.719376,-0.143717,1.046426,0.247414,0.745852,-0.143117,1.042377,0.241001,0.772300,-0.141975,1.038789,0.233797,0.798050,-0.140114,1.035290,0.226218,0.823370,-0.137379,1.032374,0.217785,0.847735,-0.134119,1.028853,0.208748,0.871897,-0.129985,1.026395,0.198877,0.894950,-0.125324,1.023787,0.188803,0.917909,-0.120007,1.022073,0.178493,0.939567,-0.114099,1.020098,0.167466,0.960534,-0.107748,1.018851,0.156223,0.980423,-0.100748,1.017362,0.144716,0.999334,-0.093494,1.015961,0.133028,1.017561,-0.085728,1.015059,0.120953,1.034225,-0.077627,1.013888,0.108943,1.049937,-0.069375,1.012898,0.096678,1.064265,-0.060807,1.011635,0.084350,1.077188,-0.052052,1.010095,0.071964,1.088637,-0.043304,1.008399,0.059531,1.098766,-0.034458,1.006397,0.047134,1.107697,-0.025637,1.004354,0.034887,1.116055,-0.016932,1.002611,0.022948,1.123819,-0.008437,1.001023,0.011386,1.131333,0.000087,0.999952,-0.000097,0.000200,-0.000062,1.095622,0.308458,0.000504,-0.000155,1.094863,0.308458,0.002016,-0.000622,1.095169,0.308458,0.004535,-0.001399,1.095156,0.308458,0.008063,-0.002487,1.095413,0.308455,0.012598,-0.003886,1.095147,0.308458,0.018141,-0.005596,1.095150,0.308457,0.024692,-0.007616,1.095140,0.308457,0.032252,-0.009947,1.095098,0.308456,0.040822,-0.012589,1.095096,0.308453,0.050399,-0.015541,1.095070,0.308451,0.060985,-0.018803,1.094922,0.308448,0.072583,-0.022375,1.094902,0.308444,0.085197,-0.026258,1.094882,0.308438,0.098822,-0.030448,1.094775,0.308429,0.113460,-0.034944,1.094641,0.308419,0.129112,-0.039731,1.094530,0.308403,0.145711,-0.044610,1.094332,0.308365,0.163178,-0.049362,1.094149,0.308285,0.181679,-0.054666,1.093876,0.308210,0.201109,-0.060336,1.093603,0.308132,0.221388,-0.066414,1.093250,0.308047,0.242315,-0.072881,1.092835,0.307985,0.263651,-0.079453,1.092391,0.307902,0.286720,-0.085882,1.091866,0.307688,0.310817,-0.092274,1.091225,0.307379,0.335562,-0.098306,1.090346,0.306906,0.361043,-0.104572,1.089423,0.306374,0.387051,-0.110843,1.088437,0.305710,0.413405,-0.117062,1.087228,0.304906,0.440122,-0.123501,1.085879,0.304017,0.467522,-0.129245,1.084197,0.302783,0.495721,-0.134285,1.082284,0.301104,0.523925,-0.139143,1.080109,0.299142,0.551814,-0.143638,1.077043,0.296825,0.579878,-0.147774,1.074071,0.294071,0.608316,-0.150724,1.070621,0.290519,0.636059,-0.153168,1.066390,0.286424,0.663481,-0.155139,1.062069,0.281559,0.690753,-0.155944,1.057211,0.276024,0.717767,-0.156176,1.052682,0.269622,0.743937,-0.155783,1.047747,0.262532,0.770214,-0.154245,1.043510,0.254609,0.795542,-0.152192,1.039121,0.246007,0.821099,-0.149256,1.035962,0.236663,0.845452,-0.145605,1.032320,0.226751,0.869780,-0.141186,1.029390,0.216165,0.893141,-0.136137,1.026485,0.204937,0.916034,-0.130332,1.024389,0.193624,0.938089,-0.124040,1.022270,0.181756,0.959488,-0.117011,1.020457,0.169339,0.979594,-0.109617,1.018871,0.156875,0.998912,-0.101562,1.017533,0.144288,1.017100,-0.093164,1.016445,0.131370,1.034413,-0.084488,1.015453,0.118322,1.050347,-0.075377,1.014259,0.104963,1.064958,-0.066108,1.013057,0.091722,1.078045,-0.056702,1.011491,0.078231,1.089749,-0.047106,1.009662,0.064797,1.099831,-0.037467,1.007417,0.051315,1.108789,-0.027990,1.005144,0.038064,1.116865,-0.018464,1.002925,0.025008,1.124609,-0.009068,1.001221,0.012250,1.132040,0.000093,0.999984,-0.000071,0.000200,-0.000067,1.112554,0.335981,0.000504,-0.000169,1.112660,0.335981,0.002016,-0.000677,1.112827,0.335981,0.004533,-0.001523,1.112147,0.335982,0.008063,-0.002709,1.112882,0.335979,0.012598,-0.004233,1.112891,0.335980,0.018141,-0.006095,1.112882,0.335980,0.024693,-0.008296,1.112877,0.335978,0.032252,-0.010834,1.112860,0.335976,0.040824,-0.013713,1.112965,0.335974,0.050398,-0.016927,1.112753,0.335971,0.060991,-0.020482,1.112826,0.335970,0.072587,-0.024371,1.112676,0.335962,0.085199,-0.028597,1.112593,0.335955,0.098822,-0.033159,1.112453,0.335943,0.113461,-0.038052,1.112329,0.335930,0.129108,-0.043255,1.112144,0.335910,0.145665,-0.048412,1.111905,0.335857,0.163185,-0.053786,1.111668,0.335781,0.181710,-0.059608,1.111345,0.335696,0.201166,-0.065794,1.110979,0.335606,0.221489,-0.072361,1.110553,0.335505,0.242471,-0.079184,1.110112,0.335396,0.263900,-0.086213,1.109584,0.335271,0.286688,-0.093491,1.108927,0.335089,0.310773,-0.100406,1.108091,0.334737,0.335573,-0.106987,1.107169,0.334208,0.361117,-0.113844,1.106097,0.333600,0.387175,-0.120463,1.104826,0.332828,0.413665,-0.127245,1.103415,0.331929,0.440386,-0.133927,1.101632,0.330851,0.467527,-0.140496,1.099563,0.329538,0.495630,-0.145874,1.096956,0.327618,0.523864,-0.150997,1.094201,0.325390,0.551705,-0.155713,1.090342,0.322688,0.579383,-0.159993,1.086010,0.319483,0.607301,-0.163238,1.081226,0.315522,0.634873,-0.165667,1.076065,0.310840,0.662028,-0.167606,1.070466,0.305377,0.688755,-0.168626,1.064601,0.299056,0.715612,-0.168578,1.059269,0.291963,0.741604,-0.167961,1.053648,0.284018,0.767757,-0.166439,1.048928,0.275474,0.793264,-0.164023,1.044343,0.266056,0.818165,-0.160965,1.039909,0.255750,0.843255,-0.156896,1.036180,0.244843,0.867249,-0.152262,1.032303,0.233464,0.890994,-0.146655,1.029365,0.221128,0.913829,-0.140574,1.026607,0.208554,0.936508,-0.133640,1.024512,0.195772,0.957720,-0.126220,1.022421,0.182420,0.978940,-0.118164,1.021293,0.168852,0.998285,-0.109558,1.019444,0.155261,1.016764,-0.100562,1.017825,0.141395,1.034387,-0.091064,1.016996,0.127311,1.050916,-0.081468,1.015945,0.113089,1.065652,-0.071463,1.014547,0.098879,1.079155,-0.061240,1.013066,0.084468,1.090822,-0.050980,1.010788,0.069940,1.101100,-0.040549,1.008563,0.055475,1.109824,-0.030101,1.005950,0.041033,1.117828,-0.019884,1.003453,0.027022,1.125443,-0.009900,1.001484,0.013306,1.132869,0.000094,1.000004,-0.000046,0.000200,-0.000073,1.132849,0.363970,0.000504,-0.000183,1.132155,0.363969,0.002016,-0.000734,1.132516,0.363969,0.004535,-0.001651,1.132256,0.363969,0.008062,-0.002934,1.132318,0.363966,0.012597,-0.004585,1.132386,0.363968,0.018141,-0.006602,1.132457,0.363967,0.024693,-0.008987,1.132511,0.363967,0.032252,-0.011737,1.132488,0.363965,0.040819,-0.014853,1.132241,0.363959,0.050398,-0.018336,1.132372,0.363958,0.060988,-0.022185,1.132373,0.363954,0.072582,-0.026396,1.132137,0.363943,0.085195,-0.030973,1.132071,0.363935,0.098822,-0.035913,1.131978,0.363922,0.113461,-0.041209,1.131801,0.363905,0.129116,-0.046833,1.131535,0.363867,0.145640,-0.052346,1.131290,0.363814,0.163199,-0.058275,1.131046,0.363734,0.181742,-0.064623,1.130671,0.363642,0.201227,-0.071336,1.130224,0.363539,0.221587,-0.078396,1.129758,0.363419,0.242625,-0.085545,1.129213,0.363256,0.264183,-0.093110,1.128549,0.363097,0.286668,-0.101206,1.127767,0.362939,0.310745,-0.108586,1.126796,0.362516,0.335602,-0.115827,1.125686,0.361953,0.361202,-0.123212,1.124451,0.361275,0.387298,-0.130294,1.122861,0.360376,0.413918,-0.137553,1.121154,0.359362,0.440680,-0.144577,1.118825,0.358069,0.467667,-0.151558,1.116002,0.356581,0.495449,-0.157621,1.112778,0.354531,0.523514,-0.162844,1.108842,0.351915,0.551250,-0.167744,1.104075,0.348797,0.578629,-0.172132,1.098733,0.345222,0.605757,-0.175733,1.092224,0.340665,0.633392,-0.178109,1.086201,0.335286,0.660783,-0.180009,1.080110,0.329286,0.687219,-0.181105,1.073419,0.322319,0.713873,-0.181046,1.067410,0.314616,0.740094,-0.180219,1.061414,0.306014,0.765233,-0.178559,1.055287,0.296704,0.790885,-0.175806,1.049727,0.286394,0.815464,-0.172354,1.044519,0.275189,0.840259,-0.168048,1.040375,0.263441,0.864285,-0.162904,1.036010,0.250918,0.888806,-0.157194,1.033525,0.237611,0.911682,-0.150486,1.029490,0.223809,0.934481,-0.143212,1.026778,0.209705,0.956337,-0.135233,1.024632,0.195281,0.977380,-0.126650,1.022737,0.180878,0.997427,-0.117552,1.021110,0.166112,1.016666,-0.107814,1.019869,0.151231,1.034337,-0.097814,1.018543,0.136375,1.051082,-0.087330,1.017476,0.121187,1.066326,-0.076614,1.016083,0.106043,1.079897,-0.065793,1.014227,0.090566,1.092136,-0.054654,1.012334,0.074988,1.102315,-0.043516,1.009627,0.059577,1.111105,-0.032509,1.006808,0.044202,1.118861,-0.021381,1.003917,0.028995,1.126363,-0.010489,1.001670,0.014269,1.133598,0.000083,0.999989,-0.000035,0.000200,-0.000079,1.155026,0.392470,0.000504,-0.000198,1.154184,0.392469,0.002016,-0.000791,1.153990,0.392469,0.004535,-0.001780,1.154045,0.392469,0.008063,-0.003164,1.154007,0.392466,0.012598,-0.004944,1.154022,0.392469,0.018141,-0.007119,1.154015,0.392468,0.024692,-0.009690,1.154017,0.392466,0.032254,-0.012656,1.154069,0.392465,0.040826,-0.016018,1.153980,0.392459,0.050399,-0.019771,1.153911,0.392456,0.060987,-0.023919,1.153860,0.392447,0.072588,-0.028461,1.153777,0.392442,0.085197,-0.033393,1.153582,0.392428,0.098822,-0.038716,1.153434,0.392412,0.113462,-0.044422,1.153271,0.392390,0.129101,-0.050455,1.153019,0.392359,0.145642,-0.056392,1.152721,0.392283,0.163223,-0.062859,1.152404,0.392201,0.181779,-0.069721,1.151941,0.392099,0.201289,-0.076968,1.151422,0.391978,0.221678,-0.084518,1.150861,0.391833,0.242752,-0.092017,1.150156,0.391618,0.264474,-0.100184,1.149402,0.391421,0.286768,-0.108921,1.148545,0.391249,0.310719,-0.116815,1.147388,0.390773,0.335638,-0.124785,1.146042,0.390168,0.361240,-0.132630,1.144529,0.389394,0.387443,-0.140298,1.142602,0.388391,0.414067,-0.147913,1.140361,0.387199,0.440904,-0.155362,1.137612,0.385742,0.467771,-0.162574,1.133659,0.383926,0.494907,-0.169312,1.129246,0.381715,0.522801,-0.174778,1.124228,0.378678,0.550751,-0.179824,1.118697,0.375158,0.578018,-0.184284,1.112019,0.370851,0.605291,-0.188215,1.105151,0.365928,0.632269,-0.190760,1.097677,0.360114,0.659432,-0.192457,1.090816,0.353498,0.685839,-0.193458,1.083286,0.346094,0.711876,-0.193502,1.076245,0.337754,0.738184,-0.192371,1.069684,0.328412,0.763723,-0.190531,1.063249,0.318164,0.789192,-0.187726,1.057265,0.306900,0.813744,-0.183783,1.051177,0.295021,0.838408,-0.179328,1.045902,0.282144,0.862116,-0.173573,1.040853,0.268438,0.885636,-0.167350,1.036515,0.254108,0.909342,-0.160229,1.033269,0.239082,0.931962,-0.152529,1.029627,0.224024,0.954671,-0.144080,1.027507,0.208393,0.975707,-0.135023,1.024657,0.192630,0.996644,-0.125258,1.022998,0.176741,1.015817,-0.115089,1.021234,0.160926,1.034301,-0.104317,1.020025,0.145042,1.051131,-0.093218,1.018739,0.129052,1.066836,-0.081828,1.017419,0.112905,1.081027,-0.070132,1.015714,0.096578,1.093225,-0.058382,1.013465,0.080077,1.103691,-0.046527,1.010853,0.063580,1.112431,-0.034624,1.007702,0.047118,1.120035,-0.022913,1.004551,0.031018,1.127336,-0.011284,1.001924,0.015283,1.134510,0.000170,0.999937,-0.000058,0.000200,-0.000084,1.177044,0.421534,0.000504,-0.000212,1.177312,0.421533,0.002016,-0.000850,1.177730,0.421533,0.004535,-0.001912,1.177722,0.421533,0.008063,-0.003399,1.177844,0.421529,0.012598,-0.005310,1.177768,0.421533,0.018141,-0.007646,1.177730,0.421531,0.024692,-0.010407,1.177663,0.421530,0.032252,-0.013592,1.177681,0.421527,0.040821,-0.017201,1.177562,0.421524,0.050401,-0.021234,1.177445,0.421516,0.060988,-0.025688,1.177461,0.421509,0.072590,-0.030565,1.177364,0.421498,0.085200,-0.035860,1.177205,0.421482,0.098823,-0.041572,1.177011,0.421462,0.113465,-0.047694,1.176794,0.421436,0.129094,-0.054122,1.176504,0.421396,0.145652,-0.060530,1.176203,0.421311,0.163245,-0.067517,1.175805,0.421218,0.181825,-0.074919,1.175271,0.421108,0.201360,-0.082700,1.174717,0.420974,0.221773,-0.090727,1.174021,0.420795,0.242908,-0.098719,1.173173,0.420536,0.264742,-0.107417,1.172285,0.420296,0.287091,-0.116601,1.171326,0.420065,0.310723,-0.125265,1.169907,0.419582,0.335685,-0.133876,1.168352,0.418912,0.361285,-0.142140,1.166322,0.418006,0.387562,-0.150436,1.164136,0.416899,0.414175,-0.158388,1.161162,0.415513,0.441021,-0.166258,1.157608,0.413836,0.467698,-0.173720,1.152519,0.411702,0.494730,-0.180843,1.147020,0.409102,0.522524,-0.186906,1.141256,0.405789,0.550055,-0.192004,1.134114,0.401759,0.577512,-0.196588,1.127086,0.397153,0.604348,-0.200420,1.119029,0.391767,0.630970,-0.203320,1.110308,0.385573,0.658023,-0.204883,1.102643,0.378245,0.684422,-0.205716,1.094573,0.370191,0.710405,-0.205767,1.086405,0.361231,0.736417,-0.204513,1.078712,0.351106,0.761836,-0.202281,1.071619,0.340096,0.787140,-0.199395,1.064873,0.328139,0.812197,-0.195185,1.058313,0.315044,0.836342,-0.190191,1.052085,0.300933,0.860311,-0.184343,1.046705,0.286411,0.883597,-0.177415,1.041072,0.270897,0.906852,-0.170003,1.036797,0.254825,0.929991,-0.161592,1.033264,0.238176,0.952478,-0.152792,1.030250,0.221581,0.974216,-0.143032,1.027331,0.204378,0.995372,-0.132922,1.025135,0.187470,1.015330,-0.122009,1.023250,0.170538,1.034070,-0.110740,1.022021,0.153777,1.051295,-0.099016,1.020271,0.136916,1.067460,-0.086920,1.018948,0.119880,1.082022,-0.074729,1.017336,0.102565,1.094378,-0.062036,1.014820,0.084994,1.104998,-0.049413,1.011999,0.067650,1.113773,-0.036812,1.008711,0.050148,1.121263,-0.024274,1.005141,0.032976,1.128420,-0.012038,1.002196,0.016239,1.135496,0.000106,1.000042,-0.000062,0.000200,-0.000090,1.203048,0.451217,0.000504,-0.000227,1.203226,0.451215,0.002016,-0.000909,1.203450,0.451215,0.004535,-0.002046,1.203569,0.451215,0.008062,-0.003638,1.203609,0.451209,0.012598,-0.005684,1.203580,0.451214,0.018141,-0.008185,1.203515,0.451212,0.024694,-0.011141,1.203618,0.451211,0.032253,-0.014549,1.203609,0.451207,0.040815,-0.018409,1.203302,0.451203,0.050401,-0.022727,1.203454,0.451195,0.060990,-0.027495,1.203480,0.451188,0.072591,-0.032713,1.203220,0.451172,0.085203,-0.038378,1.203058,0.451154,0.098829,-0.044489,1.202838,0.451130,0.113466,-0.051031,1.202530,0.451098,0.129084,-0.057808,1.202270,0.451041,0.145669,-0.064769,1.201904,0.450956,0.163278,-0.072278,1.201411,0.450853,0.181880,-0.080224,1.200825,0.450721,0.201436,-0.088537,1.200164,0.450566,0.221865,-0.097009,1.199335,0.450351,0.243083,-0.105591,1.198383,0.450062,0.265033,-0.114818,1.197380,0.449769,0.287456,-0.124372,1.196137,0.449438,0.310758,-0.133892,1.194554,0.448974,0.335721,-0.143052,1.192649,0.448216,0.361348,-0.151868,1.190233,0.447202,0.387573,-0.160644,1.187211,0.445926,0.414159,-0.169028,1.183452,0.444313,0.440950,-0.177169,1.178562,0.442315,0.467998,-0.185090,1.173540,0.439960,0.494566,-0.192396,1.166344,0.436989,0.521730,-0.198915,1.159283,0.433439,0.549405,-0.204240,1.151503,0.428984,0.576755,-0.208861,1.143004,0.423839,0.603635,-0.212734,1.134099,0.418012,0.629979,-0.215712,1.124555,0.411445,0.656597,-0.217385,1.115293,0.403628,0.683317,-0.218093,1.106460,0.394639,0.708990,-0.217835,1.097389,0.385012,0.734898,-0.216774,1.088940,0.373999,0.760342,-0.214120,1.080385,0.362128,0.785517,-0.210821,1.072959,0.349184,0.809933,-0.206443,1.065450,0.335080,0.834339,-0.200942,1.058701,0.320257,0.858793,-0.194938,1.052711,0.304133,0.882300,-0.187615,1.047044,0.287771,0.905560,-0.179626,1.042083,0.270571,0.927916,-0.170753,1.037077,0.252741,0.950415,-0.161270,1.033200,0.234656,0.972920,-0.151239,1.030418,0.216652,0.993893,-0.140358,1.027479,0.198252,1.014204,-0.128963,1.024897,0.180113,1.033878,-0.117128,1.023648,0.162282,1.051754,-0.104678,1.022230,0.144366,1.067924,-0.092000,1.020453,0.126455,1.082643,-0.078837,1.018518,0.108194,1.095503,-0.065669,1.016199,0.089966,1.106290,-0.052345,1.013113,0.071530,1.115219,-0.039024,1.009636,0.053158,1.122587,-0.025789,1.005801,0.034959,1.129461,-0.012622,1.002442,0.017222,1.136468,0.000152,0.999964,-0.000065,0.000200,-0.000096,1.231156,0.481574,0.000504,-0.000243,1.232187,0.481572,0.002016,-0.000971,1.231948,0.481572,0.004535,-0.002184,1.231919,0.481572,0.008061,-0.003882,1.231453,0.481566,0.012597,-0.006066,1.231800,0.481572,0.018142,-0.008736,1.231756,0.481569,0.024693,-0.011889,1.232062,0.481570,0.032254,-0.015528,1.231915,0.481563,0.040822,-0.019650,1.231863,0.481559,0.050402,-0.024255,1.231737,0.481550,0.060992,-0.029342,1.231678,0.481537,0.072592,-0.034908,1.231537,0.481521,0.085207,-0.040953,1.231336,0.481499,0.098834,-0.047469,1.231071,0.481469,0.113474,-0.054441,1.230757,0.481431,0.129077,-0.061556,1.230424,0.481359,0.145691,-0.069091,1.230022,0.481269,0.163321,-0.077151,1.229461,0.481156,0.181936,-0.085636,1.228718,0.481011,0.201516,-0.094484,1.228023,0.480830,0.221963,-0.103362,1.227057,0.480562,0.243264,-0.112628,1.225997,0.480247,0.265291,-0.122366,1.224744,0.479891,0.287824,-0.132256,1.223255,0.479461,0.310927,-0.142614,1.221348,0.478978,0.335749,-0.152326,1.218953,0.478132,0.361361,-0.161747,1.215806,0.476971,0.387480,-0.170879,1.211853,0.475477,0.414231,-0.179865,1.207783,0.473686,0.441065,-0.188331,1.202051,0.471415,0.467923,-0.196454,1.195463,0.468647,0.494526,-0.204048,1.187542,0.465459,0.521318,-0.211020,1.179235,0.461650,0.548654,-0.216520,1.170110,0.456868,0.575778,-0.221098,1.160163,0.451227,0.602610,-0.224923,1.149751,0.444866,0.628891,-0.227895,1.139169,0.437577,0.655635,-0.230020,1.129736,0.429369,0.682115,-0.230419,1.119516,0.419673,0.707514,-0.229789,1.108277,0.409143,0.733169,-0.228520,1.099159,0.397296,0.758342,-0.225793,1.089839,0.384578,0.783477,-0.222049,1.081428,0.370323,0.808497,-0.217562,1.073742,0.355253,0.832790,-0.211697,1.065850,0.339282,0.856677,-0.204989,1.058834,0.322181,0.880662,-0.197653,1.053291,0.304610,0.903474,-0.188858,1.046822,0.286042,0.926313,-0.179746,1.041663,0.267224,0.948458,-0.169542,1.036532,0.247978,0.970873,-0.159005,1.033008,0.228535,0.992958,-0.147658,1.029844,0.208819,1.013413,-0.135771,1.026930,0.189486,1.033483,-0.123256,1.025545,0.170422,1.051872,-0.110401,1.023935,0.152075,1.068396,-0.096860,1.022092,0.133169,1.083731,-0.083259,1.020221,0.114022,1.096849,-0.069266,1.017663,0.094772,1.107864,-0.055203,1.014524,0.075432,1.116600,-0.041097,1.010514,0.055980,1.123871,-0.027083,1.006313,0.036839,1.130718,-0.013510,1.002778,0.018156,1.137649,0.000154,1.000033,-0.000028,0.000200,-0.000103,1.264025,0.512670,0.000504,-0.000258,1.262437,0.512667,0.002016,-0.001033,1.262691,0.512668,0.004535,-0.002325,1.262834,0.512667,0.008063,-0.004133,1.262783,0.512659,0.012598,-0.006458,1.262803,0.512666,0.018141,-0.009299,1.262720,0.512665,0.024683,-0.012652,1.262061,0.512655,0.032257,-0.016532,1.262858,0.512656,0.040826,-0.020919,1.262709,0.512649,0.050403,-0.025820,1.262685,0.512639,0.060993,-0.031233,1.262544,0.512625,0.072597,-0.037157,1.262435,0.512607,0.085211,-0.043587,1.262209,0.512581,0.098842,-0.050520,1.261907,0.512544,0.113484,-0.057926,1.261575,0.512500,0.129097,-0.065460,1.261293,0.512420,0.145727,-0.073543,1.260736,0.512316,0.163375,-0.082134,1.260117,0.512190,0.182011,-0.091173,1.259299,0.512024,0.201598,-0.100540,1.258381,0.511810,0.222084,-0.109931,1.257293,0.511505,0.243446,-0.119838,1.256050,0.511151,0.265574,-0.130090,1.254607,0.510724,0.288230,-0.140421,1.252808,0.510191,0.311336,-0.151343,1.250489,0.509627,0.335719,-0.161689,1.247279,0.508688,0.361314,-0.171748,1.243467,0.507393,0.387541,-0.181399,1.239145,0.505758,0.414204,-0.190768,1.233760,0.503676,0.441092,-0.199659,1.227433,0.501129,0.467789,-0.207934,1.219247,0.498078,0.494454,-0.215747,1.210441,0.494630,0.520950,-0.222869,1.200559,0.490467,0.547802,-0.228881,1.189872,0.485444,0.575563,-0.233760,1.180081,0.479268,0.602426,-0.237566,1.168544,0.472272,0.628772,-0.240447,1.156546,0.464390,0.654963,-0.242427,1.145123,0.455345,0.681384,-0.242980,1.134322,0.444885,0.707173,-0.242150,1.122665,0.433338,0.732477,-0.240435,1.111733,0.420647,0.757567,-0.237806,1.101271,0.406799,0.782341,-0.233503,1.091341,0.391761,0.806690,-0.228346,1.082042,0.375576,0.830804,-0.222386,1.073504,0.358545,0.854940,-0.215141,1.065880,0.340431,0.878709,-0.207207,1.058850,0.321690,0.901928,-0.198273,1.052588,0.301930,0.924845,-0.188476,1.046521,0.281513,0.946932,-0.177996,1.040966,0.261234,0.969256,-0.166644,1.036670,0.240356,0.991323,-0.154968,1.032694,0.219748,1.013013,-0.142425,1.030061,0.199103,1.032845,-0.129456,1.027254,0.178936,1.051887,-0.115763,1.025497,0.159243,1.069179,-0.101851,1.023807,0.139560,1.084499,-0.087357,1.021441,0.119607,1.097921,-0.072796,1.018780,0.099501,1.109281,-0.058037,1.015566,0.079211,1.118194,-0.043226,1.011494,0.058873,1.125351,-0.028633,1.007089,0.038736,1.132002,-0.013996,1.003014,0.019063,1.138951,0.000132,1.000036,-0.000007,0.000200,-0.000109,1.296791,0.544571,0.000504,-0.000274,1.296055,0.544568,0.002016,-0.001098,1.297239,0.544568,0.004535,-0.002470,1.296600,0.544568,0.008062,-0.004390,1.296368,0.544559,0.012597,-0.006860,1.296454,0.544566,0.018141,-0.009878,1.296522,0.544565,0.024693,-0.013444,1.296536,0.544560,0.032256,-0.017559,1.296638,0.544557,0.040824,-0.022218,1.296491,0.544547,0.050408,-0.027426,1.296552,0.544532,0.060997,-0.033173,1.296283,0.544518,0.072600,-0.039463,1.296113,0.544496,0.085220,-0.046292,1.295894,0.544466,0.098851,-0.053648,1.295545,0.544422,0.113496,-0.061487,1.295201,0.544371,0.129112,-0.069467,1.294754,0.544273,0.145765,-0.078092,1.294209,0.544160,0.163431,-0.087231,1.293534,0.544017,0.182088,-0.096837,1.292580,0.543828,0.201698,-0.106713,1.291586,0.543585,0.222231,-0.116699,1.290325,0.543238,0.243653,-0.127208,1.288888,0.542836,0.265855,-0.137949,1.287131,0.542329,0.288623,-0.148847,1.284936,0.541700,0.311830,-0.160204,1.282109,0.540997,0.335728,-0.171324,1.278036,0.540045,0.361403,-0.181915,1.273912,0.538603,0.387647,-0.192124,1.268881,0.536741,0.414217,-0.201807,1.262363,0.534432,0.441090,-0.211093,1.254755,0.531623,0.467823,-0.219678,1.245456,0.528314,0.494361,-0.227581,1.234953,0.524391,0.521264,-0.235087,1.224839,0.519902,0.547881,-0.241508,1.213175,0.514574,0.574965,-0.246315,1.200505,0.507837,0.601847,-0.250061,1.187901,0.500286,0.628207,-0.252822,1.174601,0.491502,0.654445,-0.254691,1.161944,0.481726,0.680175,-0.255318,1.149305,0.470727,0.706168,-0.254257,1.136708,0.458045,0.731458,-0.252100,1.124047,0.444438,0.756378,-0.249115,1.112942,0.429611,0.781311,-0.244899,1.101800,0.413501,0.805755,-0.239225,1.091662,0.395889,0.829867,-0.232830,1.082291,0.377860,0.853067,-0.225193,1.072820,0.358704,0.877084,-0.216648,1.065415,0.338413,0.900123,-0.207390,1.058403,0.317596,0.923370,-0.197095,1.051412,0.296301,0.946021,-0.186084,1.045877,0.274498,0.967669,-0.174262,1.040316,0.252565,0.989761,-0.161814,1.035489,0.230312,1.012163,-0.149076,1.032540,0.208746,1.032547,-0.135299,1.029598,0.187180,1.052032,-0.121277,1.027355,0.166482,1.069907,-0.106582,1.025622,0.145939,1.085563,-0.091589,1.023244,0.125362,1.099447,-0.076263,1.020661,0.104087,1.110848,-0.060825,1.017035,0.083036,1.119923,-0.045319,1.012675,0.061719,1.126805,-0.029852,1.007668,0.040583,1.133282,-0.014846,1.003335,0.019969,1.140128,0.000149,1.000024,-0.000037,0.000200,-0.000116,1.334863,0.577350,0.000504,-0.000291,1.333350,0.577348,0.002015,-0.001164,1.332853,0.577347,0.004535,-0.002618,1.333295,0.577347,0.008062,-0.004655,1.333189,0.577336,0.012598,-0.007273,1.333309,0.577345,0.018141,-0.010472,1.333274,0.577342,0.024694,-0.014253,1.333231,0.577339,0.032254,-0.018614,1.333265,0.577332,0.040827,-0.023556,1.333261,0.577321,0.050400,-0.029069,1.332893,0.577309,0.061000,-0.035166,1.332998,0.577288,0.072608,-0.041833,1.332901,0.577263,0.085227,-0.049067,1.332603,0.577226,0.098864,-0.056860,1.332264,0.577177,0.113507,-0.065114,1.331825,0.577109,0.129146,-0.073610,1.331311,0.577005,0.145808,-0.082766,1.330639,0.576872,0.163494,-0.092458,1.329878,0.576709,0.182176,-0.102639,1.328889,0.576501,0.201804,-0.112983,1.327710,0.576207,0.222394,-0.123650,1.326256,0.575823,0.243881,-0.134780,1.324593,0.575363,0.266122,-0.145931,1.322426,0.574751,0.289043,-0.157500,1.319837,0.574033,0.312330,-0.169208,1.316301,0.573181,0.336120,-0.181125,1.312251,0.572188,0.361506,-0.192232,1.307003,0.570631,0.387757,-0.202981,1.301068,0.568558,0.414365,-0.213160,1.293695,0.566027,0.440986,-0.222617,1.283958,0.562942,0.467943,-0.231583,1.274057,0.559219,0.494821,-0.239881,1.262864,0.554913,0.521486,-0.247336,1.250633,0.549953,0.547884,-0.253921,1.237448,0.544251,0.574582,-0.259099,1.223164,0.537120,0.601342,-0.262695,1.208784,0.528650,0.627861,-0.265337,1.194424,0.518978,0.653745,-0.266872,1.179361,0.508525,0.679348,-0.267403,1.165010,0.496705,0.705068,-0.266429,1.151693,0.482926,0.730312,-0.263829,1.137584,0.468519,0.755576,-0.260491,1.125328,0.452213,0.780371,-0.256166,1.113759,0.435127,0.804632,-0.250079,1.101656,0.416833,0.828983,-0.243181,1.091235,0.397009,0.852585,-0.235383,1.081475,0.376647,0.875237,-0.226031,1.071806,0.355506,0.899152,-0.216343,1.064453,0.333133,0.922121,-0.205772,1.057161,0.311073,0.944523,-0.193980,1.050447,0.287781,0.967313,-0.181920,1.044531,0.264350,0.989042,-0.168822,1.039312,0.241128,1.010881,-0.155350,1.035298,0.218138,1.032368,-0.141231,1.032073,0.195579,1.052254,-0.126521,1.029395,0.173399,1.070207,-0.111243,1.026938,0.151866,1.086528,-0.095617,1.024957,0.130711,1.100670,-0.079687,1.021924,0.108865,1.112461,-0.063593,1.018281,0.086760,1.121588,-0.047313,1.013747,0.064575,1.128522,-0.031385,1.008433,0.042499,1.134759,-0.015356,1.003569,0.020840,1.141448,0.000114,0.999978,-0.000056,0.000200,-0.000122,1.372763,0.611086,0.000503,-0.000308,1.371456,0.611084,0.002016,-0.001232,1.373440,0.611084,0.004535,-0.002771,1.373387,0.611083,0.008061,-0.004926,1.372916,0.611083,0.012601,-0.007700,1.373956,0.611084,0.018142,-0.011084,1.373419,0.611078,0.024695,-0.015087,1.373492,0.611074,0.032255,-0.019701,1.373360,0.611066,0.040827,-0.024930,1.373327,0.611055,0.050408,-0.030769,1.373222,0.611037,0.061004,-0.037217,1.373079,0.611014,0.072613,-0.044270,1.372895,0.610982,0.085238,-0.051923,1.372624,0.610941,0.098878,-0.060161,1.372252,0.610883,0.113522,-0.068785,1.371785,0.610798,0.129176,-0.077863,1.371103,0.610683,0.145876,-0.087593,1.370541,0.610537,0.163570,-0.097847,1.369496,0.610349,0.182283,-0.108592,1.368477,0.610109,0.201930,-0.119420,1.366980,0.609763,0.222570,-0.130789,1.365375,0.609343,0.244123,-0.142514,1.363456,0.608815,0.266437,-0.154232,1.360916,0.608114,0.289467,-0.166370,1.357909,0.607291,0.312861,-0.178505,1.353588,0.606272,0.336736,-0.190980,1.349211,0.605153,0.361740,-0.202859,1.343319,0.603548,0.387878,-0.213997,1.335908,0.601268,0.414357,-0.224584,1.326676,0.598499,0.441442,-0.234664,1.317331,0.595066,0.468409,-0.243875,1.305818,0.590996,0.494999,-0.252121,1.291863,0.586293,0.521730,-0.259714,1.278212,0.580840,0.547894,-0.266242,1.262656,0.574494,0.573865,-0.271578,1.246364,0.567007,0.601124,-0.275503,1.231274,0.557771,0.627606,-0.277954,1.215252,0.547255,0.654004,-0.279404,1.199977,0.535766,0.679554,-0.279632,1.183995,0.522792,0.704280,-0.278457,1.167428,0.508488,0.729830,-0.275706,1.152760,0.492425,0.754376,-0.271640,1.137942,0.475285,0.779209,-0.266911,1.125222,0.456679,0.803562,-0.260838,1.112179,0.437267,0.827985,-0.253353,1.101439,0.416227,0.851737,-0.245027,1.089890,0.394728,0.874850,-0.235719,1.080018,0.372244,0.897680,-0.225051,1.070807,0.348846,0.921351,-0.214051,1.063180,0.324961,0.943818,-0.202039,1.056148,0.300836,0.966368,-0.189134,1.049277,0.276333,0.987426,-0.175613,1.042176,0.251862,1.010162,-0.161473,1.038567,0.227217,1.031224,-0.146866,1.034102,0.203582,1.052317,-0.131644,1.031600,0.180629,1.070879,-0.115909,1.028913,0.158165,1.087407,-0.099638,1.026193,0.135905,1.102159,-0.083091,1.023567,0.113394,1.114006,-0.066178,1.019567,0.090325,1.123374,-0.049430,1.014856,0.067302,1.130310,-0.032557,1.009141,0.044264,1.136334,-0.016157,1.003984,0.021807,1.142961,0.000172,0.999951,-0.000077,0.000200,-0.000129,1.416584,0.645866,0.000504,-0.000326,1.417762,0.645865,0.002016,-0.001302,1.417825,0.645866,0.004535,-0.002929,1.417142,0.645865,0.008062,-0.005207,1.416968,0.645864,0.012598,-0.008136,1.417109,0.645862,0.018141,-0.011715,1.417001,0.645859,0.024690,-0.015941,1.416878,0.645853,0.032257,-0.020823,1.417134,0.645843,0.040827,-0.026347,1.416983,0.645829,0.050411,-0.032518,1.416949,0.645808,0.061007,-0.039330,1.416694,0.645781,0.072621,-0.046783,1.416599,0.645746,0.085249,-0.054865,1.416241,0.645695,0.098897,-0.063563,1.415832,0.645630,0.113546,-0.072607,1.415264,0.645529,0.129220,-0.082257,1.414482,0.645396,0.145888,-0.092515,1.413626,0.645268,0.163659,-0.103393,1.412710,0.645018,0.182385,-0.114684,1.411418,0.644739,0.202078,-0.126098,1.409822,0.644348,0.222772,-0.138145,1.407948,0.643872,0.244370,-0.150405,1.405678,0.643255,0.266787,-0.162798,1.402763,0.642463,0.289844,-0.175434,1.398863,0.641504,0.313540,-0.188158,1.394695,0.640346,0.337489,-0.201014,1.389376,0.639042,0.362008,-0.213719,1.382439,0.637412,0.387990,-0.225248,1.373281,0.634930,0.414728,-0.236348,1.363729,0.631861,0.441635,-0.246701,1.352304,0.628155,0.468588,-0.256167,1.339162,0.623625,0.495337,-0.264662,1.323811,0.618458,0.521886,-0.272207,1.307630,0.612373,0.548355,-0.278890,1.291265,0.605263,0.574535,-0.284442,1.273752,0.597048,0.600870,-0.288389,1.256171,0.587401,0.627715,-0.290816,1.238447,0.576001,0.653830,-0.291886,1.221036,0.563198,0.679175,-0.291629,1.202283,0.549249,0.704539,-0.290489,1.185866,0.533881,0.729126,-0.287529,1.168822,0.516966,0.754297,-0.283184,1.152934,0.498501,0.778678,-0.277732,1.137821,0.478728,0.802473,-0.271203,1.123387,0.457814,0.826596,-0.263494,1.110573,0.435865,0.850835,-0.254572,1.099099,0.412597,0.874203,-0.244815,1.088403,0.388995,0.897271,-0.233993,1.078085,0.364487,0.919667,-0.221934,1.068543,0.339344,0.943001,-0.209714,1.061081,0.313770,0.965688,-0.196367,1.054023,0.287928,0.987598,-0.182263,1.047247,0.262157,1.009280,-0.167775,1.041376,0.236855,1.031762,-0.152530,1.037647,0.211847,1.051965,-0.136809,1.033396,0.187546,1.071699,-0.120418,1.031021,0.164186,1.088881,-0.103618,1.028403,0.141184,1.103482,-0.086271,1.024987,0.117665,1.115646,-0.068973,1.020884,0.093896,1.125258,-0.051285,1.015966,0.069978,1.132045,-0.033998,1.009990,0.046126,1.138004,-0.016696,1.004270,0.022635,1.144463,0.000089,0.999987,-0.000016,0.000200,-0.000136,1.463614,0.681786,0.000504,-0.000344,1.465345,0.681785,0.002015,-0.001374,1.464172,0.681783,0.004535,-0.003092,1.464846,0.681784,0.008062,-0.005496,1.464783,0.681784,0.012598,-0.008588,1.464883,0.681781,0.018141,-0.012366,1.464740,0.681777,0.024692,-0.016829,1.464665,0.681770,0.032258,-0.021980,1.464720,0.681760,0.040829,-0.027811,1.464625,0.681742,0.050415,-0.034324,1.464571,0.681720,0.061013,-0.041513,1.464346,0.681688,0.072628,-0.049375,1.464131,0.681644,0.085264,-0.057903,1.463847,0.681588,0.098918,-0.067067,1.463369,0.681509,0.113568,-0.076570,1.462549,0.681389,0.129265,-0.086782,1.461703,0.681239,0.145997,-0.097637,1.460840,0.681047,0.163751,-0.109101,1.459737,0.680806,0.182505,-0.120922,1.458231,0.680480,0.202241,-0.133007,1.456393,0.680042,0.222987,-0.145693,1.454258,0.679503,0.244638,-0.158488,1.451543,0.678792,0.267132,-0.171585,1.448115,0.677907,0.290365,-0.184746,1.443992,0.676796,0.314178,-0.198101,1.439271,0.675498,0.338289,-0.211370,1.432830,0.673922,0.362543,-0.224489,1.424163,0.672151,0.388470,-0.236914,1.415160,0.669601,0.415105,-0.248342,1.403811,0.666255,0.441925,-0.258957,1.390149,0.662166,0.468668,-0.268556,1.374104,0.657229,0.495720,-0.277359,1.358102,0.651347,0.522574,-0.285078,1.340754,0.644598,0.548981,-0.291718,1.322033,0.636820,0.574946,-0.297087,1.302148,0.627812,0.600744,-0.301079,1.282130,0.617485,0.627565,-0.303566,1.263339,0.605047,0.653598,-0.304330,1.242712,0.591167,0.679239,-0.303820,1.223212,0.576025,0.704043,-0.302064,1.203763,0.559649,0.728796,-0.299095,1.185434,0.541271,0.753581,-0.294392,1.167630,0.521800,0.778577,-0.288603,1.151930,0.500628,0.802550,-0.281604,1.136072,0.478434,0.825803,-0.273472,1.121673,0.455384,0.849768,-0.264011,1.108491,0.430811,0.873250,-0.253653,1.096550,0.405524,0.896725,-0.242642,1.085905,0.380038,0.919158,-0.230191,1.075091,0.353482,0.942236,-0.217145,1.066848,0.326605,0.965031,-0.203555,1.059310,0.299842,0.987048,-0.188777,1.051749,0.272859,1.008718,-0.173613,1.044999,0.246040,1.031097,-0.157972,1.040066,0.219826,1.052493,-0.141589,1.035951,0.194278,1.071773,-0.124814,1.032520,0.169830,1.089646,-0.107321,1.029803,0.146135,1.104932,-0.089726,1.026612,0.122127,1.117687,-0.071433,1.022391,0.097461,1.127188,-0.053395,1.017113,0.072556,1.134010,-0.035151,1.010934,0.047749,1.139746,-0.017427,1.004633,0.023530,1.146205,0.000151,1.000020,-0.000106,0.000200,-0.000144,1.517643,0.718949,0.000504,-0.000362,1.516387,0.718947,0.002016,-0.001449,1.516742,0.718946,0.004536,-0.003261,1.517196,0.718946,0.008063,-0.005796,1.516806,0.718945,0.012598,-0.009057,1.516986,0.718943,0.018140,-0.013039,1.516603,0.718937,0.024694,-0.017747,1.516739,0.718929,0.032260,-0.023178,1.516994,0.718917,0.040831,-0.029325,1.516649,0.718896,0.050419,-0.036192,1.516594,0.718870,0.061019,-0.043770,1.516327,0.718833,0.072638,-0.052056,1.516054,0.718782,0.085274,-0.061039,1.515628,0.718714,0.098938,-0.070676,1.515199,0.718623,0.113607,-0.080679,1.514222,0.718483,0.129329,-0.091485,1.513354,0.718316,0.146077,-0.102931,1.512301,0.718096,0.163856,-0.114986,1.510977,0.717818,0.182640,-0.127305,1.509225,0.717432,0.202432,-0.140147,1.507152,0.716939,0.223229,-0.153468,1.504780,0.716331,0.244943,-0.166875,1.501612,0.715527,0.267559,-0.180658,1.497898,0.714523,0.290926,-0.194405,1.493208,0.713266,0.314863,-0.208302,1.487388,0.711758,0.339053,-0.222020,1.479677,0.709982,0.363627,-0.235683,1.470950,0.707958,0.388887,-0.248723,1.459907,0.705346,0.415474,-0.260563,1.446579,0.701644,0.442065,-0.271352,1.429962,0.697134,0.469418,-0.281541,1.414343,0.691665,0.496419,-0.290429,1.395681,0.685227,0.523071,-0.298032,1.375347,0.677815,0.549641,-0.304679,1.354816,0.669063,0.575489,-0.309902,1.332505,0.659071,0.601108,-0.313771,1.309752,0.647799,0.627199,-0.316225,1.288381,0.634856,0.653243,-0.316679,1.265785,0.619627,0.678960,-0.315816,1.244333,0.603244,0.704055,-0.313776,1.223315,0.585191,0.728713,-0.310417,1.203142,0.565969,0.753301,-0.305786,1.184323,0.545347,0.777890,-0.299262,1.166070,0.522753,0.802354,-0.291830,1.149599,0.499017,0.826005,-0.283281,1.133655,0.474335,0.848920,-0.273512,1.118132,0.449019,0.872765,-0.262525,1.105606,0.422329,0.895950,-0.250769,1.093539,0.395057,0.918816,-0.238257,1.082388,0.367709,0.941089,-0.224381,1.072484,0.339350,0.964514,-0.210289,1.064054,0.311239,0.987128,-0.195488,1.056645,0.283272,1.009064,-0.179491,1.049549,0.255163,1.030163,-0.163172,1.042741,0.227757,1.052502,-0.146457,1.038270,0.200970,1.072971,-0.129054,1.035014,0.175767,1.091223,-0.111285,1.032231,0.151118,1.106518,-0.092617,1.028211,0.126196,1.119235,-0.074168,1.023686,0.100828,1.129311,-0.055212,1.018311,0.075240,1.135983,-0.036571,1.011485,0.049558,1.141648,-0.017954,1.004952,0.024273,1.147938,0.000125,1.000009,-0.000048,0.000199,-0.000151,1.566887,0.757466,0.000504,-0.000382,1.574111,0.757466,0.002016,-0.001527,1.573735,0.757466,0.004535,-0.003435,1.573737,0.757466,0.008062,-0.006107,1.573782,0.757464,0.012599,-0.009542,1.573796,0.757460,0.018142,-0.013739,1.573710,0.757455,0.024694,-0.018697,1.573562,0.757446,0.032259,-0.024418,1.573667,0.757429,0.040834,-0.030895,1.573555,0.757407,0.050422,-0.038127,1.573383,0.757376,0.061025,-0.046108,1.573086,0.757332,0.072650,-0.054835,1.572833,0.757274,0.085296,-0.064294,1.572395,0.757195,0.098962,-0.074376,1.571729,0.757087,0.113649,-0.084955,1.570571,0.756925,0.129389,-0.096334,1.569582,0.756729,0.146167,-0.108406,1.568444,0.756481,0.163973,-0.121056,1.566905,0.756158,0.182798,-0.133970,1.564939,0.755715,0.202650,-0.147522,1.562666,0.755167,0.223502,-0.161466,1.559877,0.754465,0.245269,-0.175539,1.556008,0.753552,0.268010,-0.189957,1.552013,0.752420,0.291474,-0.204361,1.546509,0.751008,0.315527,-0.218714,1.539575,0.749266,0.339954,-0.233029,1.530968,0.747232,0.364649,-0.247149,1.520994,0.744906,0.389520,-0.260672,1.507748,0.742123,0.415717,-0.272873,1.491777,0.738187,0.442862,-0.284317,1.475658,0.733189,0.469939,-0.294552,1.456572,0.727165,0.496916,-0.303517,1.435237,0.720043,0.523480,-0.311061,1.412192,0.711640,0.550092,-0.317596,1.389033,0.702174,0.576384,-0.322921,1.365086,0.691225,0.602280,-0.326806,1.341317,0.678841,0.627676,-0.329057,1.316518,0.664815,0.653458,-0.329372,1.291877,0.648548,0.679227,-0.328067,1.268126,0.630676,0.704476,-0.325585,1.244424,0.611585,0.729232,-0.321775,1.223010,0.590803,0.753405,-0.316713,1.201297,0.568653,0.777274,-0.309858,1.181071,0.544763,0.801882,-0.301866,1.162826,0.519747,0.826030,-0.292861,1.145704,0.493531,0.849359,-0.282794,1.129629,0.466900,0.871837,-0.271197,1.114155,0.439230,0.895896,-0.258954,1.102334,0.410570,0.918951,-0.245878,1.090163,0.381314,0.941148,-0.231897,1.078738,0.352268,0.963464,-0.216743,1.068862,0.322688,0.986628,-0.201486,1.061077,0.293523,1.009289,-0.185521,1.053561,0.264125,1.030659,-0.168429,1.046627,0.235706,1.052382,-0.151210,1.040953,0.208022,1.073476,-0.133289,1.036534,0.181245,1.092237,-0.114768,1.033580,0.155661,1.108200,-0.095917,1.029997,0.130223,1.121435,-0.076492,1.025374,0.104098,1.131382,-0.057204,1.019485,0.077776,1.137994,-0.037747,1.012188,0.051250,1.143441,-0.018673,1.005309,0.025245,1.149714,0.000216,1.000004,-0.000120,0.000200,-0.000159,1.633988,0.797469,0.000504,-0.000402,1.636076,0.797469,0.002016,-0.001607,1.635679,0.797467,0.004535,-0.003617,1.636040,0.797468,0.008063,-0.006430,1.636159,0.797467,0.012599,-0.010046,1.636128,0.797462,0.018141,-0.014464,1.635730,0.797457,0.024696,-0.019685,1.635836,0.797445,0.032259,-0.025705,1.635719,0.797426,0.040835,-0.032523,1.635610,0.797401,0.050425,-0.040135,1.635460,0.797363,0.061033,-0.048536,1.635182,0.797313,0.072661,-0.057718,1.634817,0.797243,0.085315,-0.067666,1.634314,0.797150,0.098985,-0.078179,1.633350,0.797016,0.113699,-0.089383,1.632253,0.796839,0.129456,-0.101364,1.631025,0.796623,0.146275,-0.114081,1.629867,0.796331,0.164108,-0.127318,1.628043,0.795956,0.182983,-0.140901,1.625813,0.795458,0.202891,-0.155174,1.623149,0.794834,0.223787,-0.169654,1.619686,0.794015,0.245678,-0.184540,1.615694,0.793013,0.268495,-0.199543,1.610812,0.791727,0.292093,-0.214639,1.604629,0.790107,0.316184,-0.229499,1.596061,0.788154,0.340986,-0.244407,1.587195,0.785797,0.365808,-0.258907,1.575031,0.783093,0.390528,-0.272746,1.559448,0.779970,0.416510,-0.285845,1.543294,0.775852,0.443443,-0.297404,1.523476,0.770323,0.470442,-0.307757,1.501515,0.763721,0.497499,-0.316846,1.477841,0.755889,0.524316,-0.324561,1.452427,0.746662,0.551212,-0.331060,1.427421,0.736004,0.577323,-0.335956,1.400369,0.723810,0.602976,-0.339501,1.373093,0.710184,0.628357,-0.341577,1.345853,0.695017,0.653642,-0.342031,1.319040,0.677972,0.679440,-0.340342,1.292490,0.658877,0.704744,-0.337356,1.267182,0.638085,0.729692,-0.333042,1.243280,0.615615,0.753920,-0.327504,1.219751,0.592054,0.777695,-0.320537,1.197796,0.566967,0.801426,-0.311880,1.176872,0.540643,0.825649,-0.302211,1.158160,0.512906,0.849282,-0.291665,1.141257,0.484587,0.872341,-0.280050,1.125469,0.455556,0.895110,-0.266978,1.110222,0.425652,0.918841,-0.253326,1.097419,0.395015,0.941209,-0.238899,1.086101,0.364948,0.963142,-0.223523,1.075023,0.334151,0.985996,-0.207346,1.065628,0.303708,1.008718,-0.190889,1.057256,0.273008,1.030554,-0.173517,1.049720,0.243221,1.053085,-0.155645,1.043837,0.214426,1.074267,-0.137472,1.039312,0.187036,1.093591,-0.118385,1.035457,0.160512,1.109850,-0.098883,1.031630,0.134384,1.123516,-0.079050,1.026762,0.107424,1.133578,-0.058977,1.020640,0.080317,1.140289,-0.039013,1.013096,0.052944,1.145610,-0.019228,1.005694,0.025989,1.151704,0.000105,0.999981,-0.000019,0.000200,-0.000168,1.704841,0.839096,0.000504,-0.000423,1.704242,0.839097,0.002016,-0.001691,1.703821,0.839091,0.004534,-0.003805,1.703804,0.839094,0.008063,-0.006765,1.704224,0.839092,0.012598,-0.010570,1.704013,0.839087,0.018142,-0.015219,1.703889,0.839079,0.024697,-0.020712,1.704023,0.839066,0.032261,-0.027046,1.703836,0.839045,0.040837,-0.034218,1.703608,0.839014,0.050429,-0.042224,1.703414,0.838972,0.061041,-0.051061,1.703148,0.838912,0.072676,-0.060717,1.702744,0.838831,0.085340,-0.071175,1.702223,0.838724,0.099023,-0.082182,1.700984,0.838567,0.113759,-0.094007,1.699764,0.838367,0.129546,-0.106621,1.698462,0.838112,0.146382,-0.119956,1.696938,0.837782,0.164260,-0.133760,1.694868,0.837346,0.183188,-0.148108,1.692262,0.836780,0.203158,-0.163075,1.689251,0.836073,0.224147,-0.178255,1.685408,0.835148,0.246147,-0.193900,1.680946,0.833992,0.269072,-0.209553,1.675277,0.832546,0.292718,-0.225226,1.667626,0.830727,0.317159,-0.240836,1.658952,0.828510,0.341979,-0.256103,1.647624,0.825843,0.366844,-0.270887,1.633014,0.822760,0.392043,-0.285324,1.617191,0.819159,0.417356,-0.298817,1.597501,0.814788,0.444093,-0.310711,1.575184,0.808751,0.471379,-0.321410,1.551590,0.801294,0.498267,-0.330421,1.524134,0.792711,0.525401,-0.338331,1.496672,0.782480,0.551846,-0.344430,1.467062,0.770659,0.578009,-0.349047,1.436943,0.757348,0.604054,-0.352490,1.407611,0.742541,0.629387,-0.354158,1.377441,0.726071,0.654435,-0.354422,1.347651,0.707524,0.679845,-0.352663,1.318769,0.687067,0.704892,-0.348994,1.290600,0.664637,0.729763,-0.344105,1.263997,0.640663,0.754345,-0.338129,1.239273,0.615484,0.778629,-0.330905,1.215858,0.589210,0.801939,-0.322113,1.192318,0.561550,0.825723,-0.311673,1.171380,0.532175,0.849387,-0.300410,1.152991,0.502055,0.872792,-0.288328,1.136139,0.471308,0.895083,-0.275087,1.119534,0.440427,0.918335,-0.260700,1.105542,0.409260,0.941577,-0.245717,1.093070,0.377142,0.963992,-0.230079,1.081207,0.345289,0.986510,-0.213523,1.071488,0.313508,1.008806,-0.196157,1.062011,0.281962,1.030724,-0.178467,1.053240,0.251177,1.053782,-0.160291,1.047057,0.220986,1.075451,-0.141308,1.041842,0.192256,1.094947,-0.121975,1.037704,0.165023,1.111783,-0.101744,1.033300,0.138228,1.125525,-0.081476,1.028234,0.110679,1.135873,-0.060770,1.021695,0.082672,1.142478,-0.040207,1.013838,0.054506,1.147889,-0.019908,1.006166,0.026938,1.153852,0.000204,0.999983,-0.000123,0.000199,-0.000176,1.771601,0.882501,0.000504,-0.000445,1.779195,0.882504,0.002016,-0.001779,1.779635,0.882498,0.004536,-0.004003,1.779586,0.882499,0.008062,-0.007115,1.778613,0.882496,0.012598,-0.011116,1.778678,0.882492,0.018142,-0.016005,1.778531,0.882481,0.024696,-0.021782,1.778556,0.882466,0.032262,-0.028444,1.778507,0.882442,0.040842,-0.035987,1.778385,0.882408,0.050436,-0.044404,1.778034,0.882364,0.061053,-0.053695,1.777761,0.882287,0.072692,-0.063842,1.777256,0.882190,0.085364,-0.074821,1.776518,0.882067,0.099064,-0.086368,1.775080,0.881884,0.113828,-0.098805,1.773836,0.881657,0.129649,-0.112090,1.772370,0.881361,0.146518,-0.126067,1.770594,0.880982,0.164440,-0.140493,1.768089,0.880484,0.183437,-0.155646,1.765301,0.879843,0.203468,-0.171266,1.761698,0.879035,0.224562,-0.187231,1.757518,0.877982,0.246665,-0.203540,1.752318,0.876667,0.269652,-0.219916,1.745356,0.875028,0.293531,-0.236255,1.737186,0.872977,0.318048,-0.252410,1.726709,0.870448,0.342963,-0.268192,1.713109,0.867400,0.368336,-0.283587,1.698087,0.863882,0.393512,-0.298186,1.678638,0.859724,0.418602,-0.311882,1.655604,0.854835,0.445080,-0.324500,1.632250,0.848353,0.472289,-0.335295,1.605069,0.840218,0.499128,-0.344256,1.573846,0.830556,0.525834,-0.351716,1.541120,0.819269,0.553177,-0.358241,1.511385,0.806222,0.579480,-0.362640,1.477866,0.791647,0.605205,-0.365513,1.444218,0.775398,0.630617,-0.366822,1.410954,0.757144,0.655730,-0.366785,1.379010,0.737323,0.680529,-0.364904,1.347280,0.715601,0.705800,-0.360990,1.316416,0.691547,0.730550,-0.355397,1.286344,0.666141,0.754970,-0.348664,1.258954,0.638929,0.779042,-0.340774,1.232965,0.611015,0.802839,-0.331767,1.209775,0.581877,0.825793,-0.321054,1.185813,0.551509,0.849512,-0.309016,1.165080,0.519698,0.873120,-0.296369,1.147091,0.487506,0.895942,-0.282704,1.129658,0.455320,0.917996,-0.268007,1.113463,0.422605,0.941281,-0.252329,1.100040,0.389347,0.964584,-0.236203,1.087973,0.356430,0.986371,-0.219209,1.075983,0.323089,1.009522,-0.201588,1.066940,0.290806,1.031976,-0.183296,1.057999,0.258682,1.053461,-0.164509,1.049542,0.227722,1.076121,-0.145165,1.043718,0.197439,1.096597,-0.125199,1.039607,0.169578,1.113908,-0.104921,1.035528,0.142222,1.127939,-0.083623,1.029807,0.113802,1.138391,-0.062589,1.023312,0.085164,1.145110,-0.041376,1.014806,0.056186,1.150141,-0.020433,1.006501,0.027654,1.156069,0.000097,0.999949,-0.000046,0.000200,-0.000185,1.858268,0.927857,0.000504,-0.000468,1.861583,0.927859,0.002016,-0.001870,1.860659,0.927855,0.004535,-0.004208,1.860963,0.927867,0.008063,-0.007480,1.860766,0.927855,0.012594,-0.011683,1.859996,0.927851,0.018142,-0.016828,1.860739,0.927839,0.024698,-0.022901,1.860763,0.927818,0.032263,-0.029903,1.860501,0.927791,0.040846,-0.037834,1.860431,0.927751,0.050440,-0.046680,1.859827,0.927690,0.061066,-0.056446,1.859624,0.927610,0.072713,-0.067109,1.859039,0.927505,0.085393,-0.078613,1.858144,0.927357,0.099120,-0.090747,1.856618,0.927145,0.113910,-0.103850,1.855221,0.926884,0.129755,-0.117777,1.853470,0.926546,0.146669,-0.132441,1.851413,0.926104,0.164648,-0.147565,1.848498,0.925530,0.183708,-0.163470,1.845281,0.924802,0.203832,-0.179763,1.841273,0.923871,0.225029,-0.196564,1.836481,0.922691,0.247221,-0.213537,1.830273,0.921198,0.270343,-0.230662,1.822374,0.919320,0.294399,-0.247740,1.812975,0.917008,0.319040,-0.264448,1.800693,0.914141,0.344269,-0.280831,1.785923,0.910707,0.369625,-0.296478,1.767203,0.906585,0.394925,-0.311287,1.744434,0.901918,0.420583,-0.325578,1.720938,0.896240,0.446200,-0.338384,1.693005,0.889335,0.472969,-0.349187,1.660901,0.880394,0.500490,-0.358687,1.628806,0.869705,0.527312,-0.366042,1.593001,0.857145,0.554207,-0.372045,1.557046,0.842943,0.580620,-0.376134,1.520192,0.826837,0.606480,-0.378636,1.482947,0.808891,0.631815,-0.379414,1.445954,0.789119,0.657021,-0.378972,1.410833,0.767564,0.681686,-0.376728,1.376575,0.744338,0.706498,-0.372844,1.342935,0.718799,0.731258,-0.366649,1.311052,0.691756,0.755937,-0.359354,1.280478,0.662683,0.779259,-0.350487,1.250585,0.632892,0.803295,-0.340941,1.225722,0.602160,0.826570,-0.330174,1.201003,0.570520,0.849954,-0.317854,1.178488,0.537651,0.873696,-0.304426,1.158302,0.503799,0.896695,-0.290120,1.139886,0.469645,0.919149,-0.275106,1.122884,0.435625,0.942121,-0.259282,1.107691,0.401228,0.964627,-0.242123,1.093661,0.367086,0.986614,-0.224575,1.081580,0.332885,1.009623,-0.206837,1.071375,0.299209,1.033126,-0.188092,1.062241,0.266187,1.054954,-0.168637,1.052912,0.233733,1.077660,-0.149166,1.047047,0.203192,1.097983,-0.128587,1.041607,0.173918,1.115586,-0.107339,1.036850,0.145531,1.130170,-0.086203,1.031427,0.116890,1.141018,-0.064171,1.024395,0.087388,1.147681,-0.042530,1.015719,0.057733,1.152560,-0.021011,1.006883,0.028413,1.158406,0.000158,0.999897,-0.000106,0.000200,-0.000195,1.950982,0.975366,0.000504,-0.000491,1.950207,0.975365,0.002015,-0.001966,1.950675,0.975362,0.004535,-0.004423,1.951281,0.975370,0.008062,-0.007863,1.951045,0.975362,0.012597,-0.012285,1.951199,0.975356,0.018145,-0.017692,1.951528,0.975340,0.024699,-0.024074,1.951194,0.975321,0.032266,-0.031434,1.950865,0.975288,0.040853,-0.039771,1.951038,0.975244,0.050452,-0.049067,1.950336,0.975173,0.061077,-0.059324,1.949805,0.975078,0.072736,-0.070526,1.949133,0.974951,0.085431,-0.082528,1.947947,0.974777,0.099182,-0.095345,1.946337,0.974540,0.113999,-0.109118,1.944725,0.974241,0.129888,-0.123741,1.942857,0.973852,0.146842,-0.139071,1.940251,0.973342,0.164890,-0.154986,1.937086,0.972684,0.184025,-0.171661,1.933404,0.971856,0.204245,-0.188672,1.928770,0.970785,0.225528,-0.206252,1.923041,0.969448,0.247841,-0.223972,1.915788,0.967742,0.271157,-0.241827,1.907008,0.965607,0.295297,-0.259562,1.895854,0.963007,0.320121,-0.276909,1.881289,0.959722,0.345566,-0.293883,1.864528,0.955831,0.371012,-0.309816,1.842062,0.951127,0.396834,-0.325157,1.818068,0.945725,0.422277,-0.339357,1.788874,0.939318,0.447928,-0.352387,1.758283,0.931470,0.474315,-0.363680,1.723668,0.921900,0.501560,-0.372963,1.686081,0.909996,0.528391,-0.380159,1.645816,0.896244,0.554754,-0.385545,1.603709,0.880326,0.581888,-0.389778,1.565475,0.862716,0.607791,-0.391839,1.524196,0.843146,0.633511,-0.392331,1.483921,0.821554,0.658621,-0.391193,1.445013,0.798336,0.683160,-0.388424,1.406963,0.773299,0.707429,-0.384104,1.370996,0.746668,0.732212,-0.377945,1.335879,0.717502,0.756871,-0.369856,1.302489,0.686954,0.781065,-0.360707,1.271815,0.655372,0.804167,-0.350091,1.242416,0.622683,0.827948,-0.338941,1.217208,0.589185,0.850901,-0.326427,1.192354,0.555005,0.873589,-0.312199,1.169639,0.519594,0.897085,-0.297374,1.150181,0.484105,0.920459,-0.281932,1.132858,0.448661,0.942637,-0.265625,1.115401,0.413051,0.965341,-0.248332,1.101078,0.377329,0.987530,-0.229983,1.087377,0.342349,1.010739,-0.211647,1.076582,0.307824,1.033449,-0.192725,1.065900,0.273368,1.055618,-0.172726,1.056958,0.240238,1.079345,-0.152640,1.049620,0.208322,1.100058,-0.131931,1.044084,0.178242,1.118547,-0.110351,1.039387,0.149493,1.132748,-0.088128,1.033049,0.119673,1.143419,-0.066069,1.025521,0.089728,1.150316,-0.043513,1.016378,0.059253,1.155208,-0.021593,1.007506,0.029140,1.160871,0.000111,0.999916,-0.000035,0.000201,-0.000206,2.061000,1.025243,0.000504,-0.000516,2.049647,1.025237,0.002015,-0.002066,2.050169,1.025237,0.004535,-0.004650,2.051254,1.025255,0.008063,-0.008266,2.051302,1.025236,0.012600,-0.012915,2.051508,1.025226,0.018144,-0.018594,2.050981,1.025215,0.024700,-0.025304,2.050841,1.025190,0.032267,-0.033038,2.050537,1.025152,0.040852,-0.041795,2.050660,1.025090,0.050460,-0.051570,2.049921,1.025017,0.061094,-0.062347,2.049350,1.024908,0.072762,-0.074111,2.048517,1.024760,0.085475,-0.086661,2.047009,1.024555,0.099249,-0.100160,2.045261,1.024278,0.114106,-0.114628,2.043508,1.023941,0.130032,-0.130002,2.041321,1.023488,0.147050,-0.145985,2.038299,1.022905,0.165164,-0.162762,2.034658,1.022151,0.184380,-0.180172,2.030312,1.021200,0.204704,-0.198022,2.024944,1.019966,0.226129,-0.216359,2.018546,1.018424,0.248582,-0.234923,2.010153,1.016519,0.272011,-0.253474,1.999659,1.014072,0.296259,-0.271820,1.986076,1.011071,0.321423,-0.289959,1.970618,1.007389,0.346897,-0.307283,1.949667,1.002955,0.372750,-0.323817,1.925287,0.997633,0.398603,-0.339241,1.896006,0.991354,0.424351,-0.353633,1.863658,0.983937,0.449887,-0.366660,1.827430,0.975254,0.475715,-0.378213,1.789521,0.964753,0.502204,-0.387133,1.745632,0.951594,0.530179,-0.394976,1.705347,0.936344,0.556732,-0.400134,1.658928,0.918907,0.583123,-0.403439,1.613077,0.899504,0.609477,-0.405285,1.567884,0.878172,0.634927,-0.405055,1.523507,0.854396,0.660357,-0.403494,1.481712,0.829259,0.684851,-0.400104,1.439000,0.802359,0.709654,-0.395536,1.400956,0.773534,0.733472,-0.388996,1.362156,0.743230,0.757502,-0.380263,1.325113,0.711090,0.782249,-0.370594,1.292913,0.677166,0.806017,-0.359509,1.262088,0.642527,0.828687,-0.347126,1.232059,0.607589,0.852372,-0.334474,1.207160,0.571938,0.874266,-0.320074,1.181978,0.535518,0.898168,-0.304719,1.161156,0.498375,0.920456,-0.288246,1.140667,0.461179,0.942832,-0.271311,1.122780,0.424533,0.966458,-0.254154,1.108743,0.387784,0.988907,-0.235659,1.093872,0.351689,1.011557,-0.216322,1.081959,0.315743,1.035099,-0.197007,1.070885,0.280402,1.056354,-0.176878,1.059968,0.246472,1.079854,-0.156058,1.051815,0.212818,1.101494,-0.134772,1.045757,0.182143,1.120587,-0.113071,1.041169,0.152867,1.135399,-0.090411,1.034844,0.122796,1.146612,-0.067477,1.026974,0.091888,1.153168,-0.044849,1.017303,0.060779,1.157912,-0.021998,1.007735,0.029919,1.163607,0.000121,0.999959,0.000003,0.000200,-0.000216,2.163956,1.077737,0.000504,-0.000543,2.161128,1.077732,0.002016,-0.002173,2.162732,1.077729,0.004535,-0.004887,2.161402,1.077749,0.008066,-0.008692,2.163252,1.077732,0.012599,-0.013576,2.161300,1.077727,0.018145,-0.019546,2.161151,1.077702,0.024702,-0.026599,2.161223,1.077675,0.032272,-0.034729,2.160949,1.077632,0.040862,-0.043936,2.160967,1.077575,0.050470,-0.054203,2.160035,1.077473,0.061113,-0.065528,2.159490,1.077348,0.072794,-0.077882,2.158517,1.077178,0.085528,-0.091030,2.156605,1.076937,0.099337,-0.105251,2.154828,1.076631,0.114228,-0.120456,2.152812,1.076229,0.130202,-0.136573,2.150298,1.075713,0.147284,-0.153306,2.146752,1.075031,0.165480,-0.170931,2.142744,1.074173,0.184793,-0.189083,2.137475,1.073063,0.205224,-0.207840,2.131320,1.071683,0.226743,-0.226939,2.123154,1.069914,0.249401,-0.246344,2.114086,1.067718,0.272955,-0.265640,2.101599,1.064924,0.297494,-0.284846,2.086612,1.061512,0.322731,-0.303452,2.067356,1.057359,0.348451,-0.321330,2.043711,1.052294,0.374451,-0.338201,2.015033,1.046153,0.400454,-0.353816,1.981139,1.039003,0.426434,-0.368216,1.944128,1.030498,0.452088,-0.381251,1.903094,1.020454,0.477901,-0.392833,1.860402,1.008793,0.504173,-0.402408,1.814402,0.994791,0.531520,-0.409545,1.766273,0.977733,0.558049,-0.414351,1.714119,0.958625,0.584778,-0.417437,1.664612,0.937189,0.610808,-0.418519,1.613793,0.913543,0.636915,-0.418094,1.565942,0.888137,0.662204,-0.415742,1.518783,0.860728,0.686848,-0.411746,1.473306,0.831793,0.710992,-0.406153,1.430153,0.800862,0.735382,-0.399519,1.389824,0.768768,0.759079,-0.390927,1.350744,0.734825,0.782912,-0.380111,1.313559,0.699450,0.806746,-0.368383,1.280028,0.663191,0.830269,-0.355606,1.249814,0.625927,0.853305,-0.341988,1.221138,0.588644,0.876326,-0.327545,1.195837,0.550849,0.898322,-0.311779,1.171844,0.512694,0.921811,-0.294944,1.150671,0.474225,0.944563,-0.277333,1.132224,0.435772,0.967089,-0.259340,1.115422,0.398001,0.989754,-0.240836,1.100405,0.360802,1.012470,-0.221293,1.086533,0.323566,1.036426,-0.201191,1.075496,0.287387,1.058709,-0.180590,1.064233,0.252184,1.081593,-0.159810,1.055296,0.218441,1.103146,-0.137772,1.047978,0.186223,1.122814,-0.115347,1.042693,0.156019,1.137790,-0.092582,1.036049,0.125579,1.149184,-0.069152,1.027944,0.093986,1.156062,-0.045661,1.018039,0.062122,1.160733,-0.022719,1.008072,0.030650,1.166487,0.000231,1.000063,-0.000120,0.000201,-0.000228,2.308308,1.133128,0.000504,-0.000571,2.283756,1.133123,0.002016,-0.002284,2.283756,1.133123,0.004535,-0.005138,2.283310,1.133144,0.008048,-0.009119,2.266192,1.133138,0.012600,-0.014274,2.284377,1.133110,0.018147,-0.020553,2.284204,1.133093,0.024702,-0.027964,2.283517,1.133060,0.032272,-0.036510,2.282997,1.133007,0.040866,-0.046188,2.282986,1.132930,0.050481,-0.056979,2.282260,1.132824,0.061133,-0.068881,2.281533,1.132678,0.072830,-0.081850,2.280504,1.132481,0.085592,-0.095657,2.278304,1.132202,0.099431,-0.110594,2.276269,1.131845,0.114360,-0.126590,2.273890,1.131383,0.130388,-0.143454,2.270761,1.130784,0.147547,-0.161029,2.266794,1.130003,0.165836,-0.179523,2.262332,1.129016,0.185269,-0.198527,2.256326,1.127738,0.205822,-0.218138,2.249031,1.126156,0.227527,-0.238141,2.239993,1.124132,0.250325,-0.258302,2.228878,1.121594,0.274070,-0.278329,2.214204,1.118449,0.298793,-0.298310,2.196654,1.114528,0.324131,-0.317462,2.173394,1.109783,0.350101,-0.335853,2.146395,1.103901,0.376293,-0.353064,2.112341,1.096954,0.402547,-0.368950,2.073700,1.088642,0.428791,-0.383462,2.031152,1.078946,0.454976,-0.396635,1.986661,1.067536,0.480566,-0.407873,1.937038,1.054403,0.506154,-0.417303,1.885155,1.038894,0.532862,-0.424194,1.830369,1.020535,0.560354,-0.429344,1.776976,0.999295,0.587114,-0.431949,1.721214,0.975990,0.613345,-0.432547,1.665739,0.950239,0.639335,-0.431338,1.612200,0.922467,0.664996,-0.428473,1.561035,0.892593,0.688947,-0.423355,1.508240,0.861325,0.713403,-0.417235,1.461776,0.828289,0.737649,-0.409848,1.418888,0.793863,0.761275,-0.400901,1.376807,0.758074,0.784778,-0.390174,1.337204,0.721974,0.808762,-0.377683,1.301527,0.682718,0.831993,-0.364037,1.267144,0.644001,0.854696,-0.349494,1.236023,0.605478,0.877933,-0.334499,1.209284,0.565588,0.900180,-0.318435,1.183967,0.526138,0.923039,-0.301669,1.161513,0.486524,0.945895,-0.283298,1.140838,0.446747,0.968069,-0.264438,1.122475,0.408041,0.991179,-0.245463,1.106968,0.369477,1.012926,-0.225680,1.091435,0.331626,1.036995,-0.205401,1.079561,0.294288,1.060909,-0.184310,1.068215,0.257696,1.083531,-0.162846,1.058133,0.223343,1.105644,-0.141040,1.050851,0.190541,1.125691,-0.117965,1.045001,0.159310,1.141297,-0.094377,1.038028,0.128238,1.152672,-0.070831,1.029694,0.096282,1.159333,-0.046853,1.019136,0.063720,1.163819,-0.022991,1.008518,0.031234,1.169564,0.000125,1.000069,-0.000024,0.000202,-0.000241,2.458341,1.191742,0.000504,-0.000600,2.418738,1.191740,0.002015,-0.002401,2.418821,1.191730,0.004535,-0.005405,2.421986,1.191756,0.008071,-0.009618,2.424988,1.191753,0.012600,-0.015012,2.420242,1.191727,0.018145,-0.021612,2.419937,1.191703,0.024704,-0.029410,2.419746,1.191662,0.032278,-0.038398,2.419409,1.191604,0.040874,-0.048574,2.418995,1.191515,0.050496,-0.059920,2.418190,1.191389,0.061160,-0.072432,2.417487,1.191221,0.072871,-0.086009,2.415853,1.190984,0.085664,-0.100559,2.413669,1.190664,0.099543,-0.116283,2.411423,1.190256,0.114520,-0.133071,2.408711,1.189719,0.130616,-0.150670,2.404900,1.189019,0.147856,-0.169197,2.400512,1.188125,0.166235,-0.188545,2.394939,1.186972,0.185804,-0.208480,2.388232,1.185515,0.206488,-0.228883,2.379190,1.183673,0.228383,-0.249897,2.369208,1.181382,0.251305,-0.270851,2.355459,1.178478,0.275349,-0.291780,2.339142,1.174857,0.300106,-0.312257,2.316655,1.170411,0.325849,-0.332225,2.291540,1.164883,0.351782,-0.350862,2.257242,1.158196,0.378248,-0.368431,2.218671,1.150173,0.404674,-0.384428,2.173680,1.140703,0.431385,-0.399230,2.127083,1.129555,0.457407,-0.411875,2.073236,1.116436,0.483275,-0.423013,2.018223,1.101373,0.509278,-0.432624,1.962674,1.084257,0.534751,-0.439261,1.900814,1.064592,0.561895,-0.443801,1.839558,1.040881,0.588677,-0.445872,1.777763,1.015208,0.614900,-0.445896,1.716550,0.987252,0.641051,-0.444148,1.657984,0.957271,0.666409,-0.440299,1.600832,0.924841,0.691872,-0.435318,1.548237,0.891185,0.716638,-0.428631,1.497572,0.855929,0.739864,-0.419872,1.447043,0.819676,0.763707,-0.410456,1.403648,0.781455,0.786744,-0.399390,1.360844,0.742965,0.809585,-0.386381,1.320529,0.703260,0.834164,-0.372622,1.286467,0.662385,0.856713,-0.357177,1.252306,0.621379,0.879820,-0.341458,1.223070,0.580238,0.902721,-0.325024,1.197115,0.539028,0.924650,-0.307543,1.172314,0.498592,0.947613,-0.289557,1.151171,0.457980,0.969590,-0.269799,1.129986,0.417696,0.992961,-0.250111,1.113321,0.377529,1.014582,-0.229761,1.097149,0.339096,1.038069,-0.209375,1.083913,0.301119,1.061661,-0.188038,1.071241,0.263506,1.085069,-0.165874,1.060508,0.227921,1.107744,-0.143437,1.052930,0.194062,1.127982,-0.120574,1.046396,0.162506,1.144541,-0.096569,1.039880,0.130788,1.155876,-0.072039,1.030946,0.098057,1.162719,-0.047888,1.020124,0.064956,1.167089,-0.023740,1.008953,0.031966,1.172775,0.000277,1.000067,-0.000111,0.000200,-0.000251,2.573709,1.253951,0.000504,-0.000632,2.572401,1.253940,0.002015,-0.002527,2.571267,1.253927,0.004535,-0.005687,2.572481,1.253948,0.008062,-0.010108,2.571851,1.253941,0.012588,-0.015780,2.568431,1.253934,0.018139,-0.022731,2.569765,1.253893,0.024709,-0.030948,2.572115,1.253853,0.032283,-0.040401,2.571456,1.253785,0.040883,-0.051105,2.571041,1.253683,0.050514,-0.063041,2.570153,1.253538,0.061188,-0.076195,2.569085,1.253336,0.072926,-0.090402,2.567184,1.253065,0.085746,-0.105745,2.564731,1.252697,0.099661,-0.122296,2.561995,1.252218,0.114699,-0.139912,2.559019,1.251590,0.130882,-0.158362,2.555017,1.250766,0.148202,-0.177856,2.549419,1.249744,0.166706,-0.198049,2.542908,1.248423,0.186404,-0.219014,2.535205,1.246741,0.207272,-0.240376,2.524893,1.244596,0.229345,-0.262230,2.512804,1.241917,0.252494,-0.284134,2.496923,1.238610,0.276690,-0.305828,2.476583,1.234474,0.301798,-0.327107,2.451548,1.229292,0.327423,-0.347300,2.418630,1.222997,0.353848,-0.366699,2.381002,1.215366,0.380342,-0.384421,2.334413,1.206199,0.407390,-0.400855,2.285660,1.195374,0.433913,-0.415241,2.228604,1.182290,0.460837,-0.428275,2.171532,1.167385,0.486381,-0.438573,2.105639,1.150401,0.511959,-0.447348,2.040835,1.130990,0.537586,-0.454152,1.974797,1.109302,0.564035,-0.458684,1.907895,1.084131,0.590690,-0.460058,1.839482,1.055803,0.617250,-0.459662,1.772332,1.025103,0.643406,-0.457260,1.707313,0.992502,0.668794,-0.452666,1.644722,0.957657,0.693930,-0.446641,1.586832,0.921340,0.718708,-0.439121,1.531197,0.883841,0.743469,-0.430429,1.480765,0.844931,0.766080,-0.419622,1.430338,0.804786,0.789801,-0.408368,1.386295,0.764206,0.812718,-0.395392,1.343758,0.722565,0.835453,-0.380699,1.304655,0.680585,0.858801,-0.364834,1.269287,0.637235,0.881537,-0.348092,1.237493,0.594579,0.904656,-0.331087,1.208862,0.552313,0.926357,-0.312966,1.182365,0.510080,0.949001,-0.294684,1.159452,0.468677,0.971598,-0.275361,1.138706,0.426723,0.994905,-0.254947,1.120552,0.385875,1.017981,-0.234109,1.104215,0.345751,1.040840,-0.213040,1.089276,0.306762,1.063893,-0.191616,1.075845,0.269066,1.086907,-0.169272,1.063788,0.232171,1.109937,-0.146076,1.054977,0.197826,1.130808,-0.122544,1.048572,0.165272,1.146831,-0.098492,1.040742,0.133280,1.158955,-0.073710,1.031818,0.100262,1.166161,-0.048610,1.020747,0.066165,1.170491,-0.024209,1.009380,0.032741,1.176111,0.000010,1.000042,0.000056,0.000202,-0.000267,2.786357,1.320169,0.000504,-0.000665,2.741889,1.320168,0.002015,-0.002660,2.740000,1.320143,0.004536,-0.005987,2.744276,1.320161,0.008063,-0.010644,2.743432,1.320162,0.012600,-0.016628,2.741741,1.320148,0.018144,-0.023937,2.741314,1.320127,0.024708,-0.032577,2.741916,1.320061,0.032290,-0.042536,2.742132,1.319976,0.040894,-0.053799,2.741199,1.319861,0.050533,-0.066361,2.740258,1.319691,0.061223,-0.080202,2.739045,1.319458,0.072985,-0.095109,2.736519,1.319138,0.085841,-0.111296,2.733903,1.318715,0.099808,-0.128685,2.730944,1.318156,0.114903,-0.147202,2.727293,1.317424,0.131164,-0.166575,2.722169,1.316485,0.148599,-0.187019,2.716148,1.315274,0.167245,-0.208240,2.708701,1.313733,0.187078,-0.230151,2.698998,1.311792,0.208153,-0.252538,2.687341,1.309343,0.230418,-0.275295,2.672621,1.306247,0.253802,-0.298066,2.653619,1.302374,0.278261,-0.320673,2.629943,1.297573,0.303527,-0.342528,2.599228,1.291625,0.329571,-0.363531,2.562226,1.284374,0.355939,-0.382963,2.515491,1.275478,0.382987,-0.401306,2.464858,1.264866,0.409917,-0.417455,2.404877,1.252184,0.437015,-0.432067,2.341408,1.237415,0.463474,-0.444204,2.271837,1.220687,0.489835,-0.454631,2.200593,1.200973,0.516054,-0.463338,2.129733,1.179346,0.541397,-0.469425,2.055635,1.155039,0.566798,-0.473526,1.980812,1.127866,0.593114,-0.474632,1.904723,1.097304,0.619945,-0.473597,1.832456,1.063603,0.646325,-0.470656,1.761501,1.027971,0.672320,-0.465675,1.694248,0.990692,0.697163,-0.458527,1.629227,0.951582,0.721472,-0.449904,1.568132,0.911197,0.745855,-0.440140,1.512084,0.869745,0.770089,-0.429338,1.460694,0.827648,0.792546,-0.416701,1.410739,0.784728,0.815161,-0.403151,1.365438,0.741884,0.837994,-0.388714,1.324811,0.697800,0.861220,-0.372573,1.287723,0.653341,0.883737,-0.355024,1.252491,0.609455,0.906784,-0.337092,1.221844,0.565275,0.928493,-0.318370,1.192881,0.521558,0.951495,-0.299605,1.169131,0.478149,0.973586,-0.280067,1.146316,0.436325,0.996400,-0.259823,1.127860,0.394409,1.019780,-0.238313,1.110521,0.353045,1.042775,-0.216506,1.093915,0.312803,1.066822,-0.194695,1.080326,0.274100,1.089869,-0.172290,1.067722,0.236657,1.113606,-0.149264,1.058471,0.201603,1.134229,-0.124814,1.050701,0.168398,1.150922,-0.100070,1.043051,0.135616,1.163224,-0.075155,1.033742,0.102144,1.169965,-0.049933,1.021818,0.067532,1.174200,-0.024461,1.009916,0.033215,1.179766,0.000188,1.000045,-0.000014,0.000202,-0.000281,2.964186,1.390880,0.000505,-0.000702,2.945157,1.390903,0.002015,-0.002802,2.931184,1.390863,0.004535,-0.006307,2.935673,1.390900,0.008063,-0.011213,2.934274,1.390890,0.012598,-0.017516,2.932216,1.390876,0.018147,-0.025221,2.933324,1.390832,0.024711,-0.034322,2.933945,1.390769,0.032295,-0.044810,2.933496,1.390674,0.040904,-0.056673,2.932487,1.390538,0.050555,-0.069906,2.931571,1.390342,0.061259,-0.084468,2.929914,1.390064,0.073053,-0.100152,2.927039,1.389695,0.085948,-0.117202,2.924241,1.389201,0.099968,-0.135531,2.920760,1.388548,0.115135,-0.154906,2.915998,1.387692,0.131496,-0.175352,2.910285,1.386611,0.149049,-0.196783,2.903174,1.385190,0.167848,-0.219066,2.894584,1.383407,0.187879,-0.241983,2.883171,1.381148,0.209143,-0.265398,2.869102,1.378261,0.231689,-0.289254,2.852238,1.374690,0.255223,-0.312776,2.828264,1.370166,0.279952,-0.336260,2.800175,1.364591,0.305572,-0.358865,2.764282,1.357758,0.331650,-0.380223,2.717845,1.349413,0.358491,-0.400252,2.665326,1.339084,0.385445,-0.418422,2.602293,1.326773,0.412947,-0.434993,2.536973,1.312141,0.439681,-0.448757,2.459463,1.295205,0.467272,-0.461427,2.386250,1.275573,0.493568,-0.471102,2.303225,1.253400,0.519743,-0.478930,2.221945,1.228890,0.544882,-0.484098,2.136425,1.201730,0.570690,-0.488125,2.057093,1.172022,0.595905,-0.489185,1.975334,1.139312,0.622747,-0.487535,1.895055,1.103038,0.648695,-0.483482,1.815995,1.064364,0.675159,-0.478096,1.744272,1.024098,0.700714,-0.470492,1.675257,0.982186,0.725641,-0.461398,1.609135,0.939137,0.748552,-0.449825,1.545091,0.894791,0.772808,-0.438185,1.489394,0.850373,0.795928,-0.425073,1.437026,0.805287,0.818900,-0.411028,1.389654,0.760003,0.841633,-0.396047,1.345873,0.714914,0.863213,-0.379637,1.305185,0.669271,0.886662,-0.362227,1.269147,0.622935,0.908504,-0.343068,1.234714,0.577757,0.931425,-0.323982,1.204997,0.532922,0.953835,-0.304347,1.178871,0.488154,0.975813,-0.284219,1.155019,0.444885,0.997662,-0.263544,1.133941,0.402224,1.021167,-0.242611,1.116100,0.360530,1.044038,-0.220065,1.098348,0.318968,1.068837,-0.197580,1.084605,0.279107,1.092548,-0.174779,1.071217,0.241111,1.116157,-0.151596,1.060486,0.204913,1.137486,-0.127478,1.052751,0.171410,1.154694,-0.101915,1.044807,0.137999,1.166867,-0.076246,1.034824,0.103807,1.173715,-0.050661,1.022501,0.068802,1.178236,-0.025355,1.010324,0.034155,1.183545,0.000205,1.000059,-0.000110,0.000201,-0.000294,3.161080,1.466721,0.000505,-0.000740,3.155526,1.466737,0.002016,-0.002957,3.152852,1.466688,0.004537,-0.006655,3.150654,1.466667,0.008066,-0.011828,3.153109,1.466694,0.012604,-0.018479,3.152143,1.466721,0.018150,-0.026598,3.151025,1.466636,0.024714,-0.036191,3.150300,1.466562,0.032301,-0.047249,3.149861,1.466450,0.040924,-0.059766,3.149548,1.466289,0.050579,-0.073703,3.147516,1.466055,0.061306,-0.089022,3.145680,1.465738,0.073135,-0.105563,3.142428,1.465301,0.086075,-0.123544,3.139113,1.464715,0.100153,-0.142853,3.135064,1.463956,0.115411,-0.163183,3.129509,1.462962,0.131876,-0.184760,3.122959,1.461670,0.149570,-0.207172,3.114153,1.460045,0.168523,-0.230578,3.103626,1.457945,0.188784,-0.254658,3.090818,1.455279,0.210264,-0.279114,3.073352,1.451998,0.233030,-0.303930,3.052592,1.447780,0.256959,-0.328517,3.025187,1.442568,0.281901,-0.352755,2.990341,1.436026,0.307728,-0.375894,2.946820,1.427979,0.334197,-0.397924,2.892845,1.418249,0.360966,-0.417914,2.827937,1.406370,0.388478,-0.436526,2.758006,1.392134,0.415567,-0.452366,2.674696,1.375244,0.443518,-0.466917,2.595136,1.355660,0.470631,-0.478417,2.504173,1.333123,0.497419,-0.487825,2.413227,1.308181,0.523961,-0.495064,2.321239,1.280227,0.549708,-0.499844,2.228911,1.249894,0.575296,-0.502844,2.138834,1.217130,0.600168,-0.503368,2.049030,1.181412,0.625874,-0.501622,1.962267,1.142648,0.652164,-0.496936,1.876900,1.101268,0.678029,-0.490319,1.796344,1.057782,0.703248,-0.481575,1.718925,1.012884,0.728520,-0.471822,1.648358,0.966487,0.752577,-0.460134,1.581989,0.919880,0.776163,-0.447164,1.520109,0.873087,0.800016,-0.433601,1.465081,0.825803,0.822176,-0.418388,1.412564,0.778249,0.844873,-0.402704,1.366184,0.730849,0.865955,-0.385633,1.321865,0.684037,0.888173,-0.368255,1.283464,0.637192,0.910994,-0.349332,1.249215,0.590131,0.934270,-0.329612,1.218366,0.543213,0.956653,-0.309228,1.189808,0.497752,0.978476,-0.288310,1.163674,0.452837,1.000755,-0.267243,1.141389,0.409481,1.023827,-0.246015,1.122012,0.367354,1.045572,-0.223777,1.103303,0.325171,1.070445,-0.200837,1.088010,0.284442,1.094268,-0.177211,1.073650,0.245138,1.118639,-0.153531,1.063051,0.208289,1.139786,-0.129074,1.053921,0.173607,1.157848,-0.104051,1.045968,0.140467,1.170697,-0.077694,1.035782,0.105594,1.177874,-0.051393,1.023483,0.069898,1.182242,-0.025392,1.010620,0.034532,1.187612,-0.000032,1.000062,-0.000035,0.000202,-0.000313,3.450327,1.548291,0.000504,-0.000780,3.396162,1.548289,0.002015,-0.003120,3.395621,1.548260,0.004533,-0.007019,3.394299,1.548217,0.008066,-0.012486,3.398803,1.548274,0.012600,-0.019500,3.396363,1.548245,0.018151,-0.028076,3.396805,1.548192,0.024722,-0.038209,3.396384,1.548109,0.032306,-0.049868,3.395158,1.547979,0.040936,-0.063077,3.394303,1.547785,0.050610,-0.077791,3.392979,1.547513,0.061360,-0.093869,3.389910,1.547134,0.073227,-0.111380,3.386669,1.546619,0.086217,-0.130371,3.382974,1.545938,0.100364,-0.150684,3.378046,1.545039,0.115733,-0.172116,3.371719,1.543880,0.132309,-0.194809,3.363764,1.542380,0.150174,-0.218431,3.353699,1.540462,0.169340,-0.242954,3.341397,1.538002,0.189788,-0.268175,3.324957,1.534894,0.211581,-0.293776,3.304776,1.530954,0.234561,-0.319619,3.278192,1.526033,0.258776,-0.345089,3.244910,1.519926,0.284059,-0.370176,3.203338,1.512296,0.310312,-0.394171,3.152477,1.502956,0.336748,-0.416137,3.083616,1.491463,0.364029,-0.436752,3.010481,1.477493,0.391575,-0.455102,2.925454,1.460933,0.419409,-0.471378,2.834380,1.441554,0.446811,-0.484714,2.733329,1.418861,0.474489,-0.496021,2.633630,1.393405,0.501751,-0.504991,2.530935,1.364633,0.528488,-0.511392,2.426653,1.333234,0.554428,-0.515395,2.323633,1.299138,0.580434,-0.517761,2.224964,1.262462,0.605474,-0.517598,2.127228,1.223784,0.629888,-0.514946,2.030545,1.182321,0.655579,-0.510177,1.939070,1.138515,0.681940,-0.503097,1.852355,1.091502,0.707228,-0.493537,1.768084,1.043464,0.731894,-0.482372,1.690840,0.994242,0.756741,-0.470312,1.619277,0.944749,0.780160,-0.456412,1.553430,0.894816,0.803384,-0.441492,1.493357,0.845202,0.826347,-0.425944,1.437830,0.795954,0.849145,-0.409532,1.388578,0.746915,0.870617,-0.391988,1.341527,0.698025,0.892943,-0.374229,1.302188,0.649579,0.913828,-0.355148,1.262877,0.601833,0.936830,-0.335238,1.230136,0.554521,0.958687,-0.313939,1.199596,0.507208,0.982008,-0.292741,1.173619,0.461357,1.003691,-0.270940,1.149015,0.416031,1.027223,-0.249102,1.128689,0.372457,1.050048,-0.226899,1.109444,0.330281,1.074105,-0.204329,1.092943,0.288987,1.098971,-0.180560,1.078591,0.249075,1.123324,-0.155987,1.066885,0.211519,1.145445,-0.130929,1.057617,0.176506,1.162856,-0.105269,1.048453,0.142345,1.175360,-0.079267,1.037439,0.107452,1.182514,-0.052547,1.024393,0.071252,1.186575,-0.025744,1.011093,0.035019,1.192050,0.000318,1.000013,-0.000152,0.000204,-0.000334,3.909175,1.636412,0.000504,-0.000825,3.678647,1.636410,0.002015,-0.003298,3.678315,1.636387,0.004533,-0.007417,3.674126,1.636310,0.008062,-0.013190,3.676771,1.636376,0.012603,-0.020613,3.678135,1.636369,0.018153,-0.029675,3.677315,1.636299,0.024723,-0.040378,3.676872,1.636196,0.032318,-0.052708,3.675750,1.636038,0.040955,-0.066660,3.674803,1.635810,0.050645,-0.082203,3.672735,1.635494,0.061429,-0.099150,3.669047,1.635048,0.073333,-0.117679,3.665401,1.634437,0.086388,-0.137725,3.661315,1.633634,0.100620,-0.159081,3.654992,1.632571,0.116087,-0.181721,3.647341,1.631202,0.132820,-0.205611,3.637877,1.629432,0.150867,-0.230542,3.626333,1.627161,0.170234,-0.256239,3.610671,1.624266,0.190981,-0.282751,3.591685,1.620589,0.213013,-0.309430,3.565864,1.615999,0.236387,-0.336427,3.534826,1.610216,0.260943,-0.362931,3.493984,1.603047,0.286497,-0.388644,3.442075,1.593920,0.312769,-0.412912,3.375973,1.582961,0.339832,-0.435635,3.299355,1.569343,0.367214,-0.456181,3.208994,1.553137,0.394935,-0.474325,3.108910,1.533791,0.422935,-0.490318,3.001767,1.511093,0.451166,-0.503827,2.891735,1.485145,0.478695,-0.514185,2.773430,1.455617,0.506313,-0.522502,2.657639,1.422946,0.533427,-0.528119,2.541132,1.387843,0.559942,-0.531430,2.426950,1.349542,0.585150,-0.531978,2.312437,1.309303,0.610500,-0.531054,2.205966,1.266280,0.635380,-0.528058,2.101993,1.221709,0.659852,-0.522751,2.002950,1.175062,0.685151,-0.515026,1.908647,1.125078,0.710920,-0.505020,1.819389,1.074296,0.736066,-0.493268,1.735806,1.022420,0.760503,-0.480032,1.658607,0.970230,0.785091,-0.465986,1.589424,0.917077,0.807523,-0.449721,1.522533,0.864888,0.830974,-0.433461,1.465416,0.813006,0.852659,-0.415808,1.409076,0.761689,0.874841,-0.397855,1.360758,0.711258,0.896322,-0.379041,1.316829,0.661721,0.918134,-0.360048,1.278574,0.612263,0.939356,-0.340108,1.242200,0.564369,0.961025,-0.318877,1.210305,0.516506,0.984371,-0.297130,1.183689,0.469342,1.006905,-0.274661,1.157466,0.423080,1.029941,-0.252234,1.135066,0.378315,1.052751,-0.229268,1.114518,0.335169,1.077981,-0.206662,1.097760,0.293336,1.102542,-0.183331,1.082051,0.252984,1.126539,-0.158797,1.068935,0.214990,1.149023,-0.133014,1.058996,0.178903,1.167550,-0.106641,1.050245,0.144559,1.179994,-0.079952,1.038648,0.108667,1.187104,-0.053316,1.025284,0.072209,1.191406,-0.026826,1.011453,0.035833,1.196748,0.000226,1.000034,-0.000061,0.000200,-0.000346,3.996419,1.732034,0.000504,-0.000873,4.000138,1.732038,0.002016,-0.003492,4.002078,1.732012,0.004538,-0.007859,4.005626,1.731962,0.008064,-0.013963,3.998500,1.731999,0.012590,-0.021794,3.995024,1.732004,0.018154,-0.031406,3.999233,1.731901,0.024727,-0.042733,3.998497,1.731774,0.032327,-0.055781,3.997064,1.731599,0.040974,-0.070543,3.995856,1.731325,0.050685,-0.086984,3.993839,1.730945,0.061506,-0.104897,3.989519,1.730417,0.073458,-0.124506,3.985313,1.729697,0.086573,-0.145706,3.979984,1.728747,0.100909,-0.168211,3.972562,1.727491,0.116509,-0.192198,3.963836,1.725854,0.133404,-0.217280,3.951919,1.723749,0.151659,-0.243556,3.937734,1.721093,0.171288,-0.270611,3.919021,1.717640,0.192301,-0.298389,3.895171,1.713272,0.214683,-0.326338,3.864171,1.707825,0.238392,-0.354394,3.824682,1.700956,0.263151,-0.381636,3.771168,1.692392,0.289155,-0.408266,3.709961,1.681769,0.315832,-0.433070,3.630302,1.668539,0.342942,-0.455741,3.534719,1.652513,0.370892,-0.476655,3.431531,1.633428,0.398985,-0.494692,3.314933,1.610694,0.427206,-0.510313,3.189741,1.584240,0.455266,-0.522760,3.058325,1.554195,0.483472,-0.532872,2.927213,1.520805,0.511192,-0.540229,2.794112,1.484026,0.538706,-0.545105,2.663786,1.443796,0.565422,-0.547251,2.534841,1.401429,0.591270,-0.547115,2.408437,1.356231,0.616787,-0.545113,2.291284,1.308887,0.641380,-0.540853,2.177478,1.260447,0.665344,-0.534561,2.069265,1.210634,0.690147,-0.527115,1.969776,1.158569,0.714578,-0.516171,1.870847,1.104593,0.740349,-0.504048,1.782674,1.049578,0.764563,-0.489683,1.698614,0.994458,0.788710,-0.474541,1.624447,0.938612,0.812154,-0.458099,1.554453,0.883694,0.834566,-0.440345,1.490045,0.830220,0.857486,-0.422491,1.432889,0.776499,0.879224,-0.403588,1.380669,0.724257,0.899971,-0.383819,1.333124,0.673311,0.922111,-0.364250,1.292648,0.622999,0.942842,-0.343873,1.253933,0.573304,0.964398,-0.323206,1.221027,0.525090,0.986860,-0.301711,1.191806,0.477580,1.009760,-0.278695,1.165162,0.430624,1.033347,-0.255591,1.141715,0.384482,1.055937,-0.232039,1.119739,0.340532,1.081178,-0.208664,1.102117,0.297311,1.105696,-0.184935,1.085062,0.256227,1.129575,-0.160673,1.070918,0.217709,1.152135,-0.135414,1.060642,0.181471,1.171221,-0.108462,1.051041,0.146380,1.184412,-0.081008,1.039694,0.110120,1.191820,-0.053710,1.025903,0.073052,1.196195,-0.026625,1.011816,0.036129,1.201677,-0.000175,0.999945,0.000098,0.000196,-0.000360,4.100786,1.836290,0.000504,-0.000925,4.370184,1.836295,0.002018,-0.003706,4.385247,1.836243,0.004534,-0.008324,4.370146,1.836210,0.008064,-0.014805,4.372335,1.836256,0.012597,-0.023116,4.359918,1.836259,0.018158,-0.033299,4.371503,1.836123,0.024732,-0.045301,4.370533,1.835988,0.032344,-0.059143,4.369649,1.835768,0.040999,-0.074779,4.367861,1.835454,0.050739,-0.092178,4.364322,1.834974,0.061594,-0.111161,4.359221,1.834355,0.073604,-0.131958,4.354620,1.833499,0.086796,-0.154393,4.347915,1.832355,0.101246,-0.178201,4.339152,1.830880,0.116990,-0.203531,4.328327,1.828936,0.134086,-0.230043,4.314240,1.826442,0.152589,-0.257718,4.296795,1.823230,0.172514,-0.286176,4.273985,1.819124,0.193853,-0.315295,4.244136,1.813909,0.216582,-0.344507,4.205152,1.807410,0.240668,-0.373646,4.154781,1.799084,0.265904,-0.401897,4.091563,1.788905,0.292226,-0.429136,4.013199,1.776206,0.319045,-0.454057,3.912886,1.760500,0.346721,-0.477219,3.800927,1.741586,0.374849,-0.497883,3.675652,1.718818,0.403078,-0.515504,3.536892,1.692138,0.431597,-0.530621,3.391351,1.661434,0.460246,-0.542852,3.242817,1.626989,0.488899,-0.552238,3.093685,1.588582,0.517215,-0.559045,2.944163,1.546300,0.544480,-0.562351,2.794189,1.501299,0.571542,-0.563394,2.650239,1.453758,0.598167,-0.562590,2.513757,1.403321,0.624104,-0.559636,2.384203,1.352431,0.648789,-0.554148,2.259149,1.298758,0.672715,-0.546779,2.140250,1.244943,0.696258,-0.537896,2.030401,1.189971,0.720048,-0.527401,1.928311,1.134526,0.744078,-0.514142,1.830175,1.076504,0.768895,-0.499352,1.740731,1.018032,0.792551,-0.482982,1.658911,0.960250,0.817007,-0.466406,1.586579,0.903029,0.839035,-0.447616,1.516969,0.846484,0.862742,-0.429261,1.458675,0.791420,0.884307,-0.409479,1.402989,0.737125,0.905641,-0.389303,1.352817,0.683912,0.926185,-0.368344,1.306684,0.632690,0.947229,-0.347366,1.267395,0.581739,0.969502,-0.326720,1.233192,0.532305,0.990758,-0.304973,1.201017,0.484166,1.012749,-0.282816,1.173018,0.437385,1.035533,-0.259084,1.147184,0.390755,1.059915,-0.235239,1.125388,0.345399,1.084348,-0.211044,1.105859,0.301356,1.109544,-0.186698,1.088888,0.259708,1.133770,-0.161900,1.073848,0.220324,1.157553,-0.136604,1.063190,0.183857,1.176461,-0.110428,1.053110,0.148521,1.190137,-0.082898,1.041484,0.112124,1.197215,-0.054554,1.026844,0.074160,1.201654,-0.026744,1.012264,0.036527,1.207085,0.000399,1.000034,-0.000201,0.000191,-0.000373,4.194318,1.950551,0.000504,-0.000983,4.804350,1.950552,0.002015,-0.003931,4.802820,1.950518,0.004536,-0.008847,4.805254,1.950472,0.008064,-0.015725,4.804152,1.950517,0.012693,-0.024740,4.826828,1.949914,0.018159,-0.035365,4.803103,1.950349,0.024740,-0.048122,4.803220,1.950183,0.032361,-0.062822,4.801522,1.949917,0.041034,-0.079430,4.799593,1.949538,0.050815,-0.097841,4.797179,1.948972,0.061702,-0.118026,4.789557,1.948246,0.073766,-0.140112,4.783293,1.947204,0.087066,-0.163819,4.775698,1.945855,0.101637,-0.189122,4.764612,1.944052,0.117558,-0.215884,4.751486,1.941710,0.134884,-0.243968,4.734791,1.938727,0.153637,-0.273170,4.712078,1.934891,0.173890,-0.303146,4.683575,1.929976,0.195643,-0.333704,4.646766,1.923740,0.218767,-0.364170,4.596814,1.915888,0.243337,-0.394530,4.535509,1.905970,0.268860,-0.423512,4.452006,1.893623,0.295173,-0.450609,4.345682,1.878286,0.322784,-0.476488,4.231632,1.859391,0.350616,-0.499420,4.093553,1.836912,0.379127,-0.519862,3.944127,1.809625,0.407860,-0.537373,3.782223,1.778529,0.436717,-0.551802,3.615563,1.742684,0.465345,-0.562951,3.440672,1.702289,0.494158,-0.571334,3.268070,1.658666,0.522896,-0.577227,3.100668,1.611027,0.551379,-0.580514,2.937615,1.559742,0.578992,-0.580610,2.778703,1.507257,0.605095,-0.577729,2.621626,1.451941,0.630653,-0.573000,2.476506,1.395218,0.656175,-0.566944,2.341592,1.337862,0.681036,-0.558988,2.216478,1.279275,0.704713,-0.549211,2.096972,1.220526,0.726894,-0.537190,1.983311,1.161709,0.749865,-0.524167,1.881100,1.102095,0.773553,-0.508991,1.785637,1.042039,0.797102,-0.491658,1.697234,0.981588,0.821187,-0.474093,1.620250,0.921265,0.843848,-0.454980,1.547071,0.862757,0.866662,-0.435421,1.482008,0.804700,0.888696,-0.414990,1.424116,0.749432,0.910945,-0.394472,1.372658,0.694767,0.932300,-0.373239,1.325157,0.641106,0.952850,-0.351347,1.282217,0.589689,0.974718,-0.329809,1.244897,0.539322,0.996445,-0.307902,1.212306,0.490083,1.017580,-0.285392,1.181402,0.442702,1.040342,-0.262782,1.155996,0.395911,1.064399,-0.238995,1.131708,0.350206,1.089464,-0.214297,1.111215,0.305175,1.115565,-0.189293,1.093094,0.262686,1.140640,-0.163843,1.077994,0.223078,1.163824,-0.137789,1.066014,0.185651,1.182577,-0.111087,1.055615,0.150045,1.195775,-0.083945,1.042940,0.113457,1.203175,-0.056145,1.028015,0.075453,1.207282,-0.027685,1.012552,0.037217,1.213019,0.000362,0.999938,-0.000293,0.000187,-0.000388,4.316009,2.076500,0.000504,-0.001048,5.317799,2.076499,0.002014,-0.004182,5.306557,2.076523,0.004539,-0.009425,5.317505,2.076453,0.008063,-0.016737,5.312143,2.076410,0.012614,-0.026171,5.316434,2.076389,0.018158,-0.037641,5.307836,2.076265,0.024767,-0.051266,5.315297,2.076044,0.032372,-0.066859,5.307433,2.075743,0.041066,-0.084538,5.304809,2.075270,0.050871,-0.104062,5.299277,2.074622,0.061821,-0.125613,5.293419,2.073708,0.073970,-0.149085,5.286629,2.072457,0.087375,-0.174214,5.275937,2.070804,0.102105,-0.201136,5.263267,2.068647,0.118223,-0.229505,5.246309,2.065846,0.135814,-0.259217,5.225496,2.062189,0.154887,-0.289990,5.196580,2.057566,0.175510,-0.321618,5.160716,2.051593,0.197636,-0.353632,5.112202,2.043949,0.221168,-0.385303,5.046981,2.034445,0.246099,-0.416511,4.965386,2.022368,0.272070,-0.446377,4.860735,2.007160,0.299090,-0.474279,4.735140,1.988598,0.326702,-0.499809,4.584962,1.965865,0.355017,-0.522790,4.420447,1.938705,0.383856,-0.542755,4.241942,1.906370,0.413059,-0.559903,4.053302,1.869455,0.441882,-0.573174,3.852753,1.827946,0.471516,-0.584151,3.660377,1.781652,0.500872,-0.591843,3.466027,1.730885,0.529677,-0.596253,3.272812,1.676821,0.557683,-0.597604,3.084286,1.620064,0.585652,-0.596591,2.906111,1.560909,0.612819,-0.593138,2.738258,1.500318,0.639848,-0.588245,2.584172,1.438127,0.664758,-0.580140,2.430697,1.375746,0.688754,-0.570189,2.290701,1.312727,0.712848,-0.559420,2.162679,1.250063,0.735111,-0.546570,2.042186,1.187840,0.757521,-0.532944,1.933435,1.125513,0.780056,-0.517981,1.833524,1.063827,0.802513,-0.500724,1.739053,1.002154,0.825462,-0.481625,1.652381,0.939811,0.848973,-0.462327,1.577560,0.878279,0.871521,-0.441928,1.509291,0.819200,0.892325,-0.420297,1.443799,0.761607,0.914935,-0.399072,1.389647,0.705351,0.936429,-0.377232,1.339903,0.650213,0.957614,-0.355091,1.295467,0.597773,0.979578,-0.332767,1.256692,0.545914,1.000860,-0.310147,1.221666,0.495661,1.022550,-0.287395,1.190775,0.448026,1.045005,-0.264582,1.162641,0.400490,1.068703,-0.241464,1.138358,0.354088,1.093098,-0.217504,1.115973,0.309812,1.119230,-0.192140,1.096284,0.266297,1.144608,-0.165975,1.080042,0.225831,1.168599,-0.139174,1.067749,0.187761,1.187970,-0.111910,1.056635,0.151322,1.201240,-0.083978,1.043566,0.114337,1.208895,-0.056089,1.028366,0.076083,1.213344,-0.028369,1.013074,0.037735,1.219220,-0.000534,0.999968,0.000076,0.000182,-0.000404,4.433519,2.216201,0.000504,-0.001117,5.911693,2.216198,0.002017,-0.004469,5.919142,2.216190,0.004536,-0.010051,5.913172,2.216130,0.008065,-0.017867,5.911791,2.216145,0.012467,-0.027603,5.785357,2.216447,0.018156,-0.040159,5.901121,2.215958,0.024758,-0.054670,5.908781,2.215654,0.032395,-0.071352,5.906098,2.215283,0.041108,-0.090201,5.902558,2.214715,0.050955,-0.111004,5.895707,2.213905,0.061968,-0.134002,5.888736,2.212807,0.074206,-0.159038,5.880633,2.211303,0.087742,-0.185801,5.867001,2.209297,0.102652,-0.214368,5.851446,2.206657,0.119006,-0.244573,5.830722,2.203232,0.136883,-0.276067,5.802688,2.198778,0.156335,-0.308660,5.767185,2.193091,0.177396,-0.341940,5.719726,2.185858,0.200070,-0.375591,5.658792,2.176584,0.224067,-0.408564,5.573508,2.164759,0.249420,-0.440668,5.465696,2.149777,0.275879,-0.471138,5.332207,2.131225,0.303307,-0.499204,5.173339,2.108794,0.331189,-0.524547,4.985102,2.080585,0.359932,-0.547256,4.785788,2.047792,0.389063,-0.566479,4.569344,2.009518,0.418725,-0.583031,4.349557,1.965601,0.448181,-0.595809,4.121278,1.916911,0.477703,-0.605102,3.892291,1.863530,0.507999,-0.612462,3.676557,1.806286,0.536889,-0.615451,3.456241,1.745841,0.565778,-0.616029,3.249464,1.681137,0.593863,-0.613644,3.050273,1.615238,0.620770,-0.608268,2.859599,1.548003,0.647171,-0.601116,2.683287,1.480447,0.673458,-0.592840,2.524036,1.412084,0.698064,-0.581973,2.371046,1.345130,0.721011,-0.568963,2.229104,1.278440,0.744293,-0.555642,2.103213,1.212448,0.766314,-0.540934,1.985370,1.146287,0.788164,-0.525271,1.878842,1.082600,0.809019,-0.507986,1.779821,1.019978,0.830947,-0.489717,1.691630,0.956931,0.853732,-0.469345,1.607513,0.894207,0.874904,-0.447618,1.531176,0.833436,0.897289,-0.426124,1.467302,0.773611,0.919226,-0.404025,1.408321,0.716016,0.940860,-0.381454,1.356209,0.659515,0.962764,-0.358901,1.310082,0.604629,0.984322,-0.335983,1.268485,0.552335,1.005343,-0.312533,1.230662,0.501591,1.028153,-0.289452,1.199168,0.452032,1.049283,-0.265754,1.168575,0.404347,1.073687,-0.242571,1.143533,0.357445,1.097546,-0.218681,1.119859,0.312534,1.123340,-0.194465,1.099634,0.269437,1.148166,-0.168797,1.081968,0.228586,1.172518,-0.141552,1.068789,0.189866,1.192930,-0.113325,1.057548,0.152772,1.206816,-0.084800,1.044145,0.115390,1.215045,-0.056019,1.028938,0.076493,1.220048,-0.027733,1.013338,0.037767,1.225852,0.000050,0.999927,-0.000160,0.000178,-0.000422,4.587902,2.372253,0.000504,-0.001195,6.624675,2.372248,0.002016,-0.004782,6.626884,2.372187,0.004531,-0.010746,6.607379,2.372318,0.008081,-0.019161,6.640102,2.372084,0.012637,-0.029945,6.653708,2.372128,0.018167,-0.042999,6.623837,2.371902,0.024769,-0.058516,6.624484,2.371595,0.032421,-0.076370,6.620877,2.371120,0.041164,-0.096474,6.615235,2.370428,0.051057,-0.118786,6.607844,2.369440,0.062136,-0.143390,6.599216,2.368075,0.074490,-0.170034,6.588018,2.366218,0.088179,-0.198717,6.572526,2.363747,0.103307,-0.229147,6.551868,2.360517,0.119964,-0.261253,6.526089,2.356304,0.138173,-0.294703,6.489593,2.350797,0.158072,-0.329261,6.443573,2.343783,0.179592,-0.364298,6.379764,2.334673,0.202709,-0.399375,6.295845,2.323125,0.227335,-0.433616,6.184929,2.308547,0.253230,-0.466794,6.045905,2.289980,0.280100,-0.497509,5.871803,2.266964,0.308146,-0.525956,5.672422,2.239074,0.336544,-0.551101,5.443256,2.204809,0.365223,-0.572471,5.188034,2.164827,0.395484,-0.592088,4.943783,2.119489,0.424416,-0.606026,4.666400,2.067262,0.455641,-0.619671,4.418961,2.009937,0.485298,-0.627583,4.152737,1.948900,0.514774,-0.632072,3.893344,1.882692,0.544172,-0.634033,3.645332,1.814073,0.573283,-0.633239,3.414651,1.742717,0.602155,-0.630008,3.195712,1.669703,0.630520,-0.624550,2.994536,1.596021,0.657121,-0.615749,2.799373,1.522572,0.682071,-0.604738,2.616102,1.448978,0.707605,-0.593301,2.456112,1.376250,0.731492,-0.579628,2.303517,1.305297,0.754139,-0.564473,2.165340,1.235548,0.776505,-0.548787,2.041646,1.167051,0.796833,-0.531415,1.923334,1.100534,0.817565,-0.513778,1.818176,1.035144,0.837981,-0.495167,1.723830,0.971583,0.858513,-0.475690,1.638448,0.908841,0.879892,-0.454099,1.559420,0.846701,0.902258,-0.432038,1.491471,0.785332,0.924114,-0.409316,1.428878,0.726409,0.944230,-0.385618,1.370785,0.668588,0.967001,-0.362604,1.323529,0.612943,0.988579,-0.339117,1.279679,0.559038,1.010210,-0.315355,1.240104,0.506867,1.032084,-0.291408,1.205261,0.456934,1.054671,-0.267387,1.175197,0.407792,1.078314,-0.243346,1.148153,0.360992,1.102443,-0.219205,1.123799,0.315577,1.128524,-0.194996,1.102624,0.271742,1.153989,-0.169897,1.085134,0.230702,1.179420,-0.143960,1.071699,0.192146,1.200098,-0.116173,1.060179,0.155164,1.214837,-0.086655,1.046290,0.117071,1.222749,-0.056956,1.030040,0.077450,1.227273,-0.027883,1.013650,0.038092,1.233293,0.000831,1.000043,-0.000462,0.000173,-0.000442,4.741539,2.547922,0.000504,-0.001284,7.491127,2.547919,0.002014,-0.005132,7.484889,2.547844,0.004523,-0.011521,7.439875,2.547587,0.008059,-0.020524,7.483694,2.547725,0.012586,-0.032029,7.470912,2.547685,0.018081,-0.045948,7.422534,2.547686,0.024783,-0.062844,7.487581,2.547107,0.032451,-0.082011,7.483603,2.546522,0.041233,-0.103540,7.475124,2.545684,0.051181,-0.127537,7.467521,2.544438,0.062347,-0.153921,7.456266,2.542744,0.074829,-0.182427,7.440422,2.540459,0.088703,-0.213134,7.420694,2.537380,0.104080,-0.245750,7.394875,2.533347,0.121050,-0.279941,7.358515,2.528069,0.139697,-0.315591,7.313001,2.521237,0.160036,-0.351980,7.246342,2.512378,0.182147,-0.388993,7.163688,2.500993,0.205799,-0.425570,7.048339,2.486450,0.231091,-0.461093,6.902586,2.468174,0.257405,-0.494668,6.712721,2.444774,0.284956,-0.525889,6.491261,2.415538,0.313180,-0.553693,6.232833,2.380610,0.342327,-0.578724,5.953834,2.338525,0.371689,-0.599706,5.649698,2.290256,0.401919,-0.617615,5.347900,2.235157,0.432204,-0.631632,5.036417,2.173932,0.463151,-0.643082,4.735976,2.107298,0.493388,-0.649970,4.432044,2.036121,0.524128,-0.654188,4.145472,1.961595,0.553930,-0.654671,3.866877,1.883602,0.583856,-0.653051,3.607848,1.804521,0.611762,-0.646994,3.356237,1.724047,0.639117,-0.638860,3.122531,1.643016,0.666279,-0.629093,2.913178,1.563932,0.692936,-0.617862,2.722675,1.484614,0.716498,-0.603279,2.536926,1.406734,0.742273,-0.589878,2.381054,1.331469,0.764031,-0.572744,2.228312,1.256796,0.786601,-0.555933,2.095451,1.185290,0.807776,-0.537992,1.972866,1.115940,0.828400,-0.519596,1.863394,1.048371,0.847412,-0.499847,1.760630,0.982934,0.866850,-0.479920,1.670998,0.919972,0.886340,-0.459434,1.587962,0.858100,0.906933,-0.437767,1.515505,0.796714,0.927490,-0.414068,1.448243,0.736162,0.950217,-0.390910,1.390505,0.677613,0.971545,-0.366964,1.337865,0.620477,0.992901,-0.342603,1.291104,0.565807,1.015460,-0.318596,1.251138,0.513086,1.037859,-0.294242,1.214291,0.461573,1.060535,-0.269601,1.182517,0.411838,1.086885,-0.245608,1.155300,0.363221,1.111237,-0.220589,1.129715,0.317174,1.138718,-0.196008,1.108103,0.273213,1.164223,-0.170408,1.089640,0.231968,1.187256,-0.144205,1.074145,0.192987,1.207851,-0.116945,1.061615,0.156118,1.222217,-0.088852,1.047599,0.118674,1.230315,-0.059381,1.030869,0.078993,1.235052,-0.029145,1.014126,0.038924,1.241359,0.000479,1.000114,-0.000211,0.000169,-0.000465,4.953966,2.747437,0.000504,-0.001384,8.544530,2.747430,0.002015,-0.005537,8.545147,2.747339,0.004542,-0.012477,8.557734,2.747125,0.008064,-0.022143,8.530193,2.747341,0.012543,-0.034411,8.465151,2.747411,0.018178,-0.049792,8.543328,2.746874,0.024810,-0.067784,8.547247,2.746396,0.032489,-0.088416,8.537436,2.745730,0.041313,-0.111580,8.526655,2.744596,0.051332,-0.137462,8.517438,2.743082,0.062603,-0.165860,8.502803,2.740950,0.075240,-0.196548,8.481507,2.738057,0.089341,-0.229440,8.454287,2.734174,0.105021,-0.264395,8.420289,2.729086,0.122399,-0.301020,8.373503,2.722420,0.141526,-0.338997,8.309059,2.713686,0.162451,-0.377589,8.221539,2.702492,0.185098,-0.416349,8.100116,2.687893,0.209406,-0.454284,7.941704,2.669386,0.235098,-0.490450,7.733318,2.645590,0.262100,-0.524592,7.486120,2.615709,0.290103,-0.555558,7.193498,2.579231,0.319135,-0.583516,6.874796,2.534957,0.348286,-0.606714,6.516118,2.483017,0.378840,-0.627850,6.163912,2.424214,0.409608,-0.644715,5.801404,2.357563,0.440553,-0.657657,5.435955,2.285835,0.470599,-0.665621,5.063481,2.207940,0.503172,-0.673767,4.743532,2.126440,0.533884,-0.676009,4.413409,2.040694,0.563808,-0.674536,4.092169,1.953979,0.591849,-0.668913,3.787057,1.865897,0.621474,-0.663159,3.520578,1.777762,0.650500,-0.655018,3.275065,1.689902,0.678011,-0.643949,3.043141,1.603528,0.703490,-0.630030,2.827104,1.519484,0.728250,-0.614910,2.632620,1.436677,0.752165,-0.598649,2.455570,1.355753,0.775894,-0.581771,2.295932,1.278884,0.797650,-0.563193,2.152291,1.202767,0.818505,-0.543750,2.022099,1.130338,0.838596,-0.524017,1.903562,1.060263,0.858396,-0.504064,1.797204,0.993077,0.877088,-0.483418,1.701208,0.928606,0.896606,-0.462786,1.617736,0.866039,0.914342,-0.440943,1.539227,0.804293,0.933550,-0.419129,1.470383,0.745206,0.955237,-0.396100,1.409100,0.685832,0.976700,-0.371743,1.354930,0.627953,0.997681,-0.346882,1.305249,0.572127,1.020784,-0.322391,1.262603,0.517941,1.043840,-0.297564,1.225115,0.466188,1.067224,-0.272639,1.190817,0.415499,1.092358,-0.247664,1.161265,0.366782,1.117573,-0.222260,1.133935,0.319377,1.145730,-0.196933,1.111750,0.275293,1.170822,-0.170577,1.091981,0.233306,1.194559,-0.143878,1.075810,0.193950,1.214819,-0.116347,1.062438,0.156724,1.229830,-0.088233,1.048092,0.118984,1.238185,-0.059408,1.031325,0.079385,1.243527,-0.030703,1.014698,0.039893,1.249724,-0.001520,0.999819,0.000760,0.000164,-0.000489,5.157359,2.976300,0.000505,-0.001502,9.891415,2.976286,0.002016,-0.006000,9.857730,2.976197,0.004543,-0.013519,9.870651,2.975832,0.008064,-0.023985,9.855780,2.976170,0.012611,-0.037471,9.850209,2.975941,0.018162,-0.053866,9.827134,2.974968,0.024820,-0.073390,9.849955,2.975010,0.032545,-0.095758,9.842021,2.974073,0.041418,-0.120834,9.829989,2.972700,0.051511,-0.148861,9.817421,2.970736,0.062920,-0.179456,9.797347,2.968033,0.075744,-0.212674,9.771533,2.964371,0.090131,-0.248193,9.735924,2.959437,0.106187,-0.285748,9.687707,2.952881,0.124035,-0.325017,9.622684,2.944273,0.143733,-0.365463,9.531452,2.933093,0.165262,-0.406157,9.401732,2.918484,0.188622,-0.446833,9.232451,2.899529,0.213693,-0.486209,9.013432,2.875137,0.239987,-0.522925,8.725671,2.844166,0.267796,-0.557452,8.400028,2.805649,0.296547,-0.588266,8.023041,2.758720,0.325838,-0.614837,7.606773,2.702676,0.355479,-0.636760,7.160680,2.638483,0.386984,-0.657230,6.736765,2.566849,0.418853,-0.673592,6.313742,2.488091,0.450302,-0.684966,5.884479,2.402458,0.481149,-0.691591,5.455771,2.311816,0.512177,-0.695337,5.055698,2.217330,0.543437,-0.696370,4.681506,2.121285,0.574309,-0.694186,4.334716,2.024160,0.604787,-0.689158,4.008524,1.927738,0.633483,-0.680580,3.703505,1.830456,0.660766,-0.669088,3.418386,1.734934,0.688471,-0.656673,3.168101,1.642316,0.715729,-0.642820,2.941735,1.550744,0.740435,-0.626155,2.730570,1.463345,0.764114,-0.608299,2.537561,1.378151,0.787028,-0.589519,2.364323,1.297630,0.807985,-0.569257,2.207970,1.217830,0.830663,-0.550055,2.076646,1.142746,0.850416,-0.528812,1.948085,1.070757,0.869609,-0.507478,1.834684,1.001282,0.888324,-0.486131,1.734879,0.934987,0.907482,-0.464910,1.645974,0.871203,0.924829,-0.442742,1.563550,0.809260,0.942958,-0.420777,1.491264,0.750037,0.961999,-0.398842,1.428069,0.691715,0.981043,-0.375967,1.369668,0.635669,1.002371,-0.351469,1.318588,0.578689,1.025343,-0.326601,1.273628,0.524424,1.048511,-0.301395,1.234572,0.471403,1.072242,-0.275835,1.198354,0.419950,1.096758,-0.250200,1.166392,0.370733,1.122781,-0.224474,1.138991,0.322864,1.150871,-0.198592,1.114313,0.277723,1.177319,-0.171805,1.093534,0.234950,1.201765,-0.144291,1.077462,0.195376,1.222629,-0.115949,1.063288,0.157315,1.237334,-0.087140,1.048366,0.118843,1.246153,-0.058094,1.031224,0.079207,1.252570,-0.029194,1.014695,0.039376,1.259060,-0.000418,0.999881,0.000307,0.000159,-0.000515,5.393984,3.241865,0.000505,-0.001636,11.548038,3.241848,0.002016,-0.006534,11.506640,3.241718,0.004537,-0.014706,11.513460,3.241196,0.008068,-0.026134,11.510533,3.241693,0.012573,-0.040676,11.428978,3.241030,0.018212,-0.058794,11.510745,3.240924,0.024847,-0.079926,11.497339,3.240201,0.032603,-0.104160,11.484607,3.238994,0.041543,-0.131552,11.470801,3.237182,0.051738,-0.162012,11.453219,3.234635,0.063313,-0.195260,11.427244,3.231153,0.076381,-0.231205,11.388534,3.226361,0.091096,-0.269678,11.340406,3.219943,0.107600,-0.310170,11.270127,3.211448,0.126017,-0.352435,11.178583,3.200168,0.146411,-0.395551,11.046559,3.185328,0.168663,-0.438627,10.858624,3.165972,0.192730,-0.480660,10.606379,3.140735,0.218497,-0.520987,10.288093,3.108388,0.245752,-0.558483,9.907480,3.067586,0.273993,-0.592090,9.453246,3.016931,0.303495,-0.622416,8.966138,2.956444,0.333717,-0.648303,8.443776,2.885116,0.363928,-0.668640,7.894122,2.805963,0.396240,-0.687748,7.385728,2.718338,0.427161,-0.699903,6.838511,2.622346,0.460175,-0.711210,6.356371,2.522476,0.492593,-0.717734,5.878312,2.417984,0.524449,-0.719956,5.423285,2.310941,0.556010,-0.719127,4.997909,2.201885,0.587032,-0.715077,4.600426,2.093330,0.617030,-0.707574,4.235885,1.986585,0.644684,-0.695781,3.881712,1.881279,0.674483,-0.685313,3.590960,1.777918,0.700290,-0.669619,3.303138,1.678004,0.727892,-0.654728,3.057771,1.581162,0.751694,-0.635727,2.826642,1.487769,0.776271,-0.617343,2.622178,1.399628,0.799502,-0.597683,2.441265,1.313195,0.821768,-0.577090,2.276954,1.232316,0.841960,-0.555165,2.125744,1.153914,0.861582,-0.532983,1.991236,1.079598,0.881460,-0.510933,1.874027,1.008883,0.899952,-0.488321,1.766812,0.940802,0.918954,-0.466405,1.673436,0.875653,0.936130,-0.443623,1.586986,0.813130,0.954799,-0.421532,1.513558,0.752241,0.972435,-0.398897,1.445787,0.694711,0.990147,-0.376302,1.384382,0.638770,1.009189,-0.353623,1.331934,0.583826,1.029687,-0.330635,1.284478,0.530476,1.052604,-0.305698,1.243632,0.477187,1.076524,-0.279917,1.204997,0.425349,1.101701,-0.253951,1.171750,0.375165,1.127264,-0.227541,1.142519,0.326869,1.156397,-0.201265,1.116817,0.280912,1.183020,-0.173943,1.095289,0.237447,1.208448,-0.145860,1.078296,0.196694,1.230417,-0.116901,1.064416,0.158409,1.248617,-0.087507,1.050504,0.119483,1.257310,-0.057353,1.032796,0.079092,1.263076,-0.027785,1.015128,0.038883,1.269870,0.001331,0.999935,-0.000557,0.000154,-0.000549,5.705205,3.554136,0.000506,-0.001797,13.703335,3.554133,0.002014,-0.007156,13.614074,3.553937,0.004544,-0.016145,13.657344,3.553096,0.008070,-0.028652,13.627997,3.553894,0.012584,-0.044617,13.606235,3.554000,0.018180,-0.064288,13.581339,3.549637,0.024887,-0.087627,13.608851,3.552006,0.032690,-0.114134,13.599099,3.550341,0.041705,-0.144154,13.579829,3.547982,0.052035,-0.177400,13.552845,3.544641,0.063810,-0.213813,13.515619,3.539941,0.077171,-0.252978,13.460460,3.533696,0.092329,-0.294852,13.393559,3.524977,0.109390,-0.338688,13.292376,3.513655,0.128455,-0.384018,13.147332,3.498484,0.149661,-0.429960,12.945774,3.478323,0.172694,-0.475024,12.658979,3.451862,0.197650,-0.518614,12.289564,3.417602,0.224156,-0.559298,11.828307,3.372913,0.252008,-0.596110,11.285162,3.317454,0.281165,-0.629292,10.684922,3.251171,0.311434,-0.658379,10.052939,3.172222,0.342741,-0.683455,9.405296,3.082825,0.373543,-0.701674,8.716078,2.983976,0.407008,-0.719664,8.108425,2.876244,0.438623,-0.729882,7.461252,2.763279,0.471872,-0.738696,6.880182,2.645590,0.504700,-0.743136,6.324308,2.524680,0.537118,-0.743676,5.808302,2.402723,0.569412,-0.741181,5.332306,2.281437,0.598202,-0.732348,4.857402,2.161401,0.629640,-0.724832,4.465554,2.043872,0.659239,-0.713435,4.093661,1.930129,0.686547,-0.698539,3.752593,1.817654,0.715529,-0.684471,3.457593,1.712567,0.739456,-0.664983,3.171220,1.610687,0.764892,-0.646322,2.929674,1.512031,0.789301,-0.626393,2.710719,1.419033,0.809881,-0.603498,2.506139,1.330115,0.833385,-0.582934,2.336089,1.245859,0.854254,-0.560419,2.178470,1.165042,0.873964,-0.537294,2.040087,1.086633,0.893433,-0.514264,1.911969,1.015028,0.911756,-0.490657,1.799840,0.944938,0.930894,-0.467601,1.703188,0.878743,0.948078,-0.444043,1.612092,0.815356,0.966162,-0.421155,1.534444,0.753883,0.984166,-0.398238,1.462397,0.695534,1.002184,-0.375278,1.400793,0.638806,1.019669,-0.352159,1.344172,0.584549,1.039571,-0.329651,1.295227,0.531660,1.059989,-0.306804,1.251281,0.480529,1.081116,-0.283345,1.211504,0.430071,1.105742,-0.258568,1.176400,0.380277,1.133080,-0.232146,1.144519,0.331076,1.161888,-0.205244,1.118059,0.284040,1.192408,-0.177932,1.097561,0.239958,1.221043,-0.149532,1.082021,0.198751,1.244141,-0.120046,1.067634,0.160114,1.259465,-0.089542,1.051626,0.121101,1.268124,-0.058593,1.033296,0.079898,1.274330,-0.028011,1.015382,0.039038,1.281590,0.002330,1.000087,-0.001259,0.000149,-0.000587,6.059834,3.927143,0.000507,-0.001992,16.560400,3.927149,0.002014,-0.007910,16.406326,3.926821,0.004549,-0.017856,16.545532,3.927027,0.008064,-0.031632,16.375853,3.925487,0.012450,-0.048749,15.928564,3.928272,0.018030,-0.070371,16.072989,3.917862,0.024964,-0.096897,16.458925,3.924489,0.032807,-0.126073,16.377851,3.921896,0.041917,-0.159205,16.351561,3.918860,0.052416,-0.195762,16.307037,3.914339,0.064464,-0.235784,16.255514,3.907954,0.078225,-0.278812,16.176226,3.899254,0.093900,-0.324457,16.066530,3.887455,0.111657,-0.372174,15.913818,3.871777,0.131478,-0.420530,15.669197,3.850776,0.153574,-0.469330,15.355453,3.822348,0.177505,-0.516029,14.908978,3.785168,0.203383,-0.560585,14.352687,3.736602,0.230569,-0.600607,13.666022,3.675046,0.259188,-0.636296,12.900244,3.599811,0.289272,-0.668312,12.111226,3.510550,0.320490,-0.695986,11.292102,3.408535,0.353031,-0.719848,10.493485,3.295667,0.385228,-0.737073,9.661955,3.171998,0.419219,-0.752419,8.909942,3.042428,0.452096,-0.761179,8.155107,2.907108,0.484909,-0.766166,7.450609,2.769858,0.518306,-0.768596,6.811866,2.631935,0.550067,-0.765683,6.205275,2.492870,0.582562,-0.761197,5.663215,2.358645,0.614450,-0.753834,5.165358,2.227377,0.644563,-0.742860,4.712554,2.097547,0.673658,-0.729294,4.306101,1.974920,0.702857,-0.714839,3.943352,1.857613,0.729350,-0.696774,3.609432,1.743601,0.754958,-0.677394,3.308389,1.636607,0.779575,-0.657018,3.043803,1.533841,0.800491,-0.633342,2.793592,1.437092,0.825030,-0.612471,2.590307,1.344272,0.847535,-0.589882,2.406477,1.256436,0.865979,-0.564850,2.231999,1.173938,0.886254,-0.541357,2.083556,1.094722,0.905566,-0.517353,1.950928,1.021107,0.924607,-0.493320,1.835979,0.948941,0.943365,-0.469366,1.731417,0.881060,0.960405,-0.444745,1.635838,0.816479,0.977893,-0.420493,1.552981,0.754604,0.996573,-0.397150,1.481595,0.694917,1.014000,-0.373483,1.414070,0.638445,1.031807,-0.349985,1.356031,0.584035,1.051877,-0.327062,1.305041,0.530010,1.071701,-0.304134,1.258836,0.479439,1.093109,-0.280962,1.217297,0.429763,1.116681,-0.258121,1.182063,0.381050,1.143886,-0.235365,1.150039,0.333395,1.175163,-0.211621,1.125074,0.287477,1.203675,-0.184061,1.102339,0.243301,1.230477,-0.154815,1.083927,0.201826,1.253134,-0.124513,1.067989,0.162271,1.270092,-0.093383,1.052032,0.122855,1.279576,-0.061770,1.033685,0.081639,1.286472,-0.030317,1.015583,0.040411,1.294476,0.000964,1.000206,-0.000454,0.000144,-0.000630,6.467978,4.381146,0.000504,-0.002208,20.193617,4.381151,0.002017,-0.008834,20.206446,4.380687,0.004536,-0.019864,20.183254,4.380550,0.008174,-0.035759,20.564249,4.381247,0.012608,-0.055034,20.111612,4.382390,0.018198,-0.079119,20.106096,4.379815,0.025057,-0.108067,20.215635,4.376874,0.032962,-0.140630,20.153549,4.374143,0.042199,-0.177350,20.084061,4.369558,0.052928,-0.218094,20.026609,4.363287,0.065327,-0.262407,19.940054,4.354386,0.079568,-0.309833,19.806814,4.342127,0.095961,-0.360074,19.641878,4.325533,0.114516,-0.411747,19.370914,4.302950,0.135349,-0.463726,18.983900,4.271991,0.158293,-0.514211,18.433926,4.230856,0.183348,-0.562511,17.733471,4.176250,0.209959,-0.606310,16.864214,4.105895,0.238736,-0.646958,15.935207,4.020104,0.268543,-0.681574,14.890014,3.916094,0.299996,-0.712458,13.846786,3.798239,0.331930,-0.737130,12.758296,3.664191,0.365222,-0.758156,11.732940,3.521867,0.399061,-0.774364,10.741743,3.369831,0.433480,-0.786412,9.812527,3.212079,0.467002,-0.792373,8.915130,3.053715,0.500754,-0.795410,8.094276,2.894526,0.534023,-0.794617,7.342067,2.735959,0.566988,-0.790689,6.664186,2.581160,0.599960,-0.784433,6.052983,2.432318,0.630599,-0.773378,5.486277,2.287630,0.660807,-0.760334,4.982516,2.150183,0.690103,-0.745430,4.531104,2.017266,0.717315,-0.727511,4.120734,1.891699,0.743819,-0.708376,3.759599,1.772680,0.770147,-0.688632,3.441912,1.660620,0.793510,-0.665931,3.152600,1.553166,0.816535,-0.643045,2.898883,1.452080,0.839163,-0.619917,2.674488,1.355544,0.859066,-0.594923,2.469262,1.267232,0.879489,-0.570343,2.292209,1.181702,0.898525,-0.544975,2.131086,1.102089,0.918359,-0.520585,1.994526,1.024744,0.937502,-0.496044,1.873079,0.951712,0.955573,-0.471010,1.761232,0.883374,0.972957,-0.445712,1.661604,0.818008,0.991248,-0.421201,1.577169,0.754446,1.008997,-0.396444,1.499653,0.694518,1.028127,-0.372362,1.432030,0.637259,1.045710,-0.347895,1.369870,0.581515,1.065977,-0.324409,1.317341,0.527713,1.087469,-0.301181,1.270447,0.476281,1.109943,-0.277866,1.228398,0.426403,1.134440,-0.254849,1.190986,0.377822,1.160986,-0.231754,1.157681,0.330740,1.188458,-0.207973,1.128665,0.286014,1.214405,-0.183424,1.103711,0.243600,1.239504,-0.157972,1.084253,0.203686,1.262961,-0.130607,1.068258,0.165214,1.280340,-0.099652,1.051919,0.126067,1.292129,-0.067363,1.034016,0.084791,1.299876,-0.035026,1.015775,0.042786,1.308328,-0.002944,0.999963,0.001385,0.000138,-0.000681,6.943771,4.946556,0.000503,-0.002486,25.346689,4.946532,0.002016,-0.009973,25.494320,4.946311,0.004539,-0.022440,25.484949,4.945823,0.008069,-0.039836,25.420902,4.945311,0.012628,-0.062172,25.394403,4.945041,0.018294,-0.089609,25.440279,4.943295,0.025079,-0.121584,25.399988,4.939368,0.033142,-0.158595,25.356537,4.936200,0.042596,-0.199971,25.295067,4.929842,0.053628,-0.245624,25.196465,4.920586,0.066496,-0.295240,25.055311,4.907700,0.081434,-0.348006,24.846170,4.889647,0.098640,-0.403167,24.527803,4.864680,0.118231,-0.459106,24.051735,4.830574,0.140139,-0.513907,23.352467,4.783530,0.164198,-0.565953,22.418245,4.720530,0.190502,-0.614858,21.324049,4.638075,0.218530,-0.658304,20.038671,4.535464,0.248094,-0.696133,18.639786,4.411646,0.279435,-0.729388,17.234526,4.268872,0.312002,-0.757534,15.830426,4.109603,0.346173,-0.781866,14.495901,3.938782,0.379435,-0.797579,13.136444,3.756138,0.414945,-0.812334,11.946491,3.571258,0.449991,-0.821119,10.811908,3.384217,0.484636,-0.825066,9.763482,3.198076,0.518675,-0.824728,8.796811,3.015808,0.552559,-0.821710,7.932528,2.836886,0.587272,-0.817478,7.185156,2.664995,0.616960,-0.804441,6.445302,2.502223,0.648054,-0.792063,5.818812,2.345851,0.678575,-0.777793,5.264731,2.197150,0.707287,-0.760476,4.766033,2.056042,0.735851,-0.742541,4.335871,1.922805,0.760594,-0.720503,3.928021,1.798585,0.784534,-0.697719,3.579153,1.680605,0.811029,-0.677036,3.285307,1.568942,0.831809,-0.651479,3.001423,1.465496,0.854364,-0.627376,2.760672,1.367849,0.872639,-0.600496,2.540697,1.275644,0.894296,-0.576297,2.355273,1.188638,0.913123,-0.550377,2.188563,1.105652,0.932025,-0.524640,2.040739,1.028614,0.949876,-0.498402,1.910315,0.954421,0.968933,-0.473220,1.795750,0.884061,0.985366,-0.447086,1.690336,0.817765,1.004940,-0.422394,1.599626,0.753295,1.022217,-0.396726,1.519055,0.693380,1.041490,-0.371854,1.448745,0.635747,1.059920,-0.346769,1.384292,0.579508,1.080408,-0.322343,1.328798,0.525045,1.101632,-0.297979,1.279898,0.473773,1.124812,-0.274059,1.234005,0.422949,1.148503,-0.249954,1.195373,0.374609,1.174554,-0.225988,1.160362,0.327350,1.202931,-0.201932,1.131307,0.283494,1.229335,-0.176886,1.105885,0.241092,1.254254,-0.151225,1.085802,0.201514,1.275743,-0.124282,1.068524,0.162866,1.292929,-0.097122,1.051493,0.124991,1.305805,-0.068939,1.033890,0.085521,1.314991,-0.040082,1.015927,0.045247,1.324033,-0.009923,0.999893,0.004738,0.000131,-0.000745,7.562414,5.671075,0.000473,-0.002681,27.216688,5.670949,0.002021,-0.011462,32.962402,5.670177,0.004540,-0.025728,33.183949,5.670197,0.008087,-0.045746,33.185688,5.667313,0.012673,-0.071427,33.170441,5.668396,0.018358,-0.102673,33.145138,5.665252,0.025299,-0.139780,33.303326,5.653404,0.033469,-0.181718,33.107243,5.652829,0.043139,-0.228698,32.859524,5.645676,0.054622,-0.280648,32.694893,5.631547,0.068115,-0.336524,32.422569,5.611561,0.083957,-0.395671,32.035511,5.583449,0.102259,-0.456164,31.415047,5.543651,0.123021,-0.515765,30.470440,5.488278,0.146127,-0.572309,29.186451,5.413118,0.171749,-0.625710,27.653852,5.312369,0.199549,-0.673853,25.902435,5.185774,0.229188,-0.715905,23.978609,5.030582,0.260421,-0.751533,21.999035,4.853484,0.293421,-0.782309,20.087366,4.656137,0.327077,-0.806332,18.186535,4.443975,0.361892,-0.825818,16.418409,4.223844,0.397146,-0.840019,14.774344,3.998959,0.434169,-0.852434,13.321097,3.775443,0.469288,-0.856632,11.929448,3.552818,0.504319,-0.857130,10.675201,3.338825,0.540067,-0.855903,9.591900,3.130547,0.575404,-0.851565,8.607655,2.932930,0.606782,-0.839818,7.690560,2.743876,0.638660,-0.827508,6.900781,2.565115,0.670577,-0.814154,6.216821,2.395215,0.696718,-0.793162,5.551886,2.238233,0.725990,-0.775291,5.015406,2.090264,0.754140,-0.755758,4.546843,1.950834,0.775992,-0.729824,4.094254,1.820582,0.802990,-0.708909,3.732984,1.699191,0.828291,-0.686483,3.413194,1.583805,0.847406,-0.659162,3.103861,1.478093,0.864951,-0.631051,2.832976,1.378496,0.887154,-0.606590,2.616645,1.282127,0.906337,-0.580124,2.413988,1.194643,0.927184,-0.554835,2.244380,1.110354,0.943810,-0.527583,2.081964,1.031996,0.963630,-0.502243,1.948979,0.956718,0.979691,-0.475006,1.822701,0.886957,0.997690,-0.448815,1.715714,0.819006,1.016460,-0.423044,1.621868,0.754892,1.035485,-0.397637,1.539537,0.693707,1.053165,-0.371775,1.462285,0.634867,1.072394,-0.346372,1.396193,0.578574,1.093397,-0.321291,1.338344,0.524341,1.115194,-0.296102,1.287594,0.472059,1.137943,-0.271023,1.240495,0.421674,1.164163,-0.246367,1.201224,0.371963,1.191457,-0.221414,1.164472,0.325040,1.220253,-0.196228,1.134325,0.280343,1.245456,-0.169991,1.108214,0.238098,1.270647,-0.143314,1.087277,0.197886,1.292124,-0.115881,1.069397,0.159560,1.309091,-0.087816,1.051426,0.120547,1.321130,-0.059301,1.032904,0.080834,1.332484,-0.030912,1.015767,0.040933,1.342834,-0.002172,0.999591,0.001185,0.000125,-0.000830,8.392562,6.634228,0.000443,-0.002936,29.687805,6.634032,0.002016,-0.013374,45.025234,6.633008,0.004540,-0.030089,45.020294,6.633056,0.008092,-0.053499,45.066029,6.626466,0.012710,-0.083610,44.810101,6.630330,0.018485,-0.120260,45.216747,6.614516,0.025134,-0.161031,44.674168,6.600349,0.033897,-0.212161,44.819195,6.610186,0.043978,-0.266661,44.450245,6.593605,0.056094,-0.326582,44.134544,6.570142,0.070528,-0.390342,43.591648,6.536712,0.087498,-0.456162,42.708160,6.488329,0.107138,-0.521609,41.365093,6.420198,0.129461,-0.584225,39.525822,6.323702,0.154245,-0.641931,37.186111,6.193606,0.181228,-0.692829,34.478470,6.026897,0.210711,-0.738440,31.680904,5.825769,0.242181,-0.777397,28.828054,5.595428,0.275337,-0.809980,26.042755,5.342321,0.309698,-0.835990,23.376804,5.073076,0.345702,-0.858077,20.965754,4.794572,0.382135,-0.874122,18.710079,4.516676,0.419871,-0.887133,16.713011,4.241767,0.455609,-0.891199,14.819674,3.972124,0.492617,-0.894082,13.187921,3.717271,0.528186,-0.891270,11.708584,3.471719,0.563462,-0.885719,10.422834,3.237760,0.596013,-0.874241,9.237741,3.019060,0.629455,-0.862814,8.248549,2.813572,0.661110,-0.848126,7.358398,2.621046,0.690314,-0.829798,6.569392,2.441627,0.720589,-0.812314,5.905934,2.274629,0.745631,-0.788704,5.276800,2.119423,0.771488,-0.766133,4.752773,1.974380,0.798704,-0.744726,4.306095,1.839482,0.820172,-0.718062,3.889792,1.713244,0.844368,-0.693972,3.545456,1.594809,0.863128,-0.665748,3.212762,1.487512,0.880094,-0.637003,2.926572,1.386724,0.904252,-0.613728,2.704260,1.288131,0.920506,-0.585217,2.483164,1.199845,0.940919,-0.559603,2.300348,1.114958,0.957044,-0.531597,2.130516,1.034754,0.972648,-0.503583,1.979313,0.960912,0.994318,-0.478813,1.859664,0.889786,1.008754,-0.450943,1.742705,0.820833,1.028667,-0.425516,1.645220,0.756332,1.046145,-0.398977,1.557184,0.693921,1.067212,-0.373657,1.480814,0.635955,1.084111,-0.346657,1.408762,0.578832,1.106749,-0.321392,1.350468,0.523561,1.128440,-0.295773,1.294865,0.471146,1.151073,-0.270028,1.246118,0.420298,1.178601,-0.244816,1.204226,0.370575,1.206845,-0.219027,1.166896,0.323716,1.235963,-0.192622,1.135756,0.278058,1.263030,-0.165331,1.109240,0.235743,1.288937,-0.137489,1.088379,0.195390,1.310681,-0.108685,1.068987,0.156439,1.334352,-0.079710,1.054273,0.117096,1.344847,-0.049947,1.034598,0.076554,1.354943,-0.020272,1.016079,0.035585,1.365515,0.009170,0.999969,-0.004771,0.000117,-0.000935,9.424866,7.979243,0.000410,-0.003275,33.013195,7.979422,0.002009,-0.016024,64.370331,7.977156,0.004541,-0.036176,64.655952,7.976128,0.008109,-0.064384,64.864494,7.964988,0.012694,-0.099984,64.487198,7.971348,0.018554,-0.143991,64.637970,7.923116,0.025303,-0.192040,61.930538,7.953975,0.035297,-0.259442,66.274422,7.921861,0.045226,-0.318370,63.334690,7.909609,0.058370,-0.388821,62.686401,7.864696,0.074083,-0.461667,61.332054,7.801843,0.092537,-0.533744,59.125607,7.708949,0.113781,-0.601905,55.997845,7.575799,0.137786,-0.664409,52.177567,7.393524,0.164770,-0.721193,48.019485,7.161756,0.193894,-0.768842,43.460278,6.882018,0.225586,-0.810332,39.086590,6.564607,0.259311,-0.845096,34.896049,6.221983,0.294517,-0.872849,30.952213,5.865831,0.331163,-0.895159,27.375792,5.507064,0.368964,-0.912860,24.213310,5.149763,0.407255,-0.925338,21.364958,4.806172,0.444704,-0.930956,18.791691,4.472272,0.482041,-0.932576,16.521160,4.160864,0.519572,-0.931547,14.589918,3.865206,0.556236,-0.926554,12.887797,3.590445,0.590431,-0.915839,11.352402,3.332747,0.622723,-0.901266,10.002660,3.093264,0.657029,-0.888747,8.905210,2.873842,0.686164,-0.868666,7.876704,2.666740,0.719168,-0.853152,7.051816,2.479017,0.742294,-0.826169,6.226034,2.306498,0.770320,-0.804936,5.590831,2.141328,0.792337,-0.777772,4.984083,1.994663,0.819050,-0.755478,4.507655,1.853950,0.837684,-0.726072,4.049884,1.725590,0.861324,-0.701424,3.678201,1.606303,0.880741,-0.673615,3.337163,1.495452,0.903335,-0.648506,3.055720,1.391162,0.920311,-0.619640,2.792068,1.294734,0.935769,-0.590245,2.554566,1.204518,0.956592,-0.564944,2.366468,1.118630,0.972424,-0.536842,2.187863,1.038323,0.986269,-0.508020,2.023480,0.963803,1.006122,-0.482411,1.895137,0.890986,1.022504,-0.455110,1.775886,0.820936,1.037905,-0.427450,1.665951,0.758556,1.059281,-0.402198,1.577363,0.696126,1.076613,-0.375156,1.493391,0.636676,1.097828,-0.349577,1.421129,0.579947,1.116671,-0.322955,1.355205,0.525140,1.140514,-0.297406,1.299979,0.471460,1.166473,-0.271786,1.249847,0.420473,1.192591,-0.245461,1.204625,0.371118,1.223349,-0.219412,1.166686,0.322600,1.254833,-0.192660,1.134121,0.277572,1.285808,-0.165167,1.108617,0.234417,1.322015,-0.137236,1.093841,0.194640,1.342172,-0.106871,1.074616,0.155001,1.357238,-0.075759,1.053550,0.114648,1.367725,-0.044279,1.033851,0.073254,1.379461,-0.013001,1.015713,0.031895,1.391625,0.018075,1.000203,-0.009397,0.000109,-0.001093,10.986820,9.992467,0.000378,-0.003779,37.989063,9.992861,0.002028,-0.020252,101.850441,9.988345,0.004557,-0.045429,101.106750,9.983879,0.008115,-0.080453,100.646606,9.953411,0.012864,-0.125836,101.366592,9.943727,0.018734,-0.179350,100.786118,9.908408,0.026314,-0.243680,99.779343,9.821631,0.035500,-0.313552,98.608231,9.782450,0.047562,-0.394644,97.689568,9.845875,0.062065,-0.476697,95.177795,9.755218,0.079552,-0.557933,91.095581,9.615121,0.099905,-0.632818,85.110382,9.408299,0.123231,-0.699926,77.948921,9.120996,0.149980,-0.760671,70.491119,8.764173,0.179550,-0.812251,62.821407,8.341752,0.211839,-0.855909,55.512890,7.876337,0.246434,-0.892023,48.744549,7.386268,0.282317,-0.919200,42.462059,6.886009,0.319580,-0.940333,36.901031,6.400318,0.360135,-0.962176,32.353752,5.937503,0.397805,-0.969755,27.996445,5.489783,0.437077,-0.976494,24.359192,5.072855,0.474388,-0.975265,21.124300,4.684682,0.513695,-0.975335,18.476677,4.326597,0.551542,-0.970264,16.167391,3.999049,0.587525,-0.960365,14.143442,3.696317,0.621251,-0.945944,12.374341,3.414176,0.654738,-0.930709,10.877112,3.160455,0.685794,-0.911702,9.580887,2.921461,0.717135,-0.892948,8.481939,2.707478,0.740798,-0.865086,7.435941,2.510382,0.770920,-0.845137,6.650625,2.329648,0.792303,-0.815956,5.879976,2.163206,0.818363,-0.792225,5.274404,2.008042,0.837362,-0.762396,4.700960,1.867576,0.862266,-0.738465,4.254798,1.735819,0.880069,-0.708890,3.828697,1.614690,0.896021,-0.678588,3.451655,1.503477,0.920156,-0.654832,3.168722,1.395800,0.934948,-0.624740,2.879533,1.299955,0.949686,-0.595203,2.628258,1.208597,0.970989,-0.570041,2.433689,1.122310,0.985606,-0.541116,2.241461,1.042168,1.000819,-0.512835,2.075567,0.966543,1.012209,-0.483024,1.919932,0.895758,1.035320,-0.459125,1.807884,0.825668,1.052077,-0.432333,1.695689,0.760812,1.070459,-0.406131,1.595491,0.699897,1.088704,-0.379721,1.508512,0.640575,1.103817,-0.352104,1.428159,0.583765,1.131711,-0.328122,1.366565,0.528240,1.156448,-0.302568,1.306843,0.473988,1.181821,-0.276487,1.252861,0.422189,1.211347,-0.250540,1.205265,0.372005,1.243636,-0.224264,1.165943,0.324184,1.283038,-0.198289,1.137772,0.278419,1.316722,-0.170179,1.115057,0.235425,1.342715,-0.140095,1.092994,0.195084,1.363288,-0.108794,1.071875,0.155439,1.380656,-0.076774,1.052475,0.114636,1.394826,-0.044509,1.032525,0.072890,1.408830,-0.011968,1.015459,0.031101,1.422370,0.020555,0.999808,-0.011002,0.000100,-0.001334,13.377127,13.342275,0.000342,-0.004563,45.758434,13.342710,0.002026,-0.027004,179.672058,13.331846,0.004559,-0.060563,179.294235,13.314877,0.008232,-0.108154,181.242035,13.222856,0.013031,-0.167590,179.684509,13.153860,0.019526,-0.242041,181.004608,12.986094,0.026364,-0.309289,159.606293,13.247752,0.037670,-0.409755,179.468521,12.368877,0.051804,-0.512051,167.955582,12.981333,0.068214,-0.601994,156.278793,12.704532,0.088295,-0.686849,143.096878,12.316531,0.111478,-0.758670,127.423111,11.793048,0.138336,-0.821348,111.763031,11.157992,0.168447,-0.873616,96.887924,10.447472,0.201411,-0.916322,83.225327,9.696606,0.237443,-0.953090,71.403137,8.949244,0.274234,-0.977751,60.739277,8.225874,0.314566,-1.003135,52.115578,7.547433,0.353932,-1.016312,44.341869,6.910326,0.393858,-1.024848,37.827263,6.324401,0.433805,-1.028950,32.380932,5.790555,0.475812,-1.034084,27.955982,5.312826,0.513254,-1.026743,23.977417,4.866118,0.549965,-1.016740,20.628025,4.468437,0.590300,-1.012030,18.036856,4.105483,0.626420,-0.998919,15.669224,3.780593,0.658897,-0.979874,13.603898,3.482054,0.687252,-0.955238,11.788331,3.211213,0.718941,-0.935663,10.355552,2.962083,0.749877,-0.915206,9.131123,2.741382,0.772094,-0.884837,7.973935,2.536501,0.799495,-0.861214,7.086230,2.347282,0.820136,-0.830976,6.240769,2.179332,0.846715,-0.807408,5.604792,2.018005,0.865176,-0.776657,4.975034,1.877021,0.881100,-0.744657,4.442767,1.743528,0.907637,-0.722088,4.035177,1.621563,0.922239,-0.690432,3.633160,1.506158,0.936558,-0.659650,3.281798,1.403606,0.950047,-0.629105,2.974179,1.304276,0.961959,-0.598277,2.704483,1.213888,0.987410,-0.576085,2.510453,1.125569,0.999996,-0.546494,2.304016,1.045567,1.014127,-0.518186,2.127867,0.970718,1.036275,-0.494009,1.985804,0.897557,1.049695,-0.465659,1.845074,0.830584,1.064617,-0.438159,1.725130,0.766083,1.077131,-0.409813,1.613818,0.705101,1.101054,-0.385632,1.528694,0.644828,1.122361,-0.360045,1.447086,0.587878,1.147359,-0.335186,1.377588,0.532130,1.169881,-0.309040,1.313673,0.478843,1.200554,-0.284590,1.257256,0.426855,1.232047,-0.259332,1.208431,0.376125,1.275402,-0.235215,1.174692,0.326614,1.306595,-0.207508,1.141042,0.281524,1.334304,-0.178290,1.111778,0.238694,1.364678,-0.148530,1.090976,0.198549,1.387168,-0.117114,1.069308,0.158529,1.408657,-0.084977,1.050625,0.118042,1.426214,-0.052052,1.031444,0.076541,1.444257,-0.018653,1.014298,0.034061,1.460618,0.015206,0.999413,-0.008132,0.000100,-0.002003,20.052612,20.032721,0.000297,-0.005947,59.540512,20.033842,0.002022,-0.040439,404.848511,20.032743,0.004588,-0.090999,403.741241,19.910591,0.008769,-0.169802,441.471558,19.572552,0.013708,-0.253629,411.667816,19.145721,0.020331,-0.349396,371.322571,18.591049,0.030259,-0.468121,385.816498,18.331083,0.045190,-0.611444,391.924133,15.807686,0.058476,-0.676875,319.638641,16.947781,0.079894,-0.781421,278.804260,17.512903,0.103871,-0.855116,235.999786,16.290295,0.131756,-0.915747,197.168076,14.956566,0.163487,-0.966333,163.452347,13.608010,0.198693,-1.008386,135.632706,12.299661,0.236157,-1.039862,111.919281,11.088790,0.274579,-1.059988,92.136581,9.983883,0.317164,-1.084069,77.063034,9.008505,0.357624,-1.092124,63.963051,8.127298,0.399009,-1.097560,53.483341,7.347628,0.441182,-1.100981,45.052429,6.658191,0.481606,-1.097318,37.932640,6.047333,0.524253,-1.096570,32.395638,5.505878,0.564351,-1.088739,27.679380,5.018494,0.600843,-1.073396,23.611519,4.580770,0.635527,-1.055024,20.207081,4.194785,0.672045,-1.039775,17.469036,3.847436,0.698372,-1.009545,14.928226,3.532546,0.729336,-0.987168,12.953170,3.248834,0.761147,-0.966299,11.346271,2.994166,0.782270,-0.932841,9.813129,2.762244,0.811832,-0.910431,8.672224,2.549933,0.832053,-0.878369,7.578633,2.363132,0.849383,-0.844673,6.648379,2.189266,0.866020,-0.811703,5.850784,2.031716,0.893083,-0.789181,5.273372,1.884480,0.909212,-0.757541,4.700618,1.750298,0.923169,-0.725157,4.196640,1.627590,0.937112,-0.693769,3.764841,1.514906,0.961901,-0.670828,3.444598,1.406839,0.975245,-0.640240,3.120745,1.307873,0.989696,-0.611032,2.840732,1.216417,1.002057,-0.581144,2.591596,1.132553,1.014022,-0.551620,2.373820,1.051695,1.025307,-0.522268,2.177992,0.977500,1.052190,-0.500826,2.042511,0.904301,1.064408,-0.472355,1.891934,0.837557,1.077876,-0.444815,1.761054,0.773004,1.088939,-0.416531,1.638939,0.713958,1.118551,-0.395057,1.555724,0.652485,1.134469,-0.368289,1.465490,0.596330,1.162778,-0.345095,1.390977,0.539703,1.185298,-0.319527,1.321225,0.486250,1.208419,-0.293590,1.259318,0.434178,1.261013,-0.273471,1.219767,0.382032,1.297811,-0.248226,1.176422,0.334190,1.326591,-0.220354,1.139881,0.289075,1.357918,-0.191937,1.111418,0.246259,1.387590,-0.162282,1.086511,0.205129,1.415797,-0.131515,1.067072,0.165601,1.440194,-0.099555,1.047799,0.125462,1.465600,-0.066957,1.030406,0.084082,1.487714,-0.033496,1.013889,0.041981,1.509947,0.000663,0.998773,-0.000485,0.000100,-0.004009,40.102047,40.087105,0.000228,-0.009141,91.431366,40.074432,0.001522,-0.060544,605.651733,39.918827,0.004919,-0.188871,1712.982300,38.873421,0.009053,-0.320325,1583.453125,39.715633,0.015375,-0.471415,1486.033691,39.162876,0.029306,-0.735111,1751.701050,28.083200,0.043450,-0.859759,1392.475220,24.599945,0.079075,-1.220033,1629.972656,18.507019,0.090130,-1.091255,940.347351,17.961655,0.098008,-0.945965,425.901093,24.478010,0.138246,-1.084105,416.823944,20.003433,0.174489,-1.133148,302.730042,18.550846,0.207969,-1.138483,242.853577,15.923334,0.249132,-1.168197,191.649445,13.940813,0.291391,-1.187038,152.910309,12.263267,0.332856,-1.192793,121.905075,10.822873,0.377473,-1.202846,99.145561,9.618412,0.422601,-1.208871,81.343315,8.591735,0.465276,-1.204545,66.742569,7.692911,0.504710,-1.190839,54.787876,6.915612,0.544909,-1.178827,45.507313,6.242786,0.582125,-1.160590,37.819912,5.651690,0.620694,-1.145481,31.926588,5.123660,0.659127,-1.130178,27.147310,4.669475,0.684358,-1.093728,22.650702,4.258717,0.719453,-1.074591,19.454103,3.901225,0.751695,-1.051678,16.735672,3.576870,0.775082,-1.017716,14.281039,3.287471,0.796233,-0.982759,12.261332,3.023708,0.827404,-0.961227,10.767912,2.787740,0.848149,-0.928433,9.371350,2.570737,0.864891,-0.892838,8.142364,2.379204,0.880979,-0.858193,7.118954,2.204470,0.910434,-0.837281,6.389041,2.041554,0.925396,-0.803638,5.643217,1.893353,0.942463,-0.772925,5.031223,1.757331,0.955217,-0.739720,4.486978,1.633572,0.968570,-0.708048,4.014621,1.520414,0.981672,-0.677109,3.617768,1.412506,0.992829,-0.645712,3.258773,1.317079,1.021270,-0.625746,3.006640,1.222611,1.031247,-0.594628,2.733073,1.137911,1.043581,-0.565540,2.498495,1.058439,1.055930,-0.536962,2.289843,0.984428,1.066727,-0.508076,2.108603,0.912794,1.081225,-0.481297,1.951454,0.845536,1.088198,-0.451563,1.801891,0.782718,1.123316,-0.433247,1.704316,0.721664,1.133206,-0.404812,1.586153,0.662761,1.152889,-0.379901,1.490958,0.606866,1.188158,-0.359421,1.415730,0.550666,1.217064,-0.336049,1.344172,0.496748,1.257727,-0.314816,1.283196,0.443538,1.286647,-0.289530,1.225903,0.394018,1.308729,-0.262053,1.173928,0.346255,1.351453,-0.237704,1.139992,0.300393,1.380284,-0.209733,1.105997,0.256661,1.414621,-0.181613,1.082109,0.215429,1.453045,-0.152797,1.063853,0.177098,1.481066,-0.121803,1.043185,0.137203,1.514113,-0.090250,1.027072,0.096998,1.547317,-0.057603,1.012551,0.055328,1.577983,-0.023799,0.999267,0.013094,0.000108,-0.124970,1249.704346,1249.703491,0.000140,-0.119585,1195.855469,1195.854370,0.003995,-0.927433,9274.246094,232.443573,0.012013,-1.131580,11315.999023,98.211105,0.023892,-1.216018,12162.739258,67.214500,0.047506,-1.517865,15186.294922,42.410069,0.082523,-1.812564,18145.718750,24.421545,0.112452,-1.805072,11112.966797,18.450365,0.164460,-2.016784,8086.032715,14.043465,0.195870,-1.898199,4245.658203,13.178202,0.197797,-1.556158,1315.561768,30.760096,0.219540,-1.433455,802.380371,25.037956,0.268696,-1.483235,579.715515,20.975695,0.265968,-1.261051,386.583649,12.017023,0.325369,-1.343349,316.795959,12.612406,0.387968,-1.411606,232.491623,13.296940,0.435543,-1.411236,181.515228,11.646996,0.482729,-1.405722,143.425354,10.265131,0.531742,-1.402782,114.920082,9.114828,0.559383,-1.346165,88.589005,8.089214,0.607851,-1.342407,73.056610,7.249064,0.656928,-1.338238,60.826897,6.531094,0.681212,-1.285692,48.727219,5.868711,0.729238,-1.279951,41.256016,5.324553,0.751172,-1.230045,33.728260,4.816513,0.773107,-1.184288,27.913816,4.377203,0.815726,-1.171653,24.065962,3.999965,0.837886,-1.130636,20.254860,3.658493,0.857674,-1.089071,17.138168,3.347930,0.876120,-1.048303,14.572968,3.072666,0.893935,-1.009040,12.496377,2.825165,0.927998,-0.989064,11.040731,2.605520,0.928445,-0.935017,9.365102,2.401481,0.945279,-0.899993,8.177711,2.222282,0.959378,-0.863854,7.155303,2.059342,0.971761,-0.827684,6.284632,1.909314,0.987812,-0.795878,5.583837,1.771094,1.001958,-0.763540,4.962345,1.645968,1.014357,-0.730897,4.435898,1.527438,1.025946,-0.698675,3.973241,1.421337,1.036435,-0.666662,3.568025,1.323677,1.046807,-0.635466,3.218647,1.232678,1.052974,-0.602660,2.902273,1.147675,1.086089,-0.585364,2.694939,1.068352,1.094660,-0.554784,2.454491,0.993445,1.117131,-0.531500,2.270746,0.923758,1.114009,-0.496581,2.063934,0.858381,1.137328,-0.473914,1.917990,0.794980,1.158671,-0.450127,1.786523,0.735697,1.177878,-0.425306,1.662454,0.677498,1.207510,-0.403797,1.559058,0.621762,1.244496,-0.383812,1.466801,0.566190,1.240412,-0.351080,1.366853,0.514288,1.321257,-0.341200,1.309808,0.464621,1.336512,-0.312710,1.241822,0.413228,1.365047,-0.286935,1.186612,0.366092,1.418984,-0.265184,1.152120,0.321528,1.388864,-0.227750,1.089937,0.271827,1.464383,-0.207168,1.077271,0.232838,1.473125,-0.175770,1.041835,0.193289,1.542908,-0.150424,1.036794,0.156153,1.563005,-0.118748,1.013029,0.114866,1.637048,-0.089604,1.013493,0.076804,1.670777,-0.056398,0.999208,0.032691];
armory_data_ConstData.ltc_mag = [1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999995,0.999990,0.999971,0.999937,0.999853,0.999670,0.999138,0.996746,0.979578,0.979309,0.978836,0.977972,0.976223,0.972205,0.962466,0.953919,0.949829,0.942492,0.929870,0.921319,0.911112,0.896015,0.885105,0.869971,0.855017,0.838328,0.821241,0.802352,0.783873,0.763309,0.743058,0.721929,0.699755,0.677721,0.655456,0.632681,0.609629,0.586831,0.564287,0.541772,0.519428,0.497353,0.475624,0.454606,0.434099,0.414085,0.394605,0.375698,0.357386,0.339871,0.323085,0.306905,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999999,0.999998,0.999995,0.999990,0.999980,0.999959,0.999923,0.999842,0.999660,0.999119,0.996613,0.981824,0.979298,0.978826,0.977957,0.976184,0.972091,0.962188,0.953875,0.949746,0.942335,0.930166,0.921211,0.910927,0.896979,0.884940,0.869864,0.854835,0.838200,0.821049,0.802552,0.783659,0.763512,0.742927,0.721715,0.699938,0.677775,0.655246,0.632555,0.609805,0.586996,0.564225,0.541606,0.519346,0.497419,0.475863,0.454738,0.434099,0.414003,0.394547,0.375747,0.357564,0.340012,0.323099,0.306861,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999995,0.999991,0.999979,0.999959,0.999917,0.999839,0.999648,0.999074,0.996168,0.983770,0.979279,0.978800,0.977905,0.976058,0.971727,0.962120,0.953901,0.949485,0.941859,0.930911,0.920853,0.910394,0.897600,0.884427,0.870101,0.854522,0.838325,0.820754,0.802707,0.783223,0.763605,0.742872,0.721565,0.699935,0.677726,0.655242,0.632580,0.609766,0.586946,0.564275,0.541759,0.519467,0.497478,0.475886,0.454794,0.434233,0.414207,0.394751,0.375892,0.357683,0.340146,0.323287,0.307095,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999999,0.999998,0.999996,0.999992,0.999987,0.999975,0.999953,0.999913,0.999830,0.999630,0.998993,0.995279,0.985142,0.979252,0.978754,0.977821,0.975838,0.971088,0.962563,0.954785,0.949048,0.941052,0.931420,0.920812,0.909750,0.897867,0.883856,0.870091,0.854353,0.838166,0.820661,0.802465,0.783308,0.763346,0.742734,0.721608,0.699747,0.677626,0.655245,0.632547,0.609793,0.587044,0.564340,0.541779,0.519529,0.497633,0.476114,0.455030,0.434430,0.414406,0.394974,0.376154,0.357979,0.340443,0.323572,0.307379,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999998,0.999998,0.999996,0.999991,0.999984,0.999970,0.999946,0.999905,0.999815,0.999599,0.998856,0.993704,0.986135,0.979212,0.978690,0.977691,0.975504,0.970133,0.962951,0.955649,0.948405,0.940418,0.931660,0.920881,0.909376,0.897785,0.883844,0.869756,0.854326,0.837732,0.820617,0.802053,0.783195,0.763119,0.742610,0.721344,0.699709,0.677624,0.655114,0.632523,0.609812,0.587052,0.564417,0.541966,0.519751,0.497824,0.476309,0.455271,0.434735,0.414736,0.395317,0.376524,0.358364,0.340852,0.323988,0.307786,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999999,0.999997,0.999996,0.999994,0.999989,0.999980,0.999965,0.999940,0.999895,0.999796,0.999559,0.998638,0.992774,0.986878,0.980297,0.978602,0.977514,0.975026,0.969169,0.963214,0.956267,0.947689,0.940054,0.931637,0.920678,0.908990,0.897349,0.883905,0.869139,0.854177,0.837476,0.820295,0.801977,0.782798,0.762978,0.742418,0.721193,0.699560,0.677402,0.655108,0.632543,0.609804,0.587158,0.564557,0.542096,0.519908,0.498088,0.476632,0.455623,0.435104,0.415161,0.395783,0.377005,0.358843,0.341345,0.324529,0.308355,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999999,0.999998,0.999997,0.999992,0.999991,0.999985,0.999977,0.999959,0.999935,0.999878,0.999773,0.999505,0.998284,0.992353,0.987457,0.981665,0.978492,0.977277,0.974360,0.968716,0.963373,0.956629,0.947397,0.939657,0.931339,0.920588,0.908975,0.896712,0.883763,0.868890,0.853731,0.837333,0.819702,0.801738,0.782454,0.762712,0.742024,0.721037,0.699325,0.677359,0.655030,0.632439,0.609869,0.587221,0.564663,0.542328,0.520220,0.498400,0.476997,0.456053,0.435593,0.415658,0.396300,0.377577,0.359473,0.342004,0.325170,0.308997,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999998,0.999996,0.999993,0.999988,0.999981,0.999971,0.999951,0.999921,0.999863,0.999748,0.999433,0.997681,0.992120,0.987920,0.982864,0.978353,0.976961,0.973451,0.968396,0.963400,0.956680,0.947529,0.939151,0.930747,0.920511,0.908867,0.896142,0.883335,0.868764,0.853025,0.837015,0.819452,0.801249,0.782176,0.762345,0.741843,0.720721,0.699135,0.677194,0.654889,0.632487,0.609902,0.587328,0.564891,0.542567,0.520501,0.498793,0.477442,0.456528,0.436131,0.416273,0.396980,0.378276,0.360176,0.342738,0.325950,0.309803,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999999,0.999997,0.999995,0.999991,0.999985,0.999978,0.999963,0.999942,0.999907,0.999844,0.999715,0.999332,0.996612,0.991974,0.988297,0.983843,0.978349,0.976540,0.972351,0.968109,0.963280,0.956464,0.947779,0.938754,0.929952,0.920253,0.908530,0.895785,0.882679,0.868456,0.852669,0.836406,0.819138,0.800708,0.781803,0.761855,0.741534,0.720405,0.698959,0.676964,0.654827,0.632411,0.609922,0.587477,0.565051,0.542829,0.520889,0.499225,0.477951,0.457148,0.436792,0.416963,0.397723,0.379068,0.361025,0.343608,0.326842,0.310718,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999995,0.999994,0.999990,0.999983,0.999971,0.999954,0.999932,0.999892,0.999820,0.999675,0.999190,0.995492,0.991911,0.988610,0.984662,0.979221,0.975975,0.971671,0.967788,0.963002,0.955938,0.947965,0.938692,0.929309,0.919781,0.908268,0.895518,0.882022,0.867884,0.852346,0.835746,0.818607,0.800261,0.781335,0.761539,0.741063,0.720116,0.698617,0.676815,0.654700,0.632389,0.610037,0.587591,0.565328,0.543205,0.521293,0.499745,0.478562,0.457776,0.437515,0.417776,0.398586,0.379963,0.361984,0.344616,0.327857,0.311751,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999997,0.999996,0.999992,0.999986,0.999977,0.999965,0.999947,0.999916,0.999873,0.999794,0.999628,0.998966,0.994914,0.991849,0.988873,0.985288,0.980170,0.975207,0.971156,0.967476,0.962538,0.955601,0.947978,0.938542,0.928618,0.919056,0.907890,0.895098,0.881352,0.867263,0.851806,0.835168,0.818003,0.799785,0.780633,0.761080,0.740618,0.719795,0.698332,0.676629,0.654544,0.632411,0.610042,0.587805,0.565593,0.543549,0.521793,0.500309,0.479195,0.458546,0.438353,0.418669,0.399557,0.381012,0.363049,0.345710,0.329006,0.312948,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999997,0.999993,0.999990,0.999984,0.999972,0.999960,0.999939,0.999906,0.999853,0.999765,0.999567,0.998603,0.994519,0.991794,0.989089,0.985781,0.980956,0.974161,0.970688,0.967064,0.961890,0.955292,0.947848,0.938359,0.928226,0.918214,0.907361,0.894702,0.880834,0.866500,0.851209,0.834627,0.817211,0.799250,0.780131,0.760512,0.740218,0.719264,0.698063,0.676325,0.654450,0.632316,0.610170,0.587988,0.565891,0.544013,0.522305,0.500958,0.479971,0.459376,0.439271,0.419699,0.400620,0.382126,0.364246,0.346967,0.330273,0.314236,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999996,0.999994,0.999988,0.999979,0.999967,0.999952,0.999924,0.999888,0.999833,0.999733,0.999490,0.997946,0.994192,0.991812,0.989274,0.986224,0.981547,0.974000,0.970269,0.966545,0.961031,0.954921,0.947416,0.938226,0.928003,0.917390,0.906553,0.894191,0.880329,0.865540,0.850476,0.834058,0.816467,0.798509,0.779561,0.759828,0.739738,0.718878,0.697718,0.676138,0.654342,0.632317,0.610292,0.588207,0.566289,0.544443,0.522927,0.501674,0.480765,0.460314,0.440304,0.420782,0.401824,0.383410,0.365538,0.348312,0.331692,0.315688,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999996,0.999993,0.999985,0.999976,0.999961,0.999943,0.999913,0.999872,0.999807,0.999691,0.999390,0.996859,0.994003,0.991808,0.989423,0.986523,0.981783,0.974511,0.969791,0.965933,0.960377,0.954434,0.946803,0.938026,0.927620,0.916545,0.905639,0.893489,0.879820,0.864852,0.849513,0.833311,0.815878,0.797621,0.778938,0.759253,0.739142,0.718479,0.697274,0.675902,0.654135,0.632357,0.610364,0.588497,0.566631,0.545012,0.523579,0.502429,0.481680,0.461304,0.441425,0.422039,0.403135,0.384779,0.366976,0.349796,0.333231,0.317277,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999996,0.999991,0.999983,0.999974,0.999956,0.999932,0.999901,0.999852,0.999780,0.999646,0.999248,0.996193,0.993784,0.991782,0.989539,0.986694,0.981765,0.975135,0.969309,0.965128,0.959788,0.953831,0.946255,0.937664,0.927351,0.916044,0.904715,0.892528,0.879111,0.864256,0.848452,0.832434,0.815129,0.796806,0.778118,0.758668,0.738466,0.718024,0.696958,0.675642,0.654067,0.632325,0.610546,0.588786,0.567123,0.545617,0.524312,0.503348,0.482637,0.462418,0.442657,0.423338,0.404564,0.386277,0.368545,0.351448,0.334906,0.318961,1.000000,1.000000,1.000000,0.999999,0.999999,0.999998,0.999994,0.999989,0.999979,0.999968,0.999949,0.999921,0.999886,0.999833,0.999747,0.999596,0.999029,0.995749,0.993677,0.991724,0.989620,0.986723,0.981515,0.975767,0.969056,0.964124,0.959142,0.953036,0.945650,0.937022,0.926971,0.915515,0.903584,0.891603,0.878212,0.863472,0.847652,0.831398,0.814299,0.796105,0.777231,0.757977,0.737895,0.717415,0.696595,0.675317,0.653980,0.632343,0.610735,0.589076,0.567620,0.546251,0.525165,0.504255,0.483759,0.463666,0.443987,0.424783,0.406042,0.387891,0.370293,0.353221,0.336715,0.320806,1.000000,1.000000,1.000000,0.999999,0.999998,0.999998,0.999993,0.999987,0.999977,0.999964,0.999943,0.999911,0.999867,0.999807,0.999714,0.999531,0.998645,0.995399,0.993512,0.991717,0.989661,0.986652,0.981559,0.976183,0.969411,0.963317,0.958457,0.952091,0.944951,0.936307,0.926454,0.915043,0.902668,0.890462,0.877245,0.862672,0.846823,0.830201,0.813293,0.795306,0.776393,0.757199,0.737324,0.716808,0.696187,0.675094,0.653814,0.632453,0.610885,0.589483,0.568099,0.546975,0.525953,0.505268,0.484936,0.464988,0.445458,0.426314,0.407750,0.389670,0.372098,0.355105,0.338682,0.322825,1.000000,1.000000,1.000000,1.000000,0.999999,0.999996,0.999992,0.999983,0.999976,0.999959,0.999933,0.999898,0.999849,0.999780,0.999676,0.999454,0.997884,0.995166,0.993394,0.991723,0.989654,0.986389,0.981632,0.976607,0.969701,0.962555,0.957605,0.951232,0.944099,0.935556,0.925699,0.914492,0.902027,0.889116,0.876093,0.861649,0.845956,0.829238,0.812220,0.794420,0.775657,0.756265,0.736673,0.716372,0.695669,0.674886,0.653728,0.632568,0.611217,0.589929,0.568783,0.547752,0.526931,0.506425,0.486238,0.466425,0.446945,0.428026,0.409536,0.391551,0.374087,0.357155,0.340787,0.324974,1.000000,1.000000,1.000000,1.000000,0.999998,0.999996,0.999990,0.999984,0.999970,0.999952,0.999925,0.999886,0.999831,0.999757,0.999633,0.999356,0.997017,0.994868,0.993337,0.991710,0.989580,0.985848,0.981640,0.976711,0.969755,0.962166,0.956609,0.950365,0.943026,0.934693,0.924880,0.913729,0.901350,0.887966,0.874726,0.860474,0.844905,0.828269,0.810905,0.793364,0.774812,0.755478,0.735886,0.715847,0.695231,0.674537,0.653667,0.632527,0.611475,0.590363,0.569462,0.548571,0.527976,0.507634,0.487632,0.467901,0.448680,0.429833,0.411467,0.393568,0.376197,0.359374,0.343034,0.327273,1.000000,1.000000,1.000000,0.999999,0.999998,0.999993,0.999989,0.999980,0.999965,0.999945,0.999913,0.999869,0.999810,0.999723,0.999583,0.999213,0.996540,0.994740,0.993244,0.991671,0.989411,0.985533,0.981616,0.976847,0.969968,0.962315,0.955468,0.949420,0.942016,0.933617,0.923949,0.912899,0.900495,0.887022,0.873283,0.859153,0.843830,0.827325,0.809888,0.792172,0.773832,0.754686,0.735035,0.715297,0.694955,0.674242,0.653660,0.632752,0.611804,0.590993,0.570154,0.549539,0.529087,0.508974,0.489030,0.469599,0.450466,0.431761,0.413508,0.395761,0.378480,0.361679,0.345465,0.329752,1.000000,1.000000,1.000000,1.000000,0.999997,0.999994,0.999987,0.999978,0.999961,0.999936,0.999903,0.999855,0.999786,0.999689,0.999527,0.998988,0.996137,0.994527,0.993108,0.991599,0.989084,0.985308,0.981527,0.976677,0.970079,0.962535,0.954490,0.948271,0.940942,0.932422,0.922836,0.911896,0.899632,0.886118,0.871864,0.857719,0.842536,0.826163,0.808849,0.790860,0.772802,0.753860,0.734335,0.714582,0.694543,0.674071,0.653544,0.632922,0.612153,0.591573,0.570951,0.550520,0.530352,0.510311,0.490707,0.471359,0.452396,0.433837,0.415736,0.398052,0.380874,0.364232,0.348023,0.332368,1.000000,1.000000,1.000000,0.999999,0.999998,0.999994,0.999988,0.999976,0.999957,0.999928,0.999891,0.999837,0.999759,0.999650,0.999463,0.998551,0.995879,0.994366,0.992964,0.991479,0.988521,0.985101,0.981482,0.976168,0.970242,0.962585,0.953950,0.946973,0.939686,0.931248,0.921614,0.910765,0.898617,0.885183,0.870772,0.856138,0.841120,0.824962,0.807732,0.789813,0.771638,0.753008,0.733686,0.713927,0.694082,0.673967,0.653549,0.633135,0.612702,0.592200,0.571904,0.551679,0.531678,0.511898,0.492437,0.473239,0.454451,0.436067,0.418054,0.400542,0.383486,0.366848,0.350781,0.335182,1.000000,1.000000,1.000000,0.999999,0.999997,0.999993,0.999985,0.999972,0.999951,0.999919,0.999877,0.999817,0.999733,0.999608,0.999380,0.997685,0.995603,0.994264,0.992911,0.991287,0.987923,0.984871,0.981239,0.975933,0.970149,0.962511,0.953824,0.945699,0.938285,0.929907,0.920343,0.909537,0.897435,0.884056,0.869626,0.854490,0.839459,0.823511,0.806511,0.788752,0.770440,0.751995,0.732962,0.713424,0.693525,0.673798,0.653622,0.633301,0.613224,0.592938,0.572833,0.552904,0.533030,0.513556,0.494215,0.475279,0.456673,0.438411,0.420583,0.403178,0.386178,0.369728,0.353688,0.338147,1.000000,1.000000,1.000000,0.999999,0.999997,0.999991,0.999984,0.999967,0.999944,0.999912,0.999863,0.999796,0.999703,0.999563,0.999279,0.997104,0.995394,0.994111,0.992825,0.990979,0.987529,0.984661,0.980774,0.975758,0.969866,0.962465,0.953678,0.944489,0.936886,0.928356,0.918820,0.908073,0.896092,0.882833,0.868463,0.853212,0.837744,0.822048,0.805333,0.787643,0.769414,0.750830,0.732178,0.712972,0.693227,0.673569,0.653744,0.633739,0.613735,0.593822,0.573916,0.554158,0.534652,0.515248,0.496233,0.477436,0.459009,0.440929,0.423259,0.405951,0.389136,0.372690,0.356789,0.341329,1.000000,1.000000,1.000000,0.999999,0.999996,0.999991,0.999981,0.999966,0.999939,0.999903,0.999847,0.999771,0.999666,0.999510,0.999131,0.996690,0.995147,0.993882,0.992696,0.990474,0.987227,0.984334,0.980153,0.975438,0.969406,0.962238,0.953598,0.943868,0.935356,0.926721,0.917122,0.906430,0.894550,0.881354,0.867131,0.851954,0.835972,0.820331,0.803911,0.786452,0.768420,0.749821,0.731298,0.712393,0.692979,0.673418,0.653859,0.634232,0.614327,0.594732,0.575131,0.555584,0.536346,0.517175,0.498323,0.479744,0.461485,0.443645,0.426061,0.408969,0.392155,0.375921,0.360060,0.344677,1.000000,1.000000,1.000000,0.999999,0.999997,0.999991,0.999979,0.999960,0.999931,0.999891,0.999832,0.999748,0.999629,0.999449,0.998880,0.996305,0.995024,0.993812,0.992508,0.989721,0.986936,0.983936,0.979629,0.974979,0.968928,0.961970,0.953291,0.943458,0.933644,0.925007,0.915388,0.904755,0.892932,0.879831,0.865794,0.850672,0.834591,0.818398,0.802304,0.785151,0.767450,0.748987,0.730325,0.711758,0.692761,0.673417,0.653908,0.634686,0.615168,0.595707,0.576393,0.557198,0.538018,0.519253,0.500555,0.482220,0.464197,0.446414,0.429106,0.412035,0.395508,0.379284,0.363538,0.348220,1.000000,1.000000,1.000000,0.999999,0.999995,0.999989,0.999977,0.999955,0.999924,0.999879,0.999813,0.999722,0.999590,0.999381,0.998335,0.996088,0.994814,0.993709,0.992220,0.989209,0.986575,0.983383,0.979084,0.974272,0.968359,0.961275,0.953025,0.943098,0.932434,0.923101,0.913477,0.902861,0.891059,0.878072,0.864118,0.849188,0.833281,0.816808,0.800596,0.783745,0.766331,0.748123,0.729686,0.711078,0.692527,0.673491,0.654296,0.635113,0.616048,0.596847,0.577720,0.558879,0.540028,0.521371,0.502996,0.484858,0.466997,0.449477,0.432217,0.415426,0.398924,0.382890,0.367206,0.351955,1.000000,1.000000,1.000000,0.999998,0.999996,0.999988,0.999974,0.999953,0.999918,0.999865,0.999791,0.999690,0.999542,0.999293,0.997535,0.995790,0.994609,0.993557,0.991766,0.988767,0.986255,0.982544,0.978541,0.973528,0.967700,0.960596,0.952299,0.942684,0.931653,0.921211,0.911489,0.900818,0.889018,0.876245,0.862406,0.847517,0.831852,0.815367,0.798719,0.782224,0.765167,0.747304,0.729133,0.710485,0.692196,0.673589,0.654770,0.635717,0.616986,0.598119,0.579298,0.560560,0.542163,0.523669,0.505564,0.487642,0.469991,0.452658,0.435620,0.418937,0.402612,0.386633,0.371091,0.355949,1.000000,1.000000,0.999999,0.999998,0.999995,0.999986,0.999973,0.999948,0.999909,0.999852,0.999769,0.999656,0.999490,0.999186,0.997059,0.995624,0.994510,0.993327,0.991020,0.988379,0.985771,0.981971,0.978051,0.972892,0.967020,0.959965,0.951625,0.941902,0.930951,0.919370,0.909285,0.898562,0.886809,0.874251,0.860597,0.845808,0.830365,0.813972,0.797260,0.780597,0.763854,0.746401,0.728519,0.710203,0.691882,0.673687,0.655275,0.636621,0.617909,0.599473,0.581032,0.562560,0.544295,0.526228,0.508293,0.490652,0.473242,0.456004,0.439212,0.422663,0.406476,0.390647,0.375204,0.360129,1.000000,1.000000,1.000000,0.999999,0.999994,0.999984,0.999969,0.999940,0.999898,0.999837,0.999746,0.999617,0.999438,0.999016,0.996703,0.995302,0.994356,0.992993,0.990390,0.988072,0.985152,0.981447,0.977273,0.972234,0.966113,0.959033,0.950869,0.941217,0.930175,0.918279,0.906941,0.896201,0.884509,0.871920,0.858420,0.843906,0.828730,0.812524,0.795978,0.778979,0.762450,0.745459,0.727966,0.710046,0.691808,0.673739,0.655756,0.637574,0.619153,0.600887,0.582796,0.564748,0.546636,0.528904,0.511252,0.493791,0.476563,0.459695,0.442942,0.426632,0.410558,0.394895,0.379517,0.364560,1.000000,1.000000,1.000000,0.999998,0.999994,0.999984,0.999966,0.999934,0.999887,0.999819,0.999720,0.999578,0.999367,0.998696,0.996353,0.995201,0.994115,0.992665,0.989948,0.987633,0.984331,0.980827,0.976390,0.971327,0.965201,0.957977,0.949712,0.940128,0.929187,0.917237,0.904645,0.893711,0.882112,0.869516,0.856236,0.841929,0.826924,0.810991,0.794686,0.777761,0.760980,0.744384,0.727314,0.709877,0.691988,0.674098,0.656243,0.638603,0.620606,0.602574,0.584694,0.567018,0.549311,0.531673,0.514403,0.497148,0.480177,0.463439,0.446998,0.430743,0.414943,0.399304,0.384121,0.369251,1.000000,1.000000,1.000000,0.999997,0.999992,0.999981,0.999962,0.999927,0.999874,0.999798,0.999691,0.999533,0.999291,0.997909,0.996117,0.995029,0.993880,0.992142,0.989576,0.987185,0.983587,0.980055,0.975487,0.970172,0.963998,0.956738,0.948637,0.939083,0.928169,0.916144,0.903147,0.890916,0.879389,0.866895,0.853826,0.839729,0.824957,0.809472,0.793341,0.776743,0.759808,0.743277,0.726643,0.709685,0.692249,0.674639,0.657008,0.639576,0.622114,0.604471,0.586851,0.569340,0.552135,0.534806,0.517599,0.500765,0.484035,0.467440,0.451212,0.435240,0.419399,0.404083,0.388944,0.374182,1.000000,1.000000,1.000000,0.999998,0.999993,0.999979,0.999958,0.999919,0.999861,0.999774,0.999656,0.999482,0.999195,0.997307,0.995837,0.994722,0.993707,0.991391,0.989169,0.986461,0.982904,0.979062,0.974536,0.969035,0.962653,0.955486,0.947243,0.937747,0.926861,0.914936,0.901835,0.888472,0.876571,0.864223,0.851252,0.837374,0.822985,0.807788,0.791927,0.775702,0.758928,0.742347,0.725914,0.709495,0.692569,0.675363,0.658085,0.640639,0.623698,0.606505,0.589267,0.572008,0.554939,0.538132,0.521211,0.504487,0.488048,0.471807,0.455651,0.439858,0.424332,0.408983,0.394071,0.379402,1.000000,1.000000,1.000000,0.999997,0.999992,0.999978,0.999954,0.999913,0.999844,0.999753,0.999618,0.999424,0.999067,0.996875,0.995659,0.994603,0.993420,0.990874,0.988713,0.985585,0.982193,0.978145,0.973416,0.967801,0.961483,0.954069,0.945704,0.936138,0.925374,0.913395,0.900339,0.886675,0.873512,0.861326,0.848513,0.834956,0.820820,0.805943,0.790574,0.774677,0.758279,0.741807,0.725271,0.709231,0.692874,0.676189,0.659352,0.642296,0.625250,0.608700,0.591823,0.575012,0.558143,0.541491,0.525075,0.508558,0.492277,0.476270,0.460459,0.444740,0.429400,0.414309,0.399421,0.384907,1.000000,1.000000,1.000000,0.999997,0.999990,0.999977,0.999947,0.999902,0.999832,0.999730,0.999577,0.999359,0.998845,0.996554,0.995328,0.994442,0.992919,0.990393,0.988170,0.984855,0.981312,0.977149,0.972137,0.966207,0.959967,0.952454,0.943873,0.934434,0.923813,0.911942,0.898928,0.885120,0.871043,0.858248,0.845666,0.832346,0.818482,0.804029,0.788982,0.773571,0.757700,0.741484,0.725186,0.708915,0.693244,0.677028,0.660656,0.644079,0.627377,0.610804,0.594542,0.578112,0.561650,0.545163,0.528962,0.512926,0.496893,0.481007,0.465397,0.450042,0.434740,0.419831,0.405156,0.390692,1.000000,1.000000,0.999999,0.999997,0.999989,0.999973,0.999942,0.999891,0.999813,0.999698,0.999532,0.999285,0.998286,0.996295,0.995215,0.994182,0.992032,0.989855,0.987415,0.984047,0.980050,0.976017,0.970845,0.964767,0.958269,0.950600,0.942033,0.932501,0.921807,0.910017,0.897149,0.883414,0.869182,0.855055,0.842687,0.829548,0.816162,0.802072,0.787436,0.772533,0.757043,0.741263,0.725330,0.709262,0.693497,0.678038,0.662128,0.646068,0.629824,0.613437,0.597334,0.581401,0.565372,0.549288,0.533182,0.517405,0.501765,0.486143,0.470675,0.455465,0.440532,0.425630,0.411113,0.396887,1.000000,1.000000,0.999999,0.999996,0.999989,0.999970,0.999934,0.999879,0.999793,0.999665,0.999481,0.999192,0.997506,0.995926,0.995009,0.993736,0.991298,0.989326,0.986371,0.983199,0.979032,0.974596,0.969364,0.963198,0.956385,0.948509,0.939993,0.930421,0.919590,0.908140,0.895349,0.881699,0.867456,0.852784,0.839500,0.826629,0.813602,0.799983,0.785873,0.771340,0.756480,0.741190,0.725687,0.709997,0.694192,0.678975,0.663673,0.648135,0.632442,0.616477,0.600565,0.584772,0.569202,0.553595,0.537881,0.522193,0.506784,0.491554,0.476349,0.461278,0.446419,0.431913,0.417443,0.403271,1.000000,1.000000,0.999999,0.999995,0.999986,0.999966,0.999927,0.999867,0.999772,0.999629,0.999423,0.999075,0.997024,0.995773,0.994651,0.993353,0.990822,0.988569,0.985596,0.982182,0.977871,0.973140,0.967584,0.961408,0.954294,0.946398,0.937603,0.927937,0.917305,0.905833,0.893138,0.879770,0.865720,0.851023,0.836801,0.823784,0.810909,0.797886,0.784177,0.770243,0.755925,0.741144,0.726214,0.710971,0.695563,0.680212,0.665304,0.650297,0.635168,0.619796,0.604217,0.588692,0.573254,0.557998,0.542839,0.527470,0.512162,0.497115,0.482296,0.467477,0.452812,0.438310,0.424184,0.410163,1.000000,1.000000,0.999999,0.999996,0.999984,0.999962,0.999920,0.999852,0.999745,0.999586,0.999354,0.998894,0.996686,0.995485,0.994493,0.992573,0.990323,0.987772,0.984692,0.980887,0.976446,0.971625,0.965717,0.959421,0.951975,0.944086,0.935066,0.925403,0.914814,0.903208,0.890958,0.877817,0.863828,0.849289,0.834872,0.820889,0.808183,0.795660,0.782556,0.769066,0.755386,0.741229,0.726726,0.712170,0.697209,0.682170,0.667203,0.652689,0.637938,0.623262,0.608190,0.593002,0.577817,0.562737,0.547836,0.533036,0.518052,0.503135,0.488422,0.473986,0.459552,0.445282,0.431149,0.417407,1.000000,1.000000,0.999999,0.999994,0.999983,0.999957,0.999914,0.999835,0.999718,0.999538,0.999275,0.998454,0.996341,0.995246,0.994222,0.991844,0.989829,0.986688,0.983562,0.979638,0.974932,0.969827,0.963621,0.957146,0.949365,0.941398,0.932245,0.922556,0.911949,0.900627,0.888440,0.875544,0.862005,0.847810,0.833372,0.819134,0.805508,0.793339,0.780916,0.767837,0.754858,0.741307,0.727496,0.713386,0.699131,0.684542,0.669878,0.655261,0.641035,0.626685,0.612377,0.597625,0.582805,0.568030,0.553204,0.538684,0.524269,0.509662,0.495119,0.480735,0.466634,0.452593,0.438748,0.424915,1.000000,1.000000,0.999998,0.999994,0.999982,0.999956,0.999901,0.999818,0.999683,0.999487,0.999185,0.997584,0.996004,0.995050,0.993715,0.991212,0.989057,0.985879,0.982243,0.978206,0.973119,0.967919,0.961343,0.954603,0.946712,0.938378,0.929266,0.919443,0.908911,0.897725,0.885589,0.873254,0.859889,0.846123,0.832094,0.817898,0.803866,0.791061,0.779235,0.766885,0.754292,0.741565,0.728331,0.714861,0.701179,0.687166,0.673012,0.658716,0.644442,0.630472,0.616519,0.602514,0.588172,0.573689,0.559281,0.544768,0.530543,0.516485,0.502303,0.488100,0.474095,0.460245,0.446598,0.433169,1.000000,1.000000,0.999997,0.999993,0.999980,0.999947,0.999891,0.999794,0.999647,0.999425,0.999062,0.997049,0.995778,0.994652,0.992778,0.990482,0.988004,0.984893,0.980881,0.976605,0.971199,0.965610,0.958925,0.951746,0.943791,0.935200,0.926018,0.916028,0.905724,0.894528,0.882914,0.870740,0.857802,0.844552,0.830857,0.816921,0.803102,0.789625,0.777480,0.765891,0.753908,0.741795,0.729390,0.716440,0.703411,0.690068,0.676438,0.662586,0.648697,0.634732,0.620997,0.607451,0.593765,0.579748,0.565661,0.551594,0.537396,0.523433,0.509708,0.495972,0.482082,0.468427,0.454890,0.441623,1.000000,1.000000,0.999999,0.999991,0.999977,0.999940,0.999875,0.999769,0.999605,0.999352,0.998882,0.996665,0.995459,0.994380,0.992014,0.989912,0.986796,0.983537,0.979326,0.974792,0.969140,0.963160,0.956222,0.948807,0.940518,0.931755,0.922452,0.912319,0.902227,0.891142,0.879838,0.868047,0.855745,0.842718,0.829827,0.816398,0.802786,0.789396,0.776581,0.764901,0.753710,0.742102,0.730448,0.718337,0.705768,0.693172,0.680153,0.666882,0.653401,0.639837,0.626152,0.612676,0.599435,0.586109,0.572473,0.558715,0.544964,0.531112,0.517416,0.503992,0.490653,0.477162,0.463832,0.450645,1.000000,1.000000,0.999999,0.999992,0.999973,0.999933,0.999861,0.999741,0.999554,0.999267,0.998411,0.996303,0.995191,0.993945,0.991406,0.989019,0.985720,0.982057,0.977501,0.972605,0.966697,0.960340,0.953031,0.945347,0.936866,0.927917,0.918562,0.908598,0.898486,0.887794,0.876545,0.865379,0.853428,0.841167,0.828649,0.815967,0.802957,0.789865,0.777077,0.764695,0.753544,0.742694,0.731571,0.720304,0.708490,0.696351,0.684134,0.671470,0.658541,0.645376,0.632209,0.618776,0.605511,0.592527,0.579546,0.566310,0.552860,0.539492,0.526005,0.512564,0.499340,0.486360,0.473357,0.460306,1.000000,1.000000,0.999998,0.999991,0.999970,0.999926,0.999842,0.999710,0.999498,0.999164,0.997464,0.995870,0.994917,0.992911,0.990682,0.987816,0.984410,0.980551,0.975693,0.970263,0.963946,0.957248,0.949765,0.941571,0.932941,0.923873,0.914332,0.904560,0.894394,0.884127,0.873294,0.862503,0.851335,0.839566,0.827776,0.815708,0.803370,0.790821,0.778386,0.766121,0.754193,0.743420,0.732975,0.722326,0.711376,0.699992,0.688180,0.676354,0.664004,0.651449,0.638600,0.625776,0.612660,0.599603,0.586719,0.574078,0.561273,0.548129,0.535155,0.522015,0.508851,0.495837,0.483190,0.470624,1.000000,1.000000,0.999998,0.999988,0.999965,0.999916,0.999823,0.999669,0.999425,0.999025,0.996874,0.995670,0.994415,0.991991,0.989766,0.986646,0.982812,0.978356,0.973317,0.967612,0.960820,0.953603,0.945969,0.937323,0.928661,0.919507,0.909833,0.900245,0.890390,0.880252,0.870000,0.859518,0.849163,0.838101,0.826960,0.815688,0.804126,0.792234,0.780356,0.768474,0.756678,0.745159,0.734601,0.724624,0.714339,0.703751,0.692766,0.681267,0.669799,0.657871,0.645577,0.633102,0.620560,0.607737,0.594890,0.582143,0.569779,0.557360,0.544651,0.531942,0.519228,0.506467,0.493710,0.481143,1.000000,1.000000,0.999998,0.999988,0.999961,0.999902,0.999798,0.999622,0.999341,0.998801,0.996397,0.995225,0.993927,0.991338,0.988500,0.985327,0.981195,0.976383,0.970726,0.964471,0.957386,0.949813,0.941694,0.932681,0.923974,0.914755,0.905026,0.895649,0.886178,0.876277,0.866629,0.856890,0.846934,0.836887,0.826373,0.815885,0.805169,0.794133,0.782812,0.771547,0.760175,0.748896,0.737687,0.727152,0.717601,0.707670,0.697425,0.686788,0.675664,0.664513,0.652962,0.640965,0.628851,0.616551,0.604168,0.591559,0.579009,0.566648,0.554597,0.542382,0.529999,0.517655,0.505254,0.492894,1.000000,1.000000,0.999997,0.999986,0.999956,0.999889,0.999766,0.999562,0.999240,0.997952,0.996094,0.994979,0.992773,0.990536,0.987214,0.983322,0.978938,0.973714,0.967681,0.960981,0.953144,0.945475,0.936909,0.927734,0.918826,0.909590,0.900085,0.890867,0.881801,0.872565,0.863236,0.854239,0.845060,0.835686,0.826251,0.816284,0.806586,0.796419,0.785914,0.775210,0.764461,0.753599,0.742805,0.731872,0.721370,0.711898,0.702337,0.692383,0.682137,0.671365,0.660479,0.649314,0.637685,0.625899,0.613898,0.601865,0.589582,0.577285,0.565013,0.553106,0.541280,0.529367,0.517320,0.505411,1.000000,1.000000,0.999997,0.999983,0.999948,0.999869,0.999732,0.999499,0.999111,0.997167,0.995720,0.994349,0.991727,0.989197,0.985883,0.981483,0.976618,0.970597,0.964122,0.956994,0.948639,0.940500,0.931606,0.922385,0.913291,0.904205,0.894938,0.885890,0.877334,0.868754,0.860053,0.851683,0.843447,0.834889,0.826304,0.817441,0.808285,0.799141,0.789570,0.779600,0.769510,0.759155,0.748882,0.738346,0.727629,0.717273,0.707467,0.698283,0.688609,0.678748,0.668371,0.657739,0.646951,0.635765,0.624254,0.612647,0.600900,0.589061,0.576998,0.564991,0.553102,0.541517,0.530027,0.518495,1.000000,1.000000,0.999997,0.999983,0.999939,0.999851,0.999684,0.999412,0.998925,0.996597,0.995207,0.993603,0.990903,0.987594,0.983814,0.979016,0.973647,0.967048,0.960109,0.952123,0.943560,0.934900,0.925747,0.916566,0.907305,0.898441,0.889629,0.881042,0.872874,0.865064,0.857225,0.849446,0.842063,0.834561,0.826814,0.818875,0.810748,0.802316,0.793699,0.784704,0.775198,0.765643,0.755735,0.745873,0.735526,0.725229,0.714892,0.704807,0.695502,0.686241,0.676633,0.666688,0.656384,0.645871,0.635174,0.624113,0.612788,0.601426,0.589925,0.578399,0.566612,0.554931,0.543383,0.532065,1.000000,1.000000,0.999996,0.999977,0.999928,0.999824,0.999633,0.999306,0.998429,0.996133,0.994890,0.992316,0.989752,0.986095,0.981564,0.976234,0.970081,0.962779,0.955232,0.946702,0.937716,0.928604,0.919281,0.910167,0.901046,0.892446,0.884183,0.876253,0.868619,0.861545,0.854673,0.847885,0.841074,0.834610,0.827984,0.820945,0.813648,0.806232,0.798444,0.790232,0.781853,0.772897,0.763648,0.754227,0.744542,0.734689,0.724526,0.714204,0.704152,0.694222,0.685143,0.675860,0.666319,0.656415,0.646273,0.635902,0.625399,0.614563,0.603490,0.592413,0.581217,0.570000,0.558608,0.547242,1.000000,0.999999,0.999995,0.999972,0.999915,0.999790,0.999562,0.999168,0.997237,0.995672,0.994074,0.991220,0.987792,0.983822,0.978599,0.972804,0.965718,0.958053,0.949460,0.940503,0.931011,0.921608,0.912409,0.903378,0.894606,0.886369,0.878756,0.871573,0.864862,0.858421,0.852541,0.846802,0.841027,0.835206,0.829628,0.823730,0.817415,0.810655,0.803873,0.796659,0.788887,0.780940,0.772537,0.763507,0.754487,0.745163,0.735572,0.725687,0.715611,0.705398,0.695418,0.685592,0.676518,0.667304,0.657875,0.648182,0.638235,0.628062,0.617813,0.607283,0.596552,0.585770,0.575033,0.564153,1.000000,1.000000,0.999995,0.999970,0.999898,0.999748,0.999472,0.998969,0.996528,0.995102,0.992701,0.989963,0.985981,0.981194,0.975183,0.968501,0.960502,0.952012,0.942861,0.933376,0.923506,0.914042,0.904921,0.896282,0.887987,0.880341,0.873536,0.867293,0.861556,0.856148,0.850987,0.846352,0.841684,0.836880,0.832036,0.827091,0.821900,0.816206,0.810042,0.803629,0.796918,0.789653,0.781915,0.774014,0.765530,0.756526,0.747669,0.738342,0.728770,0.718942,0.708942,0.698855,0.688933,0.679131,0.669855,0.660811,0.651549,0.642127,0.632454,0.622651,0.612709,0.602606,0.592344,0.581877,1.000000,0.999999,0.999993,0.999963,0.999874,0.999691,0.999350,0.998431,0.995873,0.994456,0.991327,0.987798,0.983232,0.977500,0.970828,0.962815,0.954228,0.944752,0.935126,0.925179,0.915102,0.905763,0.897087,0.888933,0.881452,0.874687,0.868716,0.863585,0.858931,0.854662,0.850569,0.846719,0.843151,0.839426,0.835588,0.831443,0.827004,0.822395,0.817254,0.811630,0.805464,0.799124,0.792382,0.785091,0.777315,0.769360,0.760908,0.751957,0.743128,0.733917,0.724340,0.714713,0.704721,0.694835,0.684862,0.675099,0.665570,0.656644,0.647651,0.638581,0.629337,0.619926,0.610358,0.600707,1.000000,1.000000,0.999990,0.999953,0.999843,0.999613,0.999186,0.997025,0.995317,0.992850,0.989760,0.985270,0.979807,0.973049,0.965228,0.956248,0.946394,0.936324,0.926124,0.915808,0.905942,0.897060,0.889001,0.881755,0.875351,0.869688,0.864736,0.860745,0.857305,0.854190,0.851261,0.848484,0.845642,0.842948,0.840060,0.836901,0.833379,0.829393,0.825103,0.820431,0.815288,0.809575,0.803326,0.796949,0.790174,0.782873,0.775048,0.767139,0.758772,0.750019,0.741120,0.732127,0.722743,0.713225,0.703637,0.693768,0.684016,0.674277,0.664703,0.655328,0.646550,0.637812,0.629036,0.620129,1.000000,1.000000,0.999988,0.999933,0.999800,0.999508,0.998917,0.996236,0.994617,0.991176,0.987089,0.981880,0.974966,0.967156,0.957914,0.947585,0.936937,0.926318,0.915662,0.905567,0.896223,0.888166,0.881117,0.875079,0.869981,0.865675,0.862091,0.859183,0.856981,0.855065,0.853273,0.851572,0.849782,0.847768,0.845668,0.843345,0.840703,0.837646,0.834094,0.830030,0.825631,0.820873,0.815619,0.809856,0.803578,0.797096,0.790359,0.783152,0.775507,0.767504,0.759411,0.750982,0.742208,0.733383,0.724445,0.715190,0.705827,0.696440,0.686773,0.677242,0.667735,0.658471,0.649236,0.640305,1.000000,0.999999,0.999984,0.999918,0.999737,0.999350,0.997576,0.995476,0.992614,0.988817,0.983601,0.976880,0.968694,0.959092,0.948297,0.936831,0.925592,0.914494,0.904159,0.894643,0.886417,0.879620,0.874023,0.869533,0.865967,0.863238,0.861113,0.859527,0.858367,0.857594,0.856882,0.856172,0.855316,0.854197,0.852818,0.851062,0.849046,0.846747,0.844043,0.840842,0.837164,0.832985,0.828344,0.823544,0.818276,0.812543,0.806374,0.799838,0.793170,0.786246,0.778956,0.771297,0.763278,0.755252,0.746984,0.738445,0.729688,0.721045,0.712189,0.703099,0.694045,0.684930,0.675601,0.666480,1.000000,0.999999,0.999978,0.999888,0.999639,0.999093,0.996310,0.994405,0.990527,0.985186,0.978518,0.969748,0.959597,0.948104,0.935724,0.923704,0.912023,0.901356,0.891850,0.883847,0.877280,0.872289,0.868583,0.865913,0.864098,0.862993,0.862356,0.862125,0.862107,0.862168,0.862359,0.862490,0.862430,0.862063,0.861431,0.860386,0.858950,0.857090,0.854848,0.852381,0.849503,0.846167,0.842399,0.838194,0.833566,0.828579,0.823464,0.817951,0.812079,0.805873,0.799320,0.792533,0.785715,0.778636,0.771260,0.763618,0.755719,0.747815,0.739825,0.731602,0.723212,0.714845,0.706465,0.697933,1.000000,0.999998,0.999969,0.999836,0.999475,0.997943,0.995219,0.991760,0.986663,0.979592,0.970218,0.959155,0.946575,0.933047,0.920022,0.907749,0.896801,0.887506,0.880077,0.874322,0.870126,0.867481,0.865949,0.865293,0.865287,0.865746,0.866502,0.867439,0.868442,0.869382,0.870161,0.870782,0.871303,0.871511,0.871427,0.870978,0.870136,0.868892,0.867248,0.865209,0.862775,0.859944,0.857004,0.853671,0.849984,0.845927,0.841518,0.836774,0.831750,0.826407,0.821001,0.815333,0.809412,0.803238,0.796802,0.790204,0.783457,0.776713,0.769749,0.762596,0.755239,0.747690,0.740127,0.732595,1.000000,0.999997,0.999950,0.999744,0.999162,0.996124,0.992844,0.987757,0.980062,0.969642,0.957087,0.942735,0.927747,0.913622,0.900889,0.890115,0.881584,0.875288,0.870926,0.868307,0.867033,0.866972,0.867692,0.868950,0.870549,0.872320,0.874144,0.875947,0.877674,0.879192,0.880478,0.881539,0.882307,0.882739,0.882902,0.882847,0.882461,0.881725,0.880636,0.879197,0.877422,0.875296,0.872849,0.870076,0.866988,0.863637,0.860159,0.856475,0.852525,0.848328,0.843883,0.839198,0.834322,0.829221,0.823907,0.818461,0.812972,0.807316,0.801474,0.795459,0.789276,0.783025,0.776615,0.770223,0.999999,0.999994,0.999909,0.999536,0.997195,0.994123,0.988168,0.979344,0.967003,0.951763,0.934724,0.917948,0.902918,0.890432,0.880902,0.874401,0.870394,0.868503,0.868209,0.869062,0.870725,0.873006,0.875558,0.878230,0.880893,0.883445,0.885832,0.888059,0.890058,0.891782,0.893247,0.894460,0.895397,0.896023,0.896380,0.896433,0.896198,0.895673,0.894865,0.893908,0.892700,0.891224,0.889501,0.887539,0.885336,0.882903,0.880244,0.877373,0.874296,0.871019,0.867549,0.863933,0.860153,0.856355,0.852395,0.848277,0.844006,0.839587,0.835045,0.830378,0.825579,0.820649,0.815592,0.810432,0.999998,0.999988,0.999795,0.998892,0.994635,0.987290,0.975397,0.958508,0.938352,0.917733,0.899800,0.885878,0.876516,0.871200,0.869099,0.869317,0.871112,0.873870,0.877160,0.880682,0.884228,0.887737,0.891076,0.894161,0.896981,0.899543,0.901847,0.903882,0.905672,0.907188,0.908451,0.909480,0.910289,0.910878,0.911259,0.911430,0.911396,0.911154,0.910712,0.910081,0.909266,0.908264,0.907094,0.905752,0.904244,0.902577,0.900799,0.898931,0.896923,0.894782,0.892513,0.890117,0.887600,0.884968,0.882222,0.879369,0.876408,0.873345,0.870183,0.866926,0.863575,0.860160,0.856672,0.853098,0.999991,0.999947,0.999158,0.992842,0.980107,0.957230,0.928231,0.901539,0.882688,0.872588,0.869394,0.870671,0.874458,0.879378,0.884639,0.889770,0.894601,0.898972,0.902930,0.906456,0.909568,0.912329,0.914750,0.916893,0.918774,0.920429,0.921868,0.923110,0.924185,0.925089,0.925842,0.926457,0.926934,0.927285,0.927522,0.927639,0.927650,0.927553,0.927356,0.927061,0.926671,0.926187,0.925617,0.924962,0.924224,0.923409,0.922519,0.921555,0.920521,0.919419,0.918252,0.917021,0.915729,0.914377,0.912967,0.911503,0.909984,0.908414,0.906791,0.905122,0.903401,0.901637,0.899826,0.897972,0.987461,0.940121,0.871507,0.898572,0.916705,0.926425,0.931922,0.935265,0.937431,0.938899,0.939950,0.940717,0.941301,0.941754,0.942111,0.942397,0.942631,0.942823,0.942983,0.943117,0.943231,0.943329,0.943412,0.943484,0.943545,0.943599,0.943644,0.943682,0.943716,0.943744,0.943766,0.943785,0.943799,0.943808,0.943815,0.943818,0.943818,0.943814,0.943807,0.943797,0.943784,0.943769,0.943751,0.943730,0.943707,0.943681,0.943652,0.943623,0.943589,0.943554,0.943518,0.943479,0.943438,0.943396,0.943351,0.943305,0.943257,0.943207,0.943156,0.943104,0.943049,0.942993,0.942936,0.942877];
armory_renderpath_HosekWilkieData.datasetRGB1 = [-1.099459e+000,-1.335146e-001,-4.083223e+000,5.919603e+000,-1.104166e-001,1.600158e+000,-1.326538e-006,4.917807e+000,5.127716e-001,-1.169858e+000,-1.832793e-001,9.694744e-001,9.495762e-002,-4.738918e-002,2.194171e-001,1.095749e-001,3.603604e+000,3.815119e-001,-9.665225e-001,-1.403888e-001,5.194457e+000,-1.107607e+000,-8.135181e-001,4.969661e+000,-2.300508e-001,-2.489350e+000,1.279158e+000,-1.292508e+000,-1.299552e-001,-2.071404e+000,-4.752482e-002,1.215598e+000,-1.904179e+000,3.027985e-001,8.707768e+000,6.332446e-002,-9.264666e-001,-1.696780e-001,4.574070e+000,-4.232936e-001,-7.575833e+000,5.079755e+000,-2.576343e-001,-4.506805e+000,6.908129e-001,-1.139072e+000,-1.796056e-001,1.923311e+000,6.788529e+000,-2.364389e+000,-1.064041e+000,1.717010e-001,1.534681e+000,5.015810e-001,-1.107257e+000,-1.384411e-001,-4.285744e+000,5.713157e+000,-1.015992e-001,1.372638e+000,6.555893e-002,5.127514e+000,6.550471e-001,-1.187337e+000,-1.969013e-001,8.551048e-001,5.289708e-002,-7.626406e-002,1.733153e-002,1.779454e-001,3.801038e+000,4.742709e-001,-9.685321e-001,-1.553308e-001,4.732492e+000,-1.178935e+000,-7.852791e-001,4.604492e+000,-2.666518e-001,-2.367663e+000,1.177527e+000,-1.252817e+000,-5.129949e-002,-2.800433e+000,-1.295992e-002,1.308964e+000,-2.204331e+000,7.276011e-001,8.699265e+000,1.188388e-001,-9.459509e-001,-2.322133e-001,4.375041e+000,-1.712018e-001,-7.451681e+000,5.078019e+000,-4.223538e-001,-4.595561e+000,1.074719e+000,-1.125092e+000,-1.796750e-001,1.626399e+000,6.989743e+000,-2.406382e+000,-9.060383e-001,2.961611e-001,1.337715e+000,5.438140e-001,-1.135338e+000,-1.716160e-001,-1.499253e+000,2.373491e+000,-1.654023e-001,9.566404e-001,1.113453e-001,4.528473e+000,6.579439e-001,-1.132780e+000,-1.456214e-001,-1.736672e+000,1.756589e+000,-1.087003e-001,3.757927e-001,2.525070e-001,7.178513e+000,5.003814e-001,-1.167176e+000,-2.927225e-001,5.727667e+000,-3.139244e+000,-6.425204e-001,2.822634e+000,-1.457812e-001,-6.787080e+000,1.017072e+000,-1.042529e+000,4.110823e-002,-4.000629e+000,4.362364e+000,1.090540e+000,-1.338674e+000,8.246964e-001,1.095249e+001,2.912211e-001,-1.061598e+000,-2.096143e-001,3.803155e+000,-7.977069e+000,-3.637880e+000,3.707671e+000,-1.903128e-001,-3.397953e+000,9.971500e-001,-1.073560e+000,-2.077964e-001,1.492052e+000,1.626322e+001,-5.015304e+000,-4.059889e-001,2.659782e-001,6.395380e-001,5.634436e-001,-1.172794e+000,-2.111186e-001,-1.360013e+000,1.604080e+000,-8.473723e-002,7.217312e-001,1.548030e-001,4.257010e+000,6.328974e-001,-1.238374e+000,-2.670827e-001,3.247678e-001,5.466311e-001,-7.425952e-001,5.276440e-001,2.678026e-002,5.484169e+000,6.814734e-001,-1.176923e+000,-2.574586e-001,2.304045e+000,-2.797678e+000,1.464405e+000,1.998552e+000,2.550559e-001,-4.199772e+000,7.544892e-001,-1.003284e+000,1.943984e-002,-2.145066e+000,1.030924e+001,-1.525413e+001,-2.023010e+000,5.448699e-001,8.159497e+000,5.539148e-001,-1.060017e+000,-2.037206e-001,2.483018e+000,-4.595459e+000,6.526991e+000,4.031804e+000,1.206513e-001,-2.586527e+000,7.875752e-001,-1.081141e+000,-2.123302e-001,1.092275e+000,2.683841e+000,-4.166938e+000,-1.396582e+000,4.371205e-001,1.030233e+000,6.664862e-001,-1.222392e+000,-2.651924e-001,-4.625037e-001,3.521964e-001,2.148855e-002,5.078494e-001,1.791590e-001,3.852516e+000,5.998216e-001,-1.424610e+000,-4.710155e-001,-1.826815e-001,1.786277e+000,-1.952442e+000,5.277612e-001,-1.773629e-002,2.415874e+000,6.701272e-001,-1.130655e+000,-1.358609e-001,9.171203e-001,-4.660394e+000,6.251162e+000,1.904529e+000,2.639668e-001,1.856130e+000,8.228440e-001,-9.739015e-001,-6.674749e-002,-4.768897e-001,1.248589e+001,-1.994688e+001,-2.353043e+000,5.885575e-001,1.287251e+000,4.830135e-001,-1.082178e+000,-1.974495e-001,1.050245e+000,-4.792855e+000,8.663406e+000,3.246969e+000,1.556731e-001,8.117442e-001,8.050376e-001,-1.063354e+000,-1.727108e-001,9.681592e-001,2.736077e+000,-4.969269e+000,-8.360570e-001,5.994612e-001,1.024039e+000,6.786935e-001,-1.261936e+000,-3.053676e-001,-4.262222e-001,4.000196e-001,-2.059388e-002,4.721802e-001,1.480028e-001,3.505343e+000,6.121337e-001,-1.681088e+000,-6.971919e-001,-1.105652e-001,7.437426e-001,-6.594399e-001,2.254221e-001,8.710195e-002,1.263913e+000,5.681865e-001,-9.453001e-001,3.460388e-002,6.067038e-001,-1.985128e+000,3.457236e+000,2.655483e+000,-1.162354e-002,3.304716e+000,1.001950e+000,-1.086609e+000,-2.029011e-001,-6.399170e-001,6.926885e+000,-1.512189e+001,-3.793051e+000,9.456120e-001,2.222222e-001,2.893725e-001,-1.041259e+000,-1.388790e-001,1.147331e+000,6.282086e+000,3.679836e+000,4.398314e+000,-1.355232e-001,1.031134e+000,9.273509e-001,-1.063473e+000,-1.916051e-001,6.556979e-001,-3.371891e-003,-3.699664e+000,-1.926783e+000,7.371154e-001,1.179975e+000,6.367068e-001,-1.336390e+000,-3.778927e-001,-7.259477e-001,2.270247e-001,4.627513e-001,1.366459e-001,2.637347e-001,3.292059e+000,4.998211e-001,-2.119878e+000,-1.055472e+000,5.422052e-001,7.826648e-001,-1.286065e+000,9.517905e-001,-1.432358e-001,-2.379816e-001,5.910513e-001,-7.761432e-001,2.124336e-001,-6.845184e-001,-9.812342e-001,4.347257e+000,9.671980e-001,3.773150e-001,5.789529e+000,9.646598e-001,-1.118734e+000,-3.513815e-001,5.500918e-001,9.449627e-001,-1.262070e+001,-1.825280e+000,4.731260e-001,-3.326892e+000,3.568768e-001,-1.026437e+000,-8.257946e-002,3.221701e-001,1.198372e+001,1.555130e+000,2.560304e+000,1.406465e-001,2.912858e+000,8.643181e-001,-1.069949e+000,-2.029607e-001,5.825042e-001,-2.398595e-003,-3.278335e+000,-1.349882e+000,7.208433e-001,8.505164e-001,6.625391e-001,-1.392309e+000,-4.454945e-001,-5.664000e-001,6.283393e-001,-3.761727e-001,6.949802e-001,7.748178e-002,3.192797e+000,5.968661e-001,-2.713405e+000,-1.395112e+000,2.029230e-001,1.877272e-001,-3.715859e-001,-1.652929e-001,2.385861e-001,-4.150768e-001,1.375467e-001,-9.588644e-001,2.433900e-002,-1.527493e+000,-9.632874e-001,5.496269e+000,1.094931e+000,2.004044e-001,6.084554e+000,1.369604e+000,-8.028546e-001,-2.473563e-001,1.617898e+000,2.073591e+000,-1.149446e+001,-8.394131e-001,2.726847e-001,-4.634538e+000,1.367293e-001,-1.198326e+000,-1.804865e-001,-3.565414e-001,4.073200e+000,1.662086e+000,1.239770e+000,3.367978e-001,2.997402e+000,9.360383e-001,-1.013531e+000,-1.859060e-001,5.799857e-001,1.331883e+001,-4.346873e+000,-1.113820e+000,5.275714e-001,8.045177e-001,6.496373e-001,-1.530103e+000,-6.107468e-001,-3.841771e-001,1.881508e+000,-1.464807e+000,6.654690e-001,-5.950797e-006,2.738912e+000,8.101012e-001,-2.415469e+000,-1.057499e+000,-4.161968e-001,-2.357548e+000,6.300296e-001,6.224915e-001,1.545048e-002,2.038561e+000,-1.339415e-001,-3.096796e+000,-1.465688e+000,-1.199232e+000,4.567061e+000,3.260980e+000,-9.794907e-001,8.950491e-001,2.049235e+000,1.331015e+000,2.713904e-001,2.852852e-001,1.202090e+000,-8.206784e+000,-5.805762e+000,1.804431e+000,-6.090648e-001,-1.990902e+000,3.288858e-001,-1.456580e+000,-3.455960e-001,-6.409257e-002,1.667697e+001,-2.311094e+000,-9.771104e-001,6.759863e-001,1.245136e+000,7.911932e-001,-9.860389e-001,-2.099564e-001,2.946650e-001,-3.547800e-003,-2.268313e+000,-6.205647e-002,4.705185e-001,8.657995e-001,6.856284e-001,-1.971736e+000,-9.414047e-001,-3.400557e-001,1.468763e+000,-1.474284e+000,5.501062e-001,-1.109750e-005,2.356370e+000,9.001702e-001,-1.589845e+000,-7.797079e-001,-5.582240e-001,-8.137376e-001,5.846617e-001,1.129459e-001,-2.658005e-002,2.707248e+000,-2.112486e-001,-6.940173e+000,-2.823963e+000,-1.620848e+000,1.090696e+000,2.391730e+000,1.370047e+000,5.890462e-001,1.728400e+000,1.331253e+000,1.293144e+000,-1.919778e-003,1.644206e+000,-8.666967e-001,-7.161953e+000,-1.385018e+000,-1.505374e-001,-1.388643e+000,2.530122e-001,-1.488880e+000,-2.495496e-001,-2.377137e-001,1.167714e+001,-8.617124e-001,1.053828e+000,1.992744e-001,3.633564e-001,8.553304e-001,-1.060891e+000,-4.035829e-001,2.823207e-001,-2.369798e-003,-1.876577e+000,-5.950265e-001,4.241017e-001,3.140802e-001,6.631669e-001,-1.101204e+000,-1.351353e-001,-4.030882e+000,6.096353e+000,-1.148599e-001,1.606507e+000,-1.555474e-006,4.436084e+000,5.973715e-001,-1.154597e+000,-1.923378e-001,8.512132e-001,2.934895e-001,-6.522777e-002,1.389077e-001,9.091469e-002,3.133307e+000,2.108541e-001,-1.031588e+000,-1.546804e-001,5.266214e+000,-9.491390e-001,-7.184867e-001,4.875626e+000,-1.911907e-001,-2.865642e+000,1.087895e+000,-1.159454e+000,-9.546699e-002,-1.508146e+000,-2.031411e-002,1.040653e+000,-2.333508e+000,2.540592e-001,8.594981e+000,9.316770e-002,-1.035940e+000,-2.021151e-001,4.719343e+000,-9.019318e-001,-7.858046e+000,3.901234e+000,-2.233137e-001,-4.344739e+000,6.550733e-001,-1.096669e+000,-1.558196e-001,2.057553e+000,6.274495e+000,-2.678352e+000,-1.814927e+000,1.550676e-001,1.903276e+000,4.998989e-001,-1.114209e+000,-1.473531e-001,-7.602914e+000,8.973685e+000,-4.980074e-002,1.289198e+000,8.366906e-002,4.557987e+000,6.118757e-001,-1.149397e+000,-1.981628e-001,4.914096e+000,-3.498986e+000,-6.257090e-002,1.667401e-001,1.048980e-001,2.284689e+000,5.935965e-001,-1.056121e+000,-1.456172e-001,4.272656e-001,2.912649e+000,-5.501745e-001,4.406542e+000,-1.387680e-001,1.245555e+000,9.733011e-001,-1.125047e+000,-4.003662e-002,1.058457e+000,-3.462236e+000,4.395278e-001,-2.395805e+000,5.177589e-001,4.866247e+000,4.253189e-001,-1.051444e+000,-2.804541e-001,3.364668e+000,3.293787e+000,-1.015741e+001,3.807407e+000,-3.592377e-001,-3.367415e+000,7.900825e-001,-1.093847e+000,-1.436965e-001,2.384780e+000,5.787070e+000,-2.445987e+000,-1.311171e+000,2.326563e-001,1.158439e+000,5.555416e-001,-1.134824e+000,-1.680468e-001,-3.325620e+000,4.458596e+000,-1.135063e-001,1.104500e+000,7.794544e-002,4.609952e+000,6.854854e-001,-1.143017e+000,-1.565926e-001,3.014687e-001,-1.763027e-001,-3.557925e-002,-2.342406e-001,2.528705e-001,5.884085e+000,4.750602e-001,-1.136801e+000,-2.907502e-001,3.682423e+000,-4.061202e-001,-8.728159e-001,4.001510e+000,-1.522202e-001,-5.528713e+000,1.044847e+000,-1.063652e+000,7.808107e-002,-1.983678e+000,3.648078e-001,2.102276e+000,-3.065050e+000,8.431951e-001,1.038830e+001,2.662834e-001,-1.061015e+000,-2.859814e-001,4.223615e+000,-2.290138e+000,-8.314010e+000,4.405718e+000,-4.613627e-001,-4.502910e+000,1.008383e+000,-1.106302e+000,-1.697123e-001,2.087196e+000,8.238929e+000,-2.992416e+000,-1.821776e+000,3.434859e-001,7.755179e-001,5.341190e-001,-1.171110e+000,-2.106304e-001,-1.614361e+000,2.378103e+000,-1.625969e-001,8.504483e-001,1.059312e-001,4.046256e+000,6.618227e-001,-1.200480e+000,-2.235733e-001,1.014390e+000,-1.174074e+000,-4.440180e-001,2.262406e-001,1.665868e-001,5.461829e+000,5.676310e-001,-1.223587e+000,-3.502622e-001,1.699106e+000,6.724266e-001,1.268567e+000,2.135102e+000,8.039374e-004,-5.221111e+000,9.445690e-001,-9.452673e-001,1.468459e-001,-1.335034e+000,4.346628e+000,-1.285652e+001,-1.807046e+000,8.175243e-001,9.301065e+000,3.656798e-001,-1.134681e+000,-3.310951e-001,3.571244e+000,-2.208948e+000,6.041580e+000,3.107577e+000,-3.112127e-001,-4.186351e+000,9.188333e-001,-1.083237e+000,-1.831394e-001,2.062654e+000,1.385424e+000,-5.004950e+000,-1.332669e+000,3.627352e-001,3.323150e-001,6.191181e-001,-1.211527e+000,-2.590617e-001,-1.660874e-001,3.627905e-001,-1.039258e-001,4.697924e-001,1.671653e-001,3.507497e+000,6.022506e-001,-1.433017e+000,-4.733592e-001,1.724445e-001,9.953236e-001,-1.874457e+000,4.432099e-001,1.715810e-002,2.339272e+000,6.441470e-001,-1.084920e+000,-1.587903e-001,8.999585e-001,-2.537516e+000,5.877859e+000,2.014554e+000,9.689141e-002,3.177242e-001,9.030399e-001,-1.008242e+000,2.793030e-003,-3.507469e-001,1.028300e+001,-2.080454e+001,-2.781026e+000,8.995090e-001,3.366951e+000,3.473867e-001,-1.103151e+000,-2.799598e-001,2.525791e+000,-4.255704e+000,9.903388e+000,3.722668e+000,-3.603941e-001,-1.303292e+000,9.369454e-001,-1.102235e+000,-2.025061e-001,2.085660e+000,1.686787e+000,-5.010957e+000,-1.656458e+000,4.584029e-001,-2.751759e-001,6.184162e-001,-1.256130e+000,-3.104904e-001,1.639350e-001,1.315502e-001,-7.297583e-001,4.778480e-001,1.259265e-001,3.012108e+000,6.202728e-001,-1.620114e+000,-6.552670e-001,-2.877157e-001,1.094371e+000,2.818914e-001,3.696830e-001,9.428521e-002,1.450951e+000,5.681308e-001,-9.686204e-001,-3.755647e-002,1.469980e+000,-3.103414e+000,2.856583e+000,1.883209e+000,-5.746099e-002,1.286383e+000,1.001751e+000,-1.089377e+000,-1.023062e-001,-1.498891e+000,1.066455e+001,-1.720184e+001,-2.759314e+000,1.061258e+000,2.910211e+000,2.624701e-001,-1.044681e+000,-2.156857e-001,3.230136e+000,-5.863862e-001,6.096640e+000,3.550019e+000,-4.255773e-001,-1.500033e+000,9.687696e-001,-1.133658e+000,-2.505101e-001,1.717840e+000,8.480428e-003,-5.011789e+000,-1.740989e+000,4.983430e-001,-2.081829e-001,6.088641e-001,-1.335366e+000,-3.863319e-001,-5.279971e-001,3.638324e-001,3.230699e-001,8.339707e-002,2.483293e-001,2.678646e+000,4.998346e-001,-2.004511e+000,-9.957121e-001,1.250807e+000,1.625025e-002,-3.410754e-001,7.858244e-001,-9.506757e-002,2.651876e-002,5.788643e-001,-8.714157e-001,1.192051e-001,-8.486879e-001,-3.702497e-001,1.818277e+000,1.103427e+000,2.454866e-001,3.841575e+000,9.847350e-001,-1.042618e+000,-2.285793e-001,3.620175e-001,2.983368e+000,-9.776844e+000,-1.971587e+000,6.691674e-001,-7.901947e-001,3.213200e-001,-1.099112e+000,-1.869868e-001,2.044065e+000,2.062964e+000,1.265668e+000,2.710130e+000,-1.099443e-001,2.179353e-001,9.024108e-001,-1.106985e+000,-2.396881e-001,1.809807e+000,8.523319e+000,-5.011788e+000,-1.590086e+000,3.248449e-001,-1.003187e-001,6.550606e-001,-1.421285e+000,-4.767024e-001,-3.885004e-001,8.274590e-001,-3.644229e-001,6.999513e-001,5.196710e-002,2.578431e+000,6.246310e-001,-2.611217e+000,-1.398846e+000,4.527425e-001,-5.932142e-001,2.224617e-001,-5.593581e-001,3.389633e-001,-7.767112e-001,6.536004e-002,-9.881543e-001,4.684782e-002,-8.616613e-001,8.799807e-001,4.003130e+000,1.739543e+000,-8.098378e-002,5.524802e+000,1.499673e+000,-7.544759e-001,-2.314808e-001,8.125770e-001,-7.724135e-001,-9.577645e+000,-1.629433e+000,6.790832e-001,-4.193895e+000,-2.526624e-002,-1.273719e+000,-2.187030e-001,1.401798e+000,5.231832e+000,7.405093e-001,1.775166e+000,-7.269476e-002,1.996087e+000,1.057450e+000,-1.046864e+000,-2.247559e-001,1.679449e+000,1.140057e+001,-4.948829e+000,-1.182664e+000,3.241038e-001,-2.470012e-001,6.115900e-001,-1.514607e+000,-5.985430e-001,-1.877610e-001,1.756930e+000,-1.314206e+000,6.115810e-001,-5.970460e-006,2.412975e+000,8.124304e-001,-2.308414e+000,-1.083797e+000,-1.179959e-001,-1.728246e+000,7.784742e-001,5.494505e-001,6.203168e-003,9.326251e-001,-1.419518e-001,-3.230837e+000,-1.438670e+000,-9.868286e-001,2.974393e+000,1.949339e+000,-6.337857e-001,8.160271e-001,3.278606e+000,1.354373e+000,5.149378e-001,2.754789e-001,1.040965e+000,-4.501186e+000,-3.399057e+000,9.661861e-001,-4.736173e-001,-4.037574e+000,2.794847e-001,-1.621870e+000,-3.192763e-001,8.786242e-001,9.785565e+000,-2.727652e+000,1.903691e-002,5.521261e-001,2.138764e+000,8.419871e-001,-9.951701e-001,-2.550607e-001,1.498952e+000,-2.737197e-003,-3.101832e+000,-5.921329e-001,2.864422e-001,-4.405218e-001,6.631410e-001,-1.902954e+000,-9.056918e-001,-2.069570e-001,1.191499e+000,-1.092577e+000,5.849556e-001,-9.649602e-006,2.048407e+000,9.001527e-001,-1.271627e+000,-7.193923e-001,-1.136606e-002,-1.167951e-001,3.286175e-003,-5.262827e-002,-2.473874e-002,1.716125e+000,-2.187133e-001,-7.647175e+000,-3.114129e+000,-1.490128e+000,-5.266488e-001,3.063090e+000,1.474262e+000,5.481458e-001,2.052174e+000,1.353089e+000,2.191403e+000,3.421120e-001,1.446510e+000,2.170943e+000,-7.768187e+000,-1.471207e+000,-1.456708e-001,-1.753574e+000,2.310576e-001,-1.932296e+000,-3.814739e-001,6.245422e-001,6.748294e+000,-3.060171e-001,1.067747e+000,2.500671e-001,-1.252596e-001,8.614611e-001,-9.471101e-001,-4.052640e-001,1.300174e+000,-3.951536e-003,-1.908284e+000,-5.385721e-001,2.133578e-001,-6.250292e-001,6.658012e-001];
armory_renderpath_HosekWilkieData.datasetRGBRad1 = [1.962684e+000,1.159831e+000,4.450588e+000,5.079633e+000,4.437388e+000,4.324573e+000,1.946487e+000,1.287515e+000,3.703696e+000,8.782833e+000,3.440437e+000,5.160333e+000,1.882170e+000,1.335878e+000,2.648641e+000,1.358368e+001,3.105473e+000,5.907387e+000,1.738159e+000,1.624289e+000,-8.786695e-003,2.118253e+001,2.770255e+000,7.055672e+000,1.571896e+000,2.301786e+000,-4.028545e+000,2.966806e+001,1.630876e+000,8.711031e+000,1.475048e+000,2.679086e+000,-6.311315e+000,3.377896e+001,2.140975e+000,9.385283e+000,1.326174e+000,3.378759e+000,-9.831444e+000,3.942061e+001,2.852702e+000,1.082542e+001,1.153344e+000,3.967771e+000,-1.265181e+001,4.195016e+001,7.468239e+000,1.221350e+001,9.746081e-001,4.051626e+000,-1.298454e+001,3.754964e+001,1.749232e+001,1.420619e+001,8.448016e-001,3.181809e+000,-8.757338e+000,2.197962e+001,3.524033e+001,1.639549e+001,2.029623e+000,1.364434e+000,4.201529e+000,5.415099e+000,9.825839e+000,1.063328e+001,2.023126e+000,1.494728e+000,3.420413e+000,9.072178e+000,9.205157e+000,1.186639e+001,1.956307e+000,1.648665e+000,2.039712e+000,1.430239e+001,9.039526e+000,1.330453e+001,1.825053e+000,1.985022e+000,-8.036307e-001,2.202493e+001,9.415361e+000,1.517659e+001,1.650367e+000,2.593201e+000,-4.469328e+000,2.969817e+001,9.410977e+000,1.744850e+001,1.555202e+000,2.962925e+000,-6.608170e+000,3.329887e+001,1.064559e+001,1.850816e+001,1.412478e+000,3.439403e+000,-9.196616e+000,3.685077e+001,1.345341e+001,2.003128e+001,1.252990e+000,3.820805e+000,-1.115338e+001,3.721593e+001,2.014916e+001,2.182320e+001,1.091952e+000,3.663027e+000,-1.031330e+001,2.978985e+001,3.296835e+001,2.375450e+001,9.501691e-001,2.664579e+000,-5.545167e+000,1.281159e+001,5.154768e+001,2.574284e+001];
armory_renderpath_HosekWilkieData.datasetRGB2 = [-1.140530e+000,-1.982747e-001,-7.512730e+000,8.403899e+000,-5.699038e-002,9.015907e-001,3.392161e-002,4.772522e+000,5.111184e-001,-1.165117e+000,-1.852955e-001,2.963684e+000,-2.262274e+000,-1.571683e-001,6.339974e-001,4.977879e-002,7.243307e+000,4.220053e-001,-1.169936e+000,-3.357429e-001,1.911291e+000,-2.391074e-001,-4.791643e-001,1.446113e+000,-9.178108e-002,-4.700239e+000,8.096219e-001,-1.060246e+000,-1.051633e-001,5.013829e-001,2.832309e+000,-3.707855e-001,1.523131e+000,9.163749e-002,5.604183e+000,7.208566e-001,-1.089753e+000,-2.382167e-001,2.360312e+000,-5.902562e+000,-8.799894e+000,1.377692e+000,-6.131633e-002,-1.415472e+000,6.124057e-001,-1.075481e+000,-1.242391e-001,1.425781e+000,8.810319e+000,-2.922646e+000,1.486520e+000,3.270580e-002,3.889783e+000,4.999482e-001,-1.149342e+000,-2.076337e-001,-7.446587e+000,8.014559e+000,-4.866227e-002,8.203043e-001,6.386483e-002,4.894198e+000,5.452051e-001,-1.120531e+000,-1.513311e-001,2.735504e+000,-2.417591e+000,-1.361114e-001,4.296342e-001,9.427488e-002,8.171403e+000,4.102448e-001,-1.226964e+000,-3.516378e-001,1.308298e+000,-5.097487e-002,-4.846783e-001,1.654619e+000,-1.134940e-001,-3.347854e+000,1.131147e+000,-9.664377e-001,2.767589e-002,1.658235e-001,2.407439e+000,-1.300304e-001,9.170958e-001,2.742895e-001,6.642633e+000,2.550064e-001,-1.153358e+000,-3.126223e-001,2.078934e+000,-5.857733e+000,-8.659848e+000,1.758505e+000,-9.616094e-002,-1.230863e+000,9.663832e-001,-1.053850e+000,-1.330743e-001,1.481738e+000,1.049485e+001,-3.528854e+000,9.142363e-001,1.244880e-001,2.644615e+000,5.001048e-001,-1.173687e+000,-2.360362e-001,-3.741454e+000,4.088507e+000,-7.528205e-002,6.645237e-001,7.718265e-002,4.651220e+000,5.586318e-001,-1.213757e+000,-2.589561e-001,7.132551e-001,-4.259327e-001,-1.980821e-001,3.627815e-001,4.666560e-002,5.807984e+000,5.847377e-001,-1.108794e+000,-2.259870e-001,1.574179e+000,-3.753731e-001,-5.984743e-001,1.659414e+000,-1.681021e-002,6.785219e-001,8.647325e-001,-1.060896e+000,-1.346690e-002,-7.529656e-001,1.711319e+000,-9.792435e-001,2.022433e-001,3.826487e-001,5.725157e+000,5.290714e-001,-1.085145e+000,-2.840715e-001,2.088029e+000,-4.935097e+000,-9.056542e+000,1.976149e+000,-3.912485e-002,-8.636064e-001,7.452125e-001,-1.077983e+000,-1.416633e-001,1.100848e+000,1.015875e+001,-2.943712e+000,5.255135e-001,2.164224e-001,2.941143e+000,6.699937e-001,-1.223293e+000,-2.867444e-001,-1.624136e+000,1.668299e+000,-9.537589e-002,5.015947e-001,1.130741e-001,4.244812e+000,5.082152e-001,-1.325342e+000,-4.280991e-001,4.705490e-001,6.926592e-002,-4.572587e-001,5.344144e-001,-2.554192e-002,3.093939e+000,6.639401e-001,-1.113581e+000,-1.192133e-001,4.011536e-001,7.011889e-001,2.052842e-001,9.880724e-001,1.807533e-002,4.690160e+000,8.576240e-001,-1.016063e+000,-1.038138e-001,-2.280391e-001,7.898918e-001,-1.127333e+001,2.074545e-001,5.388182e-001,1.364263e+000,4.660455e-001,-1.099582e+000,-2.228607e-001,1.332648e+000,5.135188e+000,1.653152e+000,1.417020e+000,-1.087532e-001,1.809275e+000,8.080874e-001,-1.064357e+000,-1.520775e-001,8.207368e-001,-1.323565e-003,-5.009523e+000,3.946298e-001,4.337902e-001,2.593198e+000,6.719172e-001,-1.278702e+000,-3.512866e-001,-4.511055e-001,3.895760e-001,-2.429672e-001,4.270577e-001,1.135348e-001,3.719130e+000,4.998867e-001,-1.580069e+000,-7.095475e-001,-3.198904e-001,1.715748e+000,-1.185915e+000,4.523161e-001,-1.026159e-002,7.927188e-001,5.538350e-001,-9.474023e-001,1.173703e-001,4.881381e-001,-2.618684e+000,3.251661e+000,1.213931e+000,-1.736274e-002,8.000768e+000,1.025998e+000,-1.129091e+000,-3.287694e-001,-3.524077e-001,3.352892e+000,-1.416073e+001,-8.485617e-001,6.560766e-001,-2.820937e+000,3.111303e-001,-1.030884e+000,-1.137581e-001,1.109855e+000,8.082276e+000,1.519214e+000,2.112433e+000,-1.592299e-001,3.675905e+000,8.703367e-001,-1.075192e+000,-1.627166e-001,3.514910e-001,1.168164e+000,-4.255822e+000,-6.015348e-001,6.265776e-001,2.884818e+000,6.548384e-001,-1.316017e+000,-3.889652e-001,-5.030854e-001,4.488704e-001,-3.186800e-001,4.570763e-001,8.909201e-002,3.659274e+000,5.011746e-001,-1.731876e+000,-8.493806e-001,1.194871e-001,2.002781e+000,-2.006547e+000,4.872233e-001,-2.854606e-002,2.662137e-001,4.611629e-001,-9.273680e-001,1.380954e-001,-3.302179e-001,-3.553265e+000,4.633345e+000,9.696729e-001,8.799775e-002,8.291129e+000,1.094451e+000,-1.099377e+000,-3.325392e-001,2.501063e-001,2.613712e+000,-1.328142e+001,-5.579527e-001,4.992081e-001,-3.504402e+000,3.022924e-001,-1.048420e+000,-1.227773e-001,5.845373e-001,1.105869e+001,3.813151e-002,1.330409e+000,1.978131e-002,3.959430e+000,8.396439e-001,-1.063233e+000,-1.560639e-001,2.840033e-001,8.751565e-001,-3.411820e+000,-1.436564e-001,5.846580e-001,2.899292e+000,6.799095e-001,-1.376715e+000,-4.541567e-001,-1.445491e+000,1.569898e+000,-1.390627e-001,5.558270e-001,4.109877e-002,3.349451e+000,5.516123e-001,-1.953391e+000,-1.035869e+000,1.690563e+000,-1.964690e-001,-7.787096e-001,5.799605e-001,2.945626e-002,4.217906e-002,2.451373e-001,-1.012422e+000,7.136451e-002,-1.862534e+000,-7.228653e-001,1.947997e-001,2.091805e-001,6.399233e-002,7.928994e+000,1.290733e+000,-9.706708e-001,-2.880950e-001,1.107797e+000,-2.731734e+000,-8.445995e+000,4.296774e-001,5.117648e-001,-3.824277e+000,1.761207e-001,-1.110611e+000,-1.789409e-001,2.108488e-001,2.071430e+001,-1.763174e+000,9.554695e-002,-2.943103e-002,3.422079e+000,8.815496e-001,-1.048334e+000,-1.614087e-001,2.475184e-001,2.146938e-002,-2.983901e+000,2.538224e-001,5.601370e-001,2.461925e+000,6.777394e-001,-1.393719e+000,-5.002724e-001,-2.408940e+000,2.680983e+000,-1.362825e-001,7.395067e-001,-3.300343e-006,3.260889e+000,8.132057e-001,-2.128663e+000,-1.151182e+000,2.923026e+000,-1.931838e+000,-4.426170e-001,2.309983e-001,-5.485890e-003,3.279529e-001,-2.229467e-001,-1.618022e+000,-3.766490e-001,-3.163544e+000,1.611608e+000,-3.967476e-001,3.933680e-001,3.006742e-001,6.835177e+000,1.613765e+000,-5.669064e-001,-1.481749e-001,2.071817e+000,-8.157422e+000,-5.988088e+000,2.387202e-001,1.447191e-001,-4.296385e+000,5.011258e-002,-1.241724e+000,-2.519348e-001,-1.908609e-001,2.952235e+001,-3.333660e+000,-1.837651e-002,1.022249e-001,2.929320e+000,8.867262e-001,-1.021670e+000,-1.667327e-001,1.789771e-001,-2.178108e-003,-2.641572e+000,-5.641484e-002,5.303758e-001,2.138196e+000,6.780350e-001,-1.669332e+000,-7.588708e-001,-2.993557e+000,3.178760e+000,-8.066442e-002,6.544672e-001,-8.089880e-006,2.628924e+000,9.001272e-001,-1.755806e+000,-8.735348e-001,3.258881e+000,-2.504785e+000,-3.300791e-001,1.180565e-001,-9.315982e-003,1.785154e+000,-3.205824e-001,-3.720277e+000,-1.733350e+000,-3.332272e+000,1.515869e+000,1.734218e-001,8.011956e-001,1.995440e-001,3.817666e+000,1.638502e+000,4.724641e-001,3.209828e-001,2.051443e+000,-5.105574e+000,-6.509139e+000,-4.232041e-001,2.598931e-001,-2.151756e+000,-3.493910e-003,-1.525600e+000,-4.897606e-001,-9.891121e-002,2.346818e+001,-2.278152e+000,1.681219e-001,-4.469389e-002,1.051000e+000,9.294666e-001,-9.908649e-001,-2.008182e-001,1.605143e-001,-2.463113e-003,-2.477349e+000,-1.218647e-001,4.750121e-001,1.460813e+000,6.661364e-001,-2.122119e+000,-1.125475e+000,-3.066599e+000,3.145078e+000,-5.411593e-002,5.133628e-001,-7.823408e-006,2.268448e+000,9.001416e-001,-1.528158e+000,-9.370249e-001,2.567559e+000,-1.591439e+000,-3.634460e-001,1.763256e-001,1.119624e-003,1.811848e+000,-2.637929e-001,-6.524387e+000,-2.673507e+000,-2.940472e+000,-6.025609e-001,7.852067e-001,1.073499e+000,-3.540435e-002,3.517416e+000,1.490466e+000,8.886026e-001,-9.681828e-002,1.430554e+000,4.993717e+000,-6.071355e+000,-6.053986e-001,5.092997e-001,-1.273010e+000,7.491329e-002,-1.481997e+000,-5.897282e-001,2.659264e-001,1.267239e+000,-5.741291e-001,5.983011e-002,-2.217312e-001,-3.016452e-001,9.260830e-001,-1.010943e+000,-2.075134e-001,5.066749e-002,1.470708e+001,-3.780501e+000,7.253223e-002,4.045458e-001,1.320164e+000,6.559925e-001,-1.129907e+000,-1.884011e-001,-8.047670e+000,9.035776e+000,-5.539419e-002,8.823349e-001,3.197135e-002,4.839388e+000,5.042822e-001,-1.133821e+000,-1.510781e-001,3.362822e+000,-2.453381e+000,-1.463925e-001,4.728708e-001,5.958140e-002,7.636300e+000,4.805162e-001,-1.176518e+000,-3.549902e-001,1.729044e+000,-2.160966e-001,-5.075865e-001,1.675584e+000,-8.906902e-002,-5.386842e+000,5.452218e-001,-1.043563e+000,-7.520975e-002,8.750644e-001,2.510518e+000,7.584882e-003,9.361250e-001,7.889083e-002,6.066644e+000,5.813108e-001,-1.081304e+000,-2.222253e-001,2.517638e+000,-4.453820e+000,-8.663691e+000,8.662558e-001,-4.802657e-002,-8.965449e-001,4.886656e-001,-1.083774e+000,-1.375469e-001,1.685818e+000,5.631120e+000,-3.100752e+000,4.045941e-001,2.346895e-002,3.390321e+000,5.008309e-001,-1.143158e+000,-2.058334e-001,-9.660198e+000,1.062394e+001,-4.434119e-002,8.607615e-001,3.177325e-002,4.416481e+000,5.918162e-001,-1.146773e+000,-1.727385e-001,4.626048e+000,-4.684602e+000,-8.307137e-002,1.619616e-001,1.484866e-001,7.572868e+000,2.681126e-001,-1.151324e+000,-3.099303e-001,4.125596e-001,2.340752e+000,-4.214444e-001,1.987375e+000,-1.913410e-001,-3.845978e+000,1.337311e+000,-1.034258e+000,-7.778759e-003,7.050094e-001,-8.036369e-001,3.138570e-001,2.469452e-001,3.559970e-001,7.485917e+000,4.790329e-002,-1.096568e+000,-2.673169e-001,2.575654e+000,-8.057121e-001,-8.884928e+000,1.416170e+000,-2.091315e-001,-1.543494e+000,1.065445e+000,-1.083304e+000,-1.528265e-001,1.697727e+000,2.503702e+000,-2.885296e+000,-1.298500e-001,1.548870e-001,2.479652e+000,5.066496e-001,-1.165736e+000,-2.329945e-001,-5.967964e+000,6.705959e+000,-5.931355e-002,7.485638e-001,3.913878e-002,4.221591e+000,6.183926e-001,-1.212422e+000,-2.545910e-001,2.418626e+000,-2.266104e+000,-1.102014e-001,1.363887e-002,1.055411e-001,5.648062e+000,4.557412e-001,-1.070436e+000,-2.163341e-001,7.098718e-001,7.843075e-001,-4.323930e-001,2.109823e+000,-9.589700e-002,-1.985193e-001,1.060428e+000,-1.104879e+000,-3.013622e-002,2.976276e-002,1.069707e+000,1.410000e-001,-4.880020e-001,4.452288e-001,6.418590e+000,3.195986e-001,-1.048969e+000,-2.655317e-001,2.689426e+000,-3.941038e+000,-9.506461e+000,1.837119e+000,-1.892124e-001,-1.562146e+000,9.043414e-001,-1.106145e+000,-1.601642e-001,1.544544e+000,7.388492e+000,-2.924600e+000,-4.328453e-001,1.763161e-001,2.523111e+000,5.851902e-001,-1.203666e+000,-2.776587e-001,-2.084286e+000,2.450840e+000,-8.746613e-002,5.258507e-001,7.983316e-002,3.860055e+000,5.486167e-001,-1.340448e+000,-4.230590e-001,3.462849e-001,4.707607e-001,-2.512626e-001,1.530746e-001,2.724218e-002,3.035216e+000,5.876133e-001,-1.014554e+000,-1.168790e-001,9.477794e-001,-1.061218e+000,-4.196730e-001,2.058832e+000,-5.989624e-002,3.058168e+000,9.763861e-001,-1.137388e+000,-9.854030e-002,-2.984893e-001,3.647820e+000,-6.585571e-001,-1.479180e+000,6.102932e-001,3.265914e+000,3.480333e-001,-1.021816e+000,-2.344957e-001,2.463671e+000,-7.240685e+000,-8.862697e+000,2.514058e+000,-2.122768e-001,-3.313968e-002,9.028136e-001,-1.126581e+000,-1.874347e-001,1.454154e+000,1.034398e+001,-3.237393e+000,-8.654927e-001,2.457248e-001,1.845769e+000,6.002482e-001,-1.263727e+000,-3.439354e-001,-1.786388e-001,3.980166e-001,-3.349517e-001,3.825166e-001,1.029225e-001,3.331096e+000,4.998955e-001,-1.530010e+000,-6.879698e-001,2.380415e-001,1.608216e+000,-1.682679e+000,3.546360e-001,-3.915220e-003,4.517655e-001,5.128605e-001,-9.685659e-001,9.480403e-002,6.076844e-002,-3.217561e+000,4.568074e+000,1.069299e+000,2.083638e-002,7.301088e+000,1.072165e+000,-1.113925e+000,-3.112382e-001,3.954133e-001,5.105907e+000,-1.456866e+001,-4.917378e-001,5.289909e-001,-2.678374e+000,3.014709e-001,-1.046864e+000,-1.215754e-001,1.778308e+000,4.661489e+000,2.565583e-001,1.353680e+000,-1.175767e-001,3.415972e+000,8.457746e-001,-1.104480e+000,-1.940913e-001,1.343668e+000,-1.759206e-003,-5.009204e+000,-4.186951e-001,3.125710e-001,1.628183e+000,6.720408e-001,-1.286902e+000,-3.781238e-001,-8.977253e-002,3.545393e-001,-4.866515e-001,3.843664e-001,8.281675e-002,3.122231e+000,5.046991e-001,-1.712597e+000,-8.549112e-001,4.809286e-001,1.515398e+000,-2.212211e+000,2.539029e-001,2.335997e-002,-6.089466e-002,4.268444e-001,-8.807283e-001,1.646097e-001,-4.437898e-001,-3.188247e+000,5.984417e+000,1.334779e+000,-4.026975e-002,7.546431e+000,1.175751e+000,-1.147253e+000,-3.538199e-001,6.101836e-001,4.437780e+000,-1.559813e+001,-1.103222e+000,6.242039e-001,-3.091472e+000,2.174290e-001,-1.038230e+000,-1.213475e-001,1.547505e+000,5.893176e+000,1.368738e+000,1.663127e+000,-1.377130e-001,3.185279e+000,8.736453e-001,-1.101026e+000,-1.874907e-001,1.272667e+000,3.596524e+000,-5.007243e+000,-6.352483e-001,3.048985e-001,1.931613e+000,6.788844e-001,-1.342753e+000,-4.384971e-001,-1.213491e+000,1.621399e+000,-1.551441e-001,5.614218e-001,2.591739e-002,2.958967e+000,5.782132e-001,-1.937684e+000,-1.066019e+000,1.913336e+000,-7.347719e-001,-5.916167e-001,1.587590e-001,1.092568e-001,-6.275002e-001,1.599071e-001,-9.302391e-001,1.486187e-001,-1.603835e+000,1.783713e-001,1.100461e+000,1.174181e+000,-1.602361e-001,7.868331e+000,1.468971e+000,-1.053631e+000,-3.727050e-001,1.114117e+000,-9.603286e-001,-1.062469e+001,-1.162140e+000,7.952797e-001,-4.478765e+000,-4.440862e-002,-1.083629e+000,-1.261405e-001,1.229344e+000,1.127825e+001,1.319010e-001,1.624729e+000,-2.825898e-001,3.661082e+000,1.036911e+000,-1.093950e+000,-2.067455e-001,1.258035e+000,7.548645e+000,-4.598387e+000,-8.944932e-001,3.292634e-001,1.311304e+000,6.291871e-001,-1.385867e+000,-5.068139e-001,-1.486490e+000,1.969049e+000,-1.698025e-001,6.629167e-001,-5.289365e-006,2.760315e+000,8.644368e-001,-2.107367e+000,-1.175639e+000,2.313241e+000,-1.001653e+000,-4.843139e-001,1.124485e-001,3.901494e-005,-3.502469e-001,-3.204780e-001,-1.475244e+000,-2.833055e-001,-2.085824e+000,1.192563e+000,-7.645200e-001,8.380081e-001,2.203580e-001,7.157885e+000,1.753702e+000,-6.644372e-001,-2.549735e-001,1.600273e+000,-8.589034e+000,-6.144718e+000,-7.599731e-001,2.898370e-001,-5.770923e+000,-9.656242e-002,-1.211687e+000,-1.653494e-001,8.393400e-001,2.792988e+001,-3.395461e+000,9.933752e-001,-3.976877e-002,3.776659e+000,9.546526e-001,-1.063757e+000,-2.037563e-001,1.117207e+000,-1.252806e-003,-3.332330e+000,-6.971409e-001,3.388719e-001,1.311398e+000,6.635171e-001,-1.678889e+000,-7.992295e-001,-2.421687e+000,2.871029e+000,-7.662842e-002,6.046208e-001,-7.598099e-006,2.002314e+000,9.001307e-001,-1.692144e+000,-8.804250e-001,3.060895e+000,-2.000009e+000,-3.183563e-001,8.385862e-002,-6.326713e-003,1.206639e+000,-3.369967e-001,-3.676795e+000,-1.719207e+000,-2.534697e+000,1.005285e+000,1.550407e-001,1.072910e+000,1.318094e-001,3.717018e+000,1.689191e+000,5.424542e-001,3.263528e-001,1.551055e+000,-3.841058e+000,-6.598996e+000,-1.201779e+000,3.530669e-001,-2.542945e+000,-6.482523e-002,-1.553849e+000,-4.576860e-001,9.324676e-001,1.950982e+001,-2.344516e+000,1.121020e+000,-1.221537e-001,7.285496e-001,9.582816e-001,-1.020650e+000,-2.215797e-001,1.009774e+000,-2.056855e-003,-2.740338e+000,-8.122355e-001,3.328967e-001,8.982766e-001,6.594676e-001,-2.247360e+000,-1.221267e+000,-3.072346e+000,3.385139e+000,-4.387559e-002,5.084887e-001,-7.418833e-006,1.750107e+000,9.001401e-001,-1.248499e+000,-8.442718e-001,3.062611e+000,-2.020314e+000,-2.815341e-001,5.254745e-002,3.345008e-003,1.433225e+000,-2.835911e-001,-7.004119e+000,-2.927978e+000,-2.649852e+000,7.971894e-001,5.466893e-001,1.442667e+000,-6.063912e-002,2.806194e+000,1.547429e+000,1.434882e+000,9.114639e-002,1.170089e+000,3.512808e-002,-5.861915e+000,-1.411843e+000,5.400486e-001,-7.746522e-001,2.386984e-002,-1.559053e+000,-5.502302e-001,1.200396e+000,1.347741e+001,-2.344397e+000,8.868907e-001,-3.292661e-001,-1.362105e+000,9.217826e-001,-1.044436e+000,-2.360719e-001,7.054471e-001,-2.904518e-003,-2.092829e+000,-5.119668e-001,4.174861e-001,9.687435e-001,6.588427e-001];
armory_renderpath_HosekWilkieData.datasetRGBRad2 = [1.590330e+000,1.355401e+000,1.151412e+000,1.359116e+001,5.857714e+000,8.090833e+000,1.552540e+000,1.510040e+000,1.276413e-001,1.604643e+001,5.912162e+000,8.350009e+000,1.470871e+000,1.880464e+000,-1.865398e+000,2.030808e+001,5.471461e+000,9.109834e+000,1.356563e+000,2.373866e+000,-4.653245e+000,2.570922e+001,5.686009e+000,1.009480e+001,1.244232e+000,2.851519e+000,-7.130942e+000,2.993449e+001,6.382120e+000,1.114578e+001,1.173693e+000,3.120604e+000,-8.491886e+000,3.187393e+001,7.290615e+000,1.180066e+001,1.091845e+000,3.368888e+000,-9.722083e+000,3.268508e+001,1.032424e+001,1.236508e+001,9.858985e-001,3.500541e+000,-1.026328e+001,3.092956e+001,1.610881e+001,1.331222e+001,8.864993e-001,3.172888e+000,-8.687550e+000,2.362161e+001,2.621851e+001,1.474967e+001,7.946973e-001,2.189355e+000,-4.207953e+000,9.399091e+000,4.062849e+001,1.681753e+001,1.711696e+000,1.657311e+000,9.328021e-001,1.317880e+001,1.506751e+001,1.863556e+001,1.666968e+000,1.849993e+000,-2.088601e-001,1.586653e+001,1.486880e+001,1.940719e+001,1.584846e+000,2.170022e+000,-2.019597e+000,1.970826e+001,1.490684e+001,2.045055e+001,1.469412e+000,2.524017e+000,-4.197267e+000,2.365249e+001,1.664588e+001,2.134477e+001,1.369714e+000,2.843548e+000,-6.059031e+000,2.634993e+001,1.881361e+001,2.232186e+001,1.310477e+000,2.984444e+000,-6.831686e+000,2.682340e+001,2.123267e+001,2.259755e+001,1.222552e+000,3.176523e+000,-7.731496e+000,2.671760e+001,2.484358e+001,2.336863e+001,1.115781e+000,3.130635e+000,-7.581744e+000,2.336531e+001,3.171048e+001,2.413859e+001,1.013181e+000,2.699342e+000,-5.602709e+000,1.500158e+001,4.217613e+001,2.515957e+001,8.976323e-001,1.726948e+000,-1.296120e+000,1.183675e+000,5.503215e+001,2.643066e+001];
armory_renderpath_HosekWilkieData.datasetRGB3 = [-1.372629e+000,-4.905585e-001,-4.100789e+001,4.122169e+001,-7.389360e-003,4.839359e-001,6.474757e-003,3.471755e+000,5.092936e-001,-1.523025e+000,-6.497084e-001,6.249857e+000,-5.662543e+000,-1.908402e-002,5.512810e-001,-2.181049e-005,2.507663e+000,4.339598e-001,-1.035567e+000,-7.478740e-002,9.221030e-001,-2.140047e+000,-2.374146e-002,3.795517e-001,-1.769134e-002,7.479831e+000,7.729303e-001,-1.271086e+000,-5.588190e-001,6.908023e-001,2.096832e+000,-2.453967e-001,1.410648e+000,4.475036e-002,-4.719115e+000,5.741186e-001,-9.712598e-001,-7.033926e-002,9.167274e-001,-9.502097e-001,3.004684e-001,4.547054e-001,-5.929017e-002,5.266196e+000,7.204135e-001,-1.087457e+000,-1.888896e-001,8.156686e-001,3.101712e-001,-2.155419e+000,1.422205e+000,9.692261e-002,3.122404e+000,4.999430e-001,-1.425280e+000,-5.413508e-001,-3.454883e+001,3.481142e+001,-8.686975e-003,4.914268e-001,-2.479243e-006,3.239879e+000,6.094201e-001,-1.688557e+000,-8.070865e-001,7.018459e+000,-6.244574e+000,-2.149341e-002,3.993971e-001,1.252502e-002,1.630662e+000,1.097860e-001,-8.664152e-001,7.869125e-002,-5.236535e-001,-1.218960e+000,-2.059093e-002,6.684898e-001,-5.584112e-002,8.602299e+000,1.410496e+000,-1.319763e+000,-5.985323e-001,1.253918e+000,1.914706e+000,-3.216739e-001,9.011213e-001,1.324845e-001,-5.252749e+000,6.231252e-002,-9.706008e-001,-5.914059e-002,5.693150e-001,-1.175362e+000,5.221644e-001,7.518213e-001,-8.247655e-002,5.875635e+000,9.850863e-001,-1.085330e+000,-1.956105e-001,8.019605e-001,5.338101e-001,-3.423464e+000,1.110444e+000,1.507923e-001,2.864942e+000,4.999481e-001,-1.431967e+000,-5.478935e-001,-3.286288e+001,3.305288e+001,-8.380797e-003,4.772050e-001,-3.044274e-006,3.289973e+000,5.976303e-001,-1.801361e+000,-9.315889e-001,5.391756e+000,-4.588592e+000,-2.040076e-002,4.144684e-001,1.814534e-002,1.051795e+000,1.145651e-001,-7.905357e-001,1.451332e-001,-1.605661e-001,-1.592174e+000,4.561348e-004,3.380323e-001,-7.770275e-002,8.775384e+000,1.489512e+000,-1.308575e+000,-5.539232e-001,9.184133e-001,2.011479e+000,-3.842472e-001,1.432274e+000,1.637153e-001,-4.408856e+000,5.272957e-002,-9.829872e-001,-8.183048e-002,4.464556e-001,-1.442716e+000,1.029641e+000,-6.991617e-002,8.702356e-003,5.706417e+000,9.116452e-001,-1.087130e+000,-2.038013e-001,7.260801e-001,9.164376e-001,-5.006183e+000,1.511271e+000,1.257134e-001,2.715439e+000,6.201652e-001,-1.448662e+000,-5.799075e-001,-2.833268e+001,2.858023e+001,-9.134061e-003,4.404783e-001,-2.709026e-006,3.029357e+000,5.540071e-001,-2.061772e+000,-1.145190e+000,7.918478e+000,-7.212525e+000,-2.020760e-002,2.962715e-001,4.689670e-002,8.517209e-001,2.334587e-001,-6.413755e-001,1.780425e-001,-2.412919e+000,1.064484e+000,-1.949986e-002,6.769741e-001,-1.752760e-001,7.262714e+000,1.325869e+000,-1.304871e+000,-3.975581e-001,1.219002e+000,7.285178e-001,-2.710105e-001,7.779727e-001,3.247139e-001,-8.818168e-001,1.839517e-001,-1.001104e+000,-1.994801e-001,3.676742e-001,-1.409737e+000,2.901555e-001,2.506940e-001,2.468899e-003,3.398923e+000,8.584645e-001,-1.111552e+000,-2.487204e-001,7.410842e-001,1.703749e+000,-5.007855e+000,1.057763e+000,1.354511e-001,2.088715e+000,6.600013e-001,-1.547227e+000,-6.679466e-001,-1.861465e+001,1.884045e+001,-1.242210e-002,4.157339e-001,-2.432805e-006,2.812423e+000,5.446957e-001,-2.043890e+000,-1.149081e+000,2.304118e+000,-1.715757e+000,-2.433628e-002,2.816836e-001,7.185458e-002,1.064860e+000,2.706789e-001,-9.040720e-001,-8.274472e-002,-2.555676e-001,-6.326215e-001,-2.770880e-002,6.676024e-001,-2.513532e-001,5.903839e+000,1.241452e+000,-1.000013e+000,-1.010774e-001,3.699166e-001,8.774526e-001,-3.042007e-001,6.951053e-001,4.361813e-001,6.793421e-001,2.573892e-001,-1.171332e+000,-3.768188e-001,3.701377e-001,-1.470757e+000,5.525942e-001,2.991456e-002,1.581823e-002,2.365233e+000,8.214514e-001,-1.068667e+000,-2.326330e-001,6.725059e-001,2.243733e+000,-4.614370e+000,1.033677e+000,1.376291e-001,2.013334e+000,6.865304e-001,-1.592991e+000,-7.246948e-001,-2.598204e+001,2.621960e+001,-8.365176e-003,4.207571e-001,-2.742772e-006,2.623735e+000,5.873190e-001,-2.271349e+000,-1.280884e+000,6.308739e+000,-5.758350e+000,-1.977049e-002,3.671835e-001,6.698038e-002,1.150597e+000,1.759218e-001,-6.368620e-001,-7.436052e-003,-2.230026e+000,1.640997e+000,-1.548497e-002,3.145331e-001,-2.492644e-001,5.083843e+000,1.260215e+000,-1.177925e+000,-9.628114e-002,3.051152e-001,-3.749544e-002,-2.713209e-001,1.164226e+000,4.559969e-001,2.175429e+000,2.874284e-001,-1.078500e+000,-3.801779e-001,4.788906e-001,-4.795969e-001,5.977621e-001,-4.488535e-001,3.386874e-002,1.538143e+000,8.062054e-001,-1.108028e+000,-2.596892e-001,5.162202e-001,1.557081e+000,-4.265039e+000,1.182535e+000,1.563762e-001,2.095084e+000,6.883383e-001,-1.668427e+000,-7.908511e-001,-2.779690e+001,2.799746e+001,-7.186935e-003,3.757766e-001,-3.326858e-006,2.563421e+000,5.439687e-001,-2.156175e+000,-1.220004e+000,3.585732e+000,-3.235988e+000,-1.086239e-002,1.846143e-001,1.046017e-001,1.234427e+000,2.842191e-001,-1.117051e+000,-4.101627e-001,-8.463730e-001,7.671472e-001,-2.226609e-002,8.574943e-001,-3.434124e-001,4.475715e+000,1.154824e+000,-7.444840e-001,2.312078e-001,-5.393724e-001,1.574213e-001,-1.763914e-001,2.751692e-001,5.564200e-001,2.217672e+000,3.483932e-001,-1.273036e+000,-5.275562e-001,4.902512e-001,-4.498436e-002,4.339366e-001,2.386682e-001,2.380879e-002,1.413444e+000,7.855923e-001,-1.084192e+000,-2.936753e-001,4.719432e-001,1.384436e+000,-3.257789e+000,6.119543e-001,1.681884e-001,1.650441e+000,6.936631e-001,-1.848490e+000,-9.512670e-001,-3.005251e+001,3.024315e+001,-5.635304e-003,3.447780e-001,-2.782999e-006,2.309422e+000,5.643559e-001,-2.300008e+000,-1.252335e+000,-1.218876e+000,1.493730e+000,-6.107100e-003,7.974860e-002,1.023449e-001,1.505934e+000,2.360948e-001,-1.483705e+000,-8.547575e-001,-7.797146e-001,6.447971e-001,-2.678052e-002,1.091263e+000,-3.344889e-001,3.830416e+000,1.189425e+000,-5.348005e-001,3.982733e-001,-4.071573e-001,3.265569e-001,-8.658789e-002,-2.370892e-001,5.369097e-001,1.478279e+000,3.143303e-001,-1.320401e+000,-6.043247e-001,3.019196e-001,-7.732911e-002,4.768381e-001,6.745764e-001,3.694098e-002,1.158234e+000,8.169056e-001,-1.101040e+000,-3.420019e-001,3.775661e-001,1.769338e+000,-2.990515e+000,1.649529e-001,1.970125e-001,1.453355e+000,6.759757e-001,-2.251946e+000,-1.229349e+000,-3.271808e+001,3.283114e+001,-4.252027e-003,3.372289e-001,-3.001937e-006,2.154046e+000,5.842674e-001,-1.867834e+000,-9.531252e-001,-1.229365e+001,1.269149e+001,-6.844772e-003,1.185107e-001,7.539587e-002,1.846381e+000,1.899412e-001,-3.398629e+000,-2.180862e+000,2.335213e+000,-3.382823e+000,-8.613985e-003,8.431602e-001,-2.393567e-001,3.112460e+000,1.218556e+000,5.708381e-001,9.406030e-001,-6.890113e-001,2.746233e+000,-5.772068e-002,1.096005e-001,3.491978e-001,7.281453e-001,3.212049e-001,-1.705909e+000,-8.517224e-001,1.131160e-001,-2.141434e+000,4.274043e-001,3.397600e-001,1.786490e-001,9.026101e-001,7.882800e-001,-1.012865e+000,-3.495551e-001,3.369038e-001,3.724205e+000,-3.089586e+000,1.266964e-001,1.461790e-001,1.170199e+000,6.931052e-001,-2.890318e+000,-1.665573e+000,-3.493756e+001,3.500369e+001,-2.984251e-003,2.622419e-001,-4.259360e-006,1.947681e+000,6.905752e-001,-1.956022e+000,-1.062900e+000,-1.919714e+001,1.975164e+001,-8.865396e-003,2.165540e-001,5.475637e-002,1.761134e+000,3.164249e-003,-5.612198e+000,-3.101371e+000,4.098034e+000,-6.144001e+000,9.944958e-003,2.905472e-001,-1.707110e-001,3.199107e+000,1.337660e+000,8.353756e-001,4.855943e-001,-1.243589e+000,5.147385e+000,-7.013963e-002,9.380410e-001,2.335714e-001,1.727744e-001,2.802696e-001,-1.524329e+000,-7.388547e-001,3.259025e-001,-4.050634e+000,4.058549e-001,-2.591384e-001,1.898299e-001,3.556071e-001,7.884126e-001,-1.070371e+000,-4.207858e-001,1.739862e-001,5.293410e+000,-3.136757e+000,2.323856e-001,1.673706e-001,1.007227e+000,6.844287e-001,-1.341720e+000,-4.834889e-001,-4.633447e+001,4.682148e+001,-6.137296e-003,4.599216e-001,7.047323e-003,2.895798e+000,4.999398e-001,-1.529104e+000,-6.498631e-001,1.534103e+001,-1.450675e+001,-1.531439e-002,3.280082e-001,1.682926e-002,1.901587e+000,5.013227e-001,-1.014776e+000,-1.454495e-001,-4.071085e+000,2.954982e+000,-2.630348e-002,5.681531e-001,-3.016505e-002,6.773854e+000,5.003504e-001,-1.172413e+000,-4.026320e-001,2.960428e+000,2.020710e-001,-2.004947e-001,9.375572e-001,5.998168e-002,-4.945934e+000,4.502898e-001,-9.898161e-001,-5.772814e-002,4.470024e-001,-5.786656e-001,1.158168e-001,3.468040e-001,-5.043360e-002,6.867947e+000,8.012363e-001,-1.085111e+000,-1.882675e-001,1.223748e+000,3.565495e-001,-3.688357e+000,5.653723e-001,6.727646e-002,2.690130e+000,4.999400e-001,-1.389119e+000,-5.290250e-001,-4.055774e+001,4.105972e+001,-7.062577e-003,4.560060e-001,-1.736334e-006,2.775512e+000,6.671455e-001,-1.584641e+000,-7.200619e-001,1.248067e+001,-1.156028e+001,-1.659568e-002,3.050029e-001,1.099895e-002,1.438927e+000,-2.138015e-002,-9.826068e-001,-8.887254e-002,-2.960031e+000,1.808816e+000,-2.478159e-002,6.035733e-001,-4.868441e-002,7.347705e+000,1.584739e+000,-1.150423e+000,-4.073793e-001,2.412991e+000,4.870840e-001,-2.337902e-001,8.295114e-001,1.129914e-001,-5.150045e+000,-9.016643e-002,-1.016933e+000,-6.311501e-002,5.218937e-001,-5.716430e-001,1.250993e-001,3.601524e-001,-5.497586e-002,7.060139e+000,1.018333e+000,-1.073151e+000,-1.845444e-001,1.155394e+000,3.004486e-001,-3.431711e+000,4.657031e-001,9.401223e-002,2.688620e+000,4.999544e-001,-1.391257e+000,-5.365815e-001,-4.255881e+001,4.299132e+001,-5.838466e-003,4.229134e-001,-2.760038e-006,2.775531e+000,6.234597e-001,-1.780062e+000,-9.228880e-001,1.376172e+001,-1.260946e+001,-1.507526e-002,3.117435e-001,2.205045e-002,6.093731e-001,3.463446e-002,-7.388169e-001,1.275670e-001,-3.999528e+000,2.223993e+000,-1.856853e-002,5.439310e-001,-8.834054e-002,8.037139e+000,1.645951e+000,-1.322387e+000,-5.320143e-001,2.659359e+000,1.086712e+000,-2.129712e-001,8.704649e-001,1.800315e-001,-4.967241e+000,-1.383720e-001,-9.378288e-001,-1.599895e-002,3.607555e-001,-1.980561e+000,3.791456e-001,1.212268e-001,-2.845992e-002,6.825542e+000,1.059139e+000,-1.100832e+000,-2.172313e-001,1.211561e+000,2.002721e+000,-5.010011e+000,5.717583e-001,6.777702e-002,2.160006e+000,5.676392e-001,-1.409373e+000,-5.708751e-001,-3.034974e+001,3.079809e+001,-7.280715e-003,3.723304e-001,-2.436279e-006,2.577348e+000,5.913377e-001,-1.954312e+000,-1.116510e+000,5.399148e+000,-4.299553e+000,-1.724739e-002,3.742824e-001,4.187077e-002,1.044883e-001,1.232727e-001,-6.772215e-001,2.001396e-001,-3.670523e-001,-1.014628e+000,-3.497152e-003,4.099858e-001,-1.584633e-001,7.750400e+000,1.514559e+000,-1.291600e+000,-4.977437e-001,9.641914e-001,1.562420e+000,-3.227782e-001,9.055427e-001,3.046444e-001,-3.385619e+000,9.546291e-003,-9.750857e-001,-8.770560e-002,9.054256e-001,-1.429236e+000,8.974777e-001,-1.217961e-001,-5.194608e-002,4.909409e+000,9.589153e-001,-1.088007e+000,-1.959301e-001,9.745799e-001,1.260761e+000,-5.008864e+000,7.271248e-001,1.096661e-001,2.717295e+000,6.340731e-001,-1.456050e+000,-6.223072e-001,-2.228088e+001,2.269604e+001,-9.340812e-003,4.118308e-001,-2.418083e-006,2.442117e+000,5.589638e-001,-2.176449e+000,-1.302416e+000,2.222836e+000,-1.222730e+000,-1.728051e-002,1.323513e-001,7.027731e-002,4.835745e-002,2.093351e-001,-5.789641e-001,2.215407e-001,2.142291e-001,-1.201725e+000,-1.185728e-002,8.122982e-001,-2.380420e-001,6.706841e+000,1.404146e+000,-1.307463e+000,-4.515174e-001,6.447827e-001,1.223841e+000,-2.902391e-001,4.986588e-001,4.073652e-001,-1.706696e+000,1.060885e-001,-9.698678e-001,-1.307094e-001,9.389347e-001,-1.522852e+000,7.768797e-001,-1.368595e-001,-3.857426e-002,3.676935e+000,8.980966e-001,-1.104349e+000,-2.380323e-001,1.047043e+000,1.865421e+000,-5.011664e+000,7.014954e-001,9.622701e-002,1.891360e+000,6.687354e-001,-1.502249e+000,-6.724523e-001,-2.888092e+001,2.930360e+001,-6.685766e-003,3.685464e-001,-2.469442e-006,2.310797e+000,5.566754e-001,-2.217125e+000,-1.364924e+000,4.048243e+000,-3.111333e+000,-1.317747e-002,1.921948e-001,8.627702e-002,1.981769e-003,2.213689e-001,-6.215757e-001,1.687995e-001,-5.949131e-001,-1.551293e-001,3.356129e-004,6.897657e-001,-2.855053e-001,6.271042e+000,1.363084e+000,-1.216317e+000,-3.489429e-001,7.566226e-001,5.409809e-001,-2.830843e-001,6.191825e-001,4.755163e-001,-9.131387e-001,1.383909e-001,-1.030437e+000,-2.034064e-001,8.335995e-001,-1.050947e+000,8.689093e-001,-3.672310e-001,-4.056183e-002,3.111269e+000,8.856842e-001,-1.078984e+000,-2.070549e-001,9.683145e-001,1.497022e+000,-5.007653e+000,7.702541e-001,1.285822e-001,2.225188e+000,6.587911e-001,-1.559291e+000,-7.374039e-001,-3.596311e+001,3.634470e+001,-4.667132e-003,3.277964e-001,-2.487945e-006,2.215652e+000,5.764681e-001,-2.356929e+000,-1.444755e+000,6.244526e+000,-5.540162e+000,-8.794510e-003,1.792100e-001,9.578517e-002,3.737676e-001,1.922194e-001,-6.589752e-001,-2.926910e-002,-1.831779e+000,1.869962e+000,-2.030095e-003,7.552089e-001,-3.168157e-001,4.632196e+000,1.294054e+000,-1.161046e+000,-1.472506e-001,6.494138e-001,-8.327174e-001,-2.320724e-001,3.391212e-001,5.269637e-001,9.376341e-001,2.458573e-001,-1.034427e+000,-3.062504e-001,8.975634e-001,3.203531e-001,8.565142e-001,-1.250162e-001,-4.094017e-002,1.861304e+000,8.223468e-001,-1.109954e+000,-2.740277e-001,1.063811e+000,7.077398e-001,-4.695734e+000,5.621696e-001,1.248956e-001,1.297723e+000,6.789720e-001,-1.788293e+000,-9.368751e-001,-4.382980e+001,4.424963e+001,-3.652530e-003,3.094331e-001,-2.810503e-006,1.904402e+000,5.861599e-001,-2.268206e+000,-1.312676e+000,2.863082e+000,-2.373727e+000,-5.144980e-003,1.711072e-001,9.316041e-002,9.309598e-001,1.791683e-001,-1.376966e+000,-7.418582e-001,-1.349589e+000,1.563419e+000,-3.124219e-003,6.967139e-001,-3.061887e-001,3.602731e+000,1.255669e+000,-6.017540e-001,2.815928e-001,5.424052e-001,-6.885450e-001,-1.620001e-001,2.980046e-001,4.995571e-001,7.371203e-001,2.812466e-001,-1.278853e+000,-5.245326e-001,7.870520e-001,3.125067e-001,7.748105e-001,-7.788581e-002,3.490956e-003,1.283748e+000,8.130190e-001,-1.050930e+000,-2.786331e-001,1.056344e+000,1.053002e+000,-4.047789e+000,4.432174e-001,1.169077e-001,9.532621e-001,6.806764e-001,-2.084927e+000,-1.203954e+000,-4.881638e+001,4.920160e+001,-2.896045e-003,2.882977e-001,-3.073517e-006,1.702211e+000,6.374180e-001,-2.328567e+000,-1.238023e+000,-1.891019e+000,2.451520e+000,-5.847581e-003,2.084702e-001,7.848130e-002,1.211048e+000,8.095008e-002,-2.634632e+000,-1.789460e+000,-1.370558e-001,-3.326435e-001,2.783737e-003,5.239451e-001,-2.548881e-001,2.896327e+000,1.324116e+000,6.882616e-002,5.997821e-001,1.535398e-001,1.375209e+000,-1.267285e-001,4.239743e-001,4.013122e-001,1.794675e-001,2.395382e-001,-1.430918e+000,-6.439041e-001,8.325980e-001,-1.705612e+000,7.236426e-001,-5.567593e-002,6.408718e-002,6.836524e-001,8.388887e-001,-1.037956e+000,-3.215402e-001,9.457349e-001,3.178114e+000,-4.152156e+000,2.230992e-001,1.156198e-001,7.606223e-001,6.656923e-001,-2.967314e+000,-1.728778e+000,-3.730988e+001,3.755578e+001,-2.588835e-003,2.927966e-001,-3.935038e-006,1.592161e+000,6.868694e-001,-2.123311e+000,-1.175148e+000,-1.314988e+001,1.386882e+001,-7.828537e-003,1.852026e-001,5.481038e-002,1.294309e+000,2.428177e-002,-5.443597e+000,-3.156344e+000,2.110838e+000,-3.421556e+000,1.181890e-002,1.196951e-001,-1.742902e-001,2.404353e+000,1.272805e+000,1.029898e+000,5.912521e-001,-3.983531e-001,3.286069e+000,-9.252065e-002,1.331381e+000,2.560642e-001,8.001754e-001,3.624178e-001,-1.547574e+000,-7.881604e-001,1.020902e+000,-2.897069e+000,5.213470e-001,-9.242315e-001,1.185594e-001,-1.150721e+000,7.317211e-001,-9.621043e-001,-1.991406e-001,6.531287e-001,3.925839e+000,-3.596904e+000,6.317332e-001,1.531334e-001,1.457846e+000,6.966285e-001];
armory_renderpath_HosekWilkieData.datasetRGBRad3 = [9.926518e-001,1.999494e+000,-4.136109e+000,1.856270e+001,1.351028e+001,1.390238e+001,9.634366e-001,2.119694e+000,-4.614523e+000,1.919701e+001,1.376644e+001,1.418731e+001,9.446537e-001,2.171610e+000,-4.915556e+000,1.918240e+001,1.537135e+001,1.400530e+001,9.073074e-001,2.330536e+000,-5.577596e+000,1.961615e+001,1.688365e+001,1.446955e+001,8.739124e-001,2.388682e+000,-5.842995e+000,1.923265e+001,1.887735e+001,1.485698e+001,8.563688e-001,2.391534e+000,-5.769133e+000,1.828709e+001,2.097209e+001,1.469587e+001,8.270533e-001,2.342790e+000,-5.558071e+000,1.684993e+001,2.356498e+001,1.505975e+001,7.908339e-001,2.190341e+000,-4.852571e+000,1.374862e+001,2.806846e+001,1.548444e+001,7.403619e-001,1.783998e+000,-2.983854e+000,7.622563e+000,3.507610e+001,1.615805e+001,6.840111e-001,1.154457e+000,-2.393830e-001,-7.896893e-001,4.282765e+001,1.779469e+001,1.168300e+000,1.860993e+000,-2.129074e+000,1.251952e+001,3.032499e+001,2.938716e+001,1.150338e+000,1.918813e+000,-2.413527e+000,1.274862e+001,3.087134e+001,2.951432e+001,1.114719e+000,1.964689e+000,-2.625423e+000,1.247837e+001,3.237949e+001,2.943596e+001,1.077948e+000,2.006292e+000,-2.846934e+000,1.190195e+001,3.459293e+001,2.937492e+001,1.035143e+000,1.986681e+000,-2.752584e+000,1.060972e+001,3.722185e+001,2.918594e+001,1.015992e+000,1.992054e+000,-2.812626e+000,1.001416e+001,3.847300e+001,2.924624e+001,9.756887e-001,1.939897e+000,-2.533281e+000,8.319176e+000,4.083907e+001,2.925586e+001,9.264164e-001,1.716454e+000,-1.597044e+000,4.739725e+000,4.507683e+001,2.878915e+001,8.595191e-001,1.346034e+000,-2.801895e-002,-6.582906e-001,5.017523e+001,2.852953e+001,7.754116e-001,7.709245e-001,2.200201e+000,-7.487661e+000,5.436622e+001,2.893432e+001];
armory_renderpath_HosekWilkieData.datasetsRGB = [armory_renderpath_HosekWilkieData.datasetRGB1,armory_renderpath_HosekWilkieData.datasetRGB2,armory_renderpath_HosekWilkieData.datasetRGB3];
armory_renderpath_HosekWilkieData.datasetsRGBRad = [armory_renderpath_HosekWilkieData.datasetRGBRad1,armory_renderpath_HosekWilkieData.datasetRGBRad2,armory_renderpath_HosekWilkieData.datasetRGBRad3];
armory_renderpath_Inc.superSample = 1.0;
armory_renderpath_Inc.pointIndex = 0;
armory_renderpath_Inc.spotIndex = 0;
armory_renderpath_NishitaData.lutHeightSteps = 128;
armory_renderpath_NishitaData.lutAngleSteps = 128;
armory_renderpath_NishitaData.jSteps = 8;
armory_renderpath_NishitaData.radiusAtmo = 6420.0;
armory_renderpath_NishitaData.radiusPlanet = 6360.0;
armory_renderpath_NishitaData.rayleighCoeff = new iron_math_Vec3(5.5e-6,13.0e-6,22.4e-6);
armory_renderpath_NishitaData.rayleighScale = 8e3;
armory_renderpath_NishitaData.mieCoeff = 2e-5;
armory_renderpath_NishitaData.mieScale = 1.2e3;
armory_renderpath_NishitaData.ozoneCoeff = new iron_math_Vec3(1.59051840791988e-6,0.00000096707041180970,0.00000007309568762914);
armory_renderpath_RenderPathCreator.setTargetMeshes = armory_renderpath_RenderPathDeferred.setTargetMeshes;
armory_renderpath_RenderPathCreator.drawMeshes = armory_renderpath_RenderPathDeferred.drawMeshes;
armory_trait_WalkNavigation.enabled = true;
armory_trait_WalkNavigation.keyUp = "w";
armory_trait_WalkNavigation.keyDown = "s";
armory_trait_WalkNavigation.keyLeft = "a";
armory_trait_WalkNavigation.keyRight = "d";
armory_trait_WalkNavigation.keyStrafeUp = "e";
armory_trait_WalkNavigation.keyStrafeDown = "q";
armory_trait_internal_UniformsManager.floatsRegistered = false;
armory_trait_internal_UniformsManager.floatsMap = new haxe_ds_ObjectMap();
armory_trait_internal_UniformsManager.vectorsRegistered = false;
armory_trait_internal_UniformsManager.vectorsMap = new haxe_ds_ObjectMap();
armory_trait_internal_UniformsManager.texturesRegistered = false;
armory_trait_internal_UniformsManager.texturesMap = new haxe_ds_ObjectMap();
armory_trait_internal_UniformsManager.sceneRemoveInitalized = false;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
iron_App.traitInits = [];
iron_App.traitUpdates = [];
iron_App.traitLateUpdates = [];
iron_App.traitRenders = [];
iron_App.traitRenders2D = [];
iron_App.pauseUpdates = false;
iron_App.lastw = -1;
iron_App.lasth = -1;
iron_Scene.uidCounter = 0;
iron_Scene.framePassed = true;
iron_data_ConstData.skydomeIndices = [261,8,7,258,5,4,265,12,11,257,2,156,262,9,8,259,6,5,179,12,265,0,3,2,263,10,9,260,7,6,1,4,3,264,11,10,6,17,16,179,23,12,3,14,13,10,21,20,7,18,17,4,15,14,11,22,21,8,19,18,5,16,15,12,23,22,2,13,156,9,20,19,16,27,26,23,34,33,13,24,156,20,31,30,17,28,27,179,34,23,14,25,24,21,32,31,18,29,28,15,26,25,22,33,32,19,30,29,29,40,39,26,37,36,33,44,43,30,41,40,27,38,37,34,45,44,24,35,156,31,42,41,28,39,38,179,45,34,25,36,35,32,43,42,39,50,49,179,56,45,36,47,46,43,54,53,40,51,50,37,48,47,44,55,54,41,52,51,38,49,48,45,56,55,35,46,156,42,53,52,52,63,62,49,60,59,56,67,66,46,57,156,53,64,63,50,61,60,179,67,56,47,58,57,54,65,64,51,62,61,48,59,58,55,66,65,62,73,72,59,70,69,66,77,76,63,74,73,60,71,70,67,78,77,57,68,156,64,75,74,61,72,71,179,78,67,58,69,68,65,76,75,75,86,85,72,83,82,179,89,78,69,80,79,76,87,86,73,84,83,70,81,80,77,88,87,74,85,84,71,82,81,78,89,88,68,79,156,85,96,95,82,93,92,89,100,99,79,90,156,86,97,96,83,94,93,179,100,89,80,91,90,87,98,97,84,95,94,81,92,91,88,99,98,98,109,108,95,106,105,92,103,102,99,110,109,96,107,106,93,104,103,100,111,110,90,101,156,97,108,107,94,105,104,179,111,100,91,102,101,101,112,156,108,119,118,105,116,115,179,122,111,102,113,112,109,120,119,106,117,116,103,114,113,110,121,120,107,118,117,104,115,114,111,122,121,121,132,131,118,129,128,115,126,125,122,133,132,112,123,156,119,130,129,116,127,126,179,133,122,113,124,123,120,131,130,117,128,127,114,125,124,124,135,134,131,142,141,128,139,138,125,136,135,132,143,142,129,140,139,126,137,136,133,144,143,123,134,156,130,141,140,127,138,137,179,144,133,144,155,154,134,145,156,141,152,151,138,149,148,179,155,144,135,146,145,142,153,152,139,150,149,136,147,146,143,154,153,140,151,150,137,148,147,147,159,158,154,166,165,151,163,162,148,160,159,155,167,166,145,157,156,152,164,163,149,161,160,179,167,155,146,158,157,153,165,164,150,162,161,179,178,167,158,169,168,165,176,175,162,173,172,159,170,169,166,177,176,163,174,173,160,171,170,167,178,177,157,168,156,164,175,174,161,172,171,171,183,182,178,190,189,168,180,156,175,187,186,172,184,183,179,190,178,169,181,180,176,188,187,173,185,184,170,182,181,177,189,188,174,186,185,182,193,192,189,200,199,186,197,196,183,194,193,190,201,200,180,191,156,187,198,197,184,195,194,179,201,190,181,192,191,188,199,198,185,196,195,195,206,205,179,212,201,192,203,202,199,210,209,196,207,206,193,204,203,200,211,210,197,208,207,194,205,204,201,212,211,191,202,156,198,209,208,205,216,215,212,223,222,202,213,156,209,220,219,206,217,216,179,223,212,203,214,213,210,221,220,207,218,217,204,215,214,211,222,221,208,219,218,218,229,228,215,226,225,222,233,232,219,230,229,216,227,226,223,234,233,213,224,156,220,231,230,217,228,227,179,234,223,214,225,224,221,232,231,228,239,238,179,245,234,225,236,235,232,243,242,229,240,239,226,237,236,233,244,243,230,241,240,227,238,237,234,245,244,224,235,156,231,242,241,241,252,251,238,249,248,245,256,255,235,246,156,242,253,252,239,250,249,179,256,245,236,247,246,243,254,253,240,251,250,237,248,247,244,255,254,251,260,259,248,1,0,255,264,263,252,261,260,249,258,1,256,265,264,246,257,156,253,262,261,250,259,258,179,265,256,247,0,257,254,263,262,261,7,260,258,4,1,265,11,264,262,8,261,259,5,258,0,2,257,263,9,262,260,6,259,1,3,0,264,10,263,6,16,5,3,13,2,10,20,9,7,17,6,4,14,3,11,21,10,8,18,7,5,15,4,12,22,11,9,19,8,16,26,15,23,33,22,20,30,19,17,27,16,14,24,13,21,31,20,18,28,17,15,25,14,22,32,21,19,29,18,29,39,28,26,36,25,33,43,32,30,40,29,27,37,26,34,44,33,31,41,30,28,38,27,25,35,24,32,42,31,39,49,38,36,46,35,43,53,42,40,50,39,37,47,36,44,54,43,41,51,40,38,48,37,45,55,44,42,52,41,52,62,51,49,59,48,56,66,55,53,63,52,50,60,49,47,57,46,54,64,53,51,61,50,48,58,47,55,65,54,62,72,61,59,69,58,66,76,65,63,73,62,60,70,59,67,77,66,64,74,63,61,71,60,58,68,57,65,75,64,75,85,74,72,82,71,69,79,68,76,86,75,73,83,72,70,80,69,77,87,76,74,84,73,71,81,70,78,88,77,85,95,84,82,92,81,89,99,88,86,96,85,83,93,82,80,90,79,87,97,86,84,94,83,81,91,80,88,98,87,98,108,97,95,105,94,92,102,91,99,109,98,96,106,95,93,103,92,100,110,99,97,107,96,94,104,93,91,101,90,108,118,107,105,115,104,102,112,101,109,119,108,106,116,105,103,113,102,110,120,109,107,117,106,104,114,103,111,121,110,121,131,120,118,128,117,115,125,114,122,132,121,119,129,118,116,126,115,113,123,112,120,130,119,117,127,116,114,124,113,124,134,123,131,141,130,128,138,127,125,135,124,132,142,131,129,139,128,126,136,125,133,143,132,130,140,129,127,137,126,144,154,143,141,151,140,138,148,137,135,145,134,142,152,141,139,149,138,136,146,135,143,153,142,140,150,139,137,147,136,147,158,146,154,165,153,151,162,150,148,159,147,155,166,154,152,163,151,149,160,148,146,157,145,153,164,152,150,161,149,158,168,157,165,175,164,162,172,161,159,169,158,166,176,165,163,173,162,160,170,159,167,177,166,164,174,163,161,171,160,171,182,170,178,189,177,175,186,174,172,183,171,169,180,168,176,187,175,173,184,172,170,181,169,177,188,176,174,185,173,182,192,181,189,199,188,186,196,185,183,193,182,190,200,189,187,197,186,184,194,183,181,191,180,188,198,187,185,195,184,195,205,194,192,202,191,199,209,198,196,206,195,193,203,192,200,210,199,197,207,196,194,204,193,201,211,200,198,208,197,205,215,204,212,222,211,209,219,208,206,216,205,203,213,202,210,220,209,207,217,206,204,214,203,211,221,210,208,218,207,218,228,217,215,225,214,222,232,221,219,229,218,216,226,215,223,233,222,220,230,219,217,227,216,214,224,213,221,231,220,228,238,227,225,235,224,232,242,231,229,239,228,226,236,225,233,243,232,230,240,229,227,237,226,234,244,233,231,241,230,241,251,240,238,248,237,245,255,244,242,252,241,239,249,238,236,246,235,243,253,242,240,250,239,237,247,236,244,254,243,251,259,250,248,0,247,255,263,254,252,260,251,249,1,248,256,264,255,253,261,252,250,258,249,247,257,246,254,262,253];
iron_data_ConstData.skydomePos = [0.0,0.5,0.86603,0.0,0.70711,0.70711,0.06699,0.25,0.96593,0.12941,0.48296,0.86603,0.18301,0.68301,0.70711,0.22414,0.83652,0.5,0.25,0.93301,0.25882,0.25882,0.96593,-0.0,0.25,0.93301,-0.25882,0.22414,0.83652,-0.5,0.18301,0.68301,-0.70711,0.12941,0.48296,-0.86603,0.06699,0.25,-0.96593,0.12941,0.22414,0.96593,0.25,0.43301,0.86603,0.35355,0.61237,0.70711,0.43301,0.75,0.5,0.48296,0.83652,0.25882,0.5,0.86603,-0.0,0.48296,0.83652,-0.25882,0.43301,0.75,-0.5,0.35355,0.61237,-0.70711,0.25,0.43301,-0.86603,0.12941,0.22414,-0.96593,0.18301,0.18301,0.96593,0.35355,0.35355,0.86603,0.5,0.5,0.70711,0.61237,0.61237,0.5,0.68301,0.68301,0.25882,0.70711,0.70711,-0.0,0.68301,0.68301,-0.25882,0.61237,0.61237,-0.5,0.5,0.5,-0.70711,0.35355,0.35355,-0.86603,0.18301,0.18301,-0.96593,0.22414,0.12941,0.96593,0.43301,0.25,0.86603,0.61237,0.35355,0.70711,0.75,0.43301,0.5,0.83652,0.48296,0.25882,0.86603,0.5,-0.0,0.83652,0.48296,-0.25882,0.75,0.43301,-0.5,0.61237,0.35355,-0.70711,0.43301,0.25,-0.86603,0.22414,0.12941,-0.96593,0.25,0.06699,0.96593,0.48296,0.12941,0.86603,0.68301,0.18301,0.70711,0.83652,0.22414,0.5,0.93301,0.25,0.25882,0.96593,0.25882,-0.0,0.93301,0.25,-0.25882,0.83652,0.22414,-0.5,0.68301,0.18301,-0.70711,0.48296,0.12941,-0.86603,0.25,0.06699,-0.96593,0.25882,-0.0,0.96593,0.5,-0.0,0.86603,0.70711,-0.0,0.70711,0.86603,0.0,0.5,0.96593,-0.0,0.25882,1.0,-0.0,-0.0,0.96593,-0.0,-0.25882,0.86603,-0.0,-0.5,0.70711,-0.0,-0.70711,0.5,-0.0,-0.86603,0.25882,-0.0,-0.96593,0.25,-0.06699,0.96593,0.48296,-0.12941,0.86603,0.68301,-0.18301,0.70711,0.83652,-0.22414,0.5,0.93301,-0.25,0.25882,0.96593,-0.25882,-0.0,0.93301,-0.25,-0.25882,0.83652,-0.22414,-0.5,0.68301,-0.18301,-0.70711,0.48296,-0.12941,-0.86603,0.25,-0.06699,-0.96593,0.22414,-0.12941,0.96593,0.43301,-0.25,0.86603,0.61237,-0.35355,0.70711,0.75,-0.43301,0.5,0.83652,-0.48296,0.25882,0.86603,-0.5,-0.0,0.83652,-0.48296,-0.25882,0.75,-0.43301,-0.5,0.61237,-0.35355,-0.70711,0.43301,-0.25,-0.86603,0.22414,-0.12941,-0.96593,0.18301,-0.18301,0.96593,0.35355,-0.35355,0.86603,0.5,-0.5,0.70711,0.61237,-0.61237,0.5,0.68301,-0.68301,0.25882,0.70711,-0.70711,-0.0,0.68301,-0.68301,-0.25882,0.61237,-0.61237,-0.5,0.5,-0.5,-0.70711,0.35355,-0.35355,-0.86603,0.18301,-0.18301,-0.96593,0.12941,-0.22414,0.96593,0.25,-0.43301,0.86603,0.35355,-0.61237,0.70711,0.43301,-0.75,0.5,0.48296,-0.83652,0.25882,0.5,-0.86603,-0.0,0.48296,-0.83652,-0.25882,0.43301,-0.75,-0.5,0.35355,-0.61237,-0.70711,0.25,-0.43301,-0.86603,0.12941,-0.22414,-0.96593,0.06699,-0.25,0.96593,0.12941,-0.48296,0.86603,0.18301,-0.68301,0.70711,0.22414,-0.83652,0.5,0.25,-0.93301,0.25882,0.25882,-0.96593,-0.0,0.25,-0.93301,-0.25882,0.22414,-0.83652,-0.5,0.18301,-0.68301,-0.70711,0.12941,-0.48296,-0.86603,0.06699,-0.25,-0.96593,0.0,-0.25882,0.96593,-0.0,-0.5,0.86603,0.0,-0.70711,0.70711,0.0,-0.86603,0.5,0.0,-0.96593,0.25882,-0.0,-1.0,-0.0,0.0,-0.96593,-0.25882,0.0,-0.86603,-0.5,0.0,-0.70711,-0.70711,0.0,-0.5,-0.86603,0.0,-0.25882,-0.96593,-0.06699,-0.25,0.96593,-0.12941,-0.48296,0.86603,-0.18301,-0.68301,0.70711,-0.22414,-0.83652,0.5,-0.25,-0.93301,0.25882,-0.25882,-0.96593,-0.0,-0.25,-0.93301,-0.25882,-0.22414,-0.83652,-0.5,-0.18301,-0.68301,-0.70711,-0.12941,-0.48296,-0.86603,-0.06699,-0.25,-0.96593,-0.12941,-0.22414,0.96593,-0.25,-0.43301,0.86603,-0.35355,-0.61237,0.70711,-0.43301,-0.75,0.5,-0.48296,-0.83652,0.25882,-0.5,-0.86603,-0.0,-0.48296,-0.83652,-0.25882,-0.43301,-0.75,-0.5,-0.35355,-0.61237,-0.70711,-0.25,-0.43301,-0.86603,-0.12941,-0.22414,-0.96593,-0.0,-0.0,1.0,-0.18301,-0.18301,0.96593,-0.35355,-0.35355,0.86603,-0.5,-0.5,0.70711,-0.61237,-0.61237,0.5,-0.68301,-0.68301,0.25882,-0.70711,-0.70711,-0.0,-0.68301,-0.68301,-0.25882,-0.61237,-0.61237,-0.5,-0.5,-0.5,-0.70711,-0.35355,-0.35355,-0.86603,-0.18301,-0.18301,-0.96593,-0.22414,-0.12941,0.96593,-0.43301,-0.25,0.86603,-0.61237,-0.35355,0.70711,-0.75,-0.43301,0.5,-0.83652,-0.48296,0.25882,-0.86602,-0.5,-0.0,-0.83652,-0.48296,-0.25882,-0.75,-0.43301,-0.5,-0.61237,-0.35355,-0.70711,-0.43301,-0.25,-0.86603,-0.22414,-0.12941,-0.96593,0.0,-0.0,-1.0,-0.25,-0.06699,0.96593,-0.48296,-0.12941,0.86603,-0.68301,-0.18301,0.70711,-0.83652,-0.22414,0.5,-0.93301,-0.25,0.25882,-0.96593,-0.25882,-0.0,-0.93301,-0.25,-0.25882,-0.83652,-0.22414,-0.5,-0.68301,-0.18301,-0.70711,-0.48296,-0.12941,-0.86603,-0.25,-0.06699,-0.96593,-0.25882,-0.0,0.96593,-0.5,-0.0,0.86603,-0.70711,-0.0,0.70711,-0.86603,-0.0,0.5,-0.96593,-0.0,0.25882,-1.0,-0.0,-0.0,-0.96593,-0.0,-0.25882,-0.86603,-0.0,-0.5,-0.70711,-0.0,-0.70711,-0.5,-0.0,-0.86603,-0.25882,-0.0,-0.96593,-0.25,0.06699,0.96593,-0.48296,0.12941,0.86603,-0.68301,0.18301,0.70711,-0.83652,0.22414,0.5,-0.93301,0.25,0.25882,-0.96593,0.25882,-0.0,-0.93301,0.25,-0.25882,-0.83652,0.22414,-0.5,-0.68301,0.18301,-0.70711,-0.48296,0.12941,-0.86603,-0.25,0.06699,-0.96593,-0.22414,0.12941,0.96593,-0.43301,0.25,0.86603,-0.61237,0.35355,0.70711,-0.75,0.43301,0.5,-0.83652,0.48296,0.25882,-0.86602,0.5,-0.0,-0.83652,0.48296,-0.25882,-0.75,0.43301,-0.5,-0.61237,0.35355,-0.70711,-0.43301,0.25,-0.86603,-0.22414,0.12941,-0.96593,-0.18301,0.18301,0.96593,-0.35355,0.35355,0.86603,-0.5,0.5,0.70711,-0.61237,0.61237,0.5,-0.68301,0.68301,0.25882,-0.70711,0.70711,-0.0,-0.68301,0.68301,-0.25882,-0.61237,0.61237,-0.5,-0.5,0.5,-0.70711,-0.35355,0.35355,-0.86603,-0.18301,0.18301,-0.96593,-0.12941,0.22414,0.96593,-0.25,0.43301,0.86603,-0.35355,0.61237,0.70711,-0.43301,0.75,0.5,-0.48296,0.83652,0.25882,-0.5,0.86602,-0.0,-0.48296,0.83652,-0.25882,-0.43301,0.75,-0.5,-0.35355,0.61237,-0.70711,-0.25,0.43301,-0.86603,-0.12941,0.22414,-0.96593,-0.06699,0.25,0.96593,-0.12941,0.48296,0.86603,-0.18301,0.68301,0.70711,-0.22414,0.83652,0.5,-0.25,0.93301,0.25882,-0.25882,0.96593,-0.0,-0.25,0.93301,-0.25882,-0.22414,0.83652,-0.5,-0.18301,0.68301,-0.70711,-0.12941,0.48296,-0.86603,-0.06699,0.25,-0.96593,-0.0,0.25882,0.96593,-0.0,0.86603,0.5,-0.0,0.96593,0.25882,0.0,1.0,-0.0,-0.0,0.96593,-0.25882,-0.0,0.86603,-0.5,0.0,0.70711,-0.70711,0.0,0.5,-0.86603,-0.0,0.25882,-0.96593];
iron_data_ConstData.skydomeNor = [0.0,-0.50807,-0.86132,0.0,-0.71246,-0.70172,-0.0696,-0.25975,-0.96317,-0.1315,-0.49075,-0.86132,-0.1844,-0.68818,-0.70172,-0.22483,-0.83909,-0.49536,-0.25018,-0.9337,-0.25615,-0.25882,-0.96593,-0.0,-0.25018,-0.9337,0.25615,-0.22483,-0.83909,0.49536,-0.1844,-0.68818,0.70172,-0.1315,-0.49075,0.86132,-0.0696,-0.25975,0.96317,-0.13445,-0.23288,-0.96317,-0.25403,-0.44,-0.86132,-0.35623,-0.61701,-0.70172,-0.43434,-0.75231,-0.49536,-0.48332,-0.83713,-0.25615,-0.5,-0.86603,0.0,-0.48332,-0.83713,0.25615,-0.43434,-0.75231,0.49536,-0.35623,-0.61701,0.70172,-0.25403,-0.44,0.86132,-0.13445,-0.23288,0.96317,-0.19015,-0.19015,-0.96317,-0.35926,-0.35926,-0.86132,-0.50378,-0.50378,-0.70172,-0.61426,-0.61426,-0.49536,-0.68352,-0.68352,-0.25615,-0.70711,-0.70711,0.0,-0.68352,-0.68352,0.25615,-0.61426,-0.61426,0.49536,-0.50378,-0.50378,0.70172,-0.35926,-0.35926,0.86132,-0.19015,-0.19015,0.96317,-0.23288,-0.13445,-0.96317,-0.44,-0.25403,-0.86132,-0.61701,-0.35623,-0.70172,-0.75231,-0.43434,-0.49536,-0.83713,-0.48332,-0.25615,-0.86603,-0.5,0.0,-0.83713,-0.48332,0.25615,-0.75231,-0.43434,0.49536,-0.61701,-0.35623,0.70172,-0.44,-0.25403,0.86132,-0.23288,-0.13445,0.96317,-0.25975,-0.0696,-0.96317,-0.49075,-0.1315,-0.86132,-0.68818,-0.1844,-0.70172,-0.83909,-0.22483,-0.49536,-0.9337,-0.25018,-0.25615,-0.96593,-0.25882,0.0,-0.9337,-0.25018,0.25615,-0.83909,-0.22483,0.49536,-0.68818,-0.1844,0.70172,-0.49075,-0.1315,0.86132,-0.25975,-0.0696,0.96317,-0.26891,-0.0,-0.96317,-0.50807,0.0,-0.86132,-0.71246,0.0,-0.70172,-0.86869,-0.0,-0.49536,-0.96664,0.0,-0.25615,-1.0,0.0,0.0,-0.96664,0.0,0.25615,-0.86869,0.0,0.49536,-0.71246,0.0,0.70172,-0.50807,0.0,0.86132,-0.26891,-0.0,0.96317,-0.25975,0.0696,-0.96317,-0.49075,0.1315,-0.86132,-0.68818,0.1844,-0.70172,-0.83909,0.22483,-0.49536,-0.9337,0.25018,-0.25615,-0.96593,0.25882,0.0,-0.9337,0.25018,0.25615,-0.83909,0.22483,0.49536,-0.68818,0.1844,0.70172,-0.49075,0.1315,0.86132,-0.25975,0.0696,0.96317,-0.23288,0.13445,-0.96317,-0.44,0.25403,-0.86132,-0.61701,0.35623,-0.70172,-0.75231,0.43434,-0.49536,-0.83713,0.48332,-0.25615,-0.86603,0.5,0.0,-0.83713,0.48332,0.25615,-0.75231,0.43434,0.49536,-0.61701,0.35623,0.70172,-0.44,0.25403,0.86132,-0.23288,0.13445,0.96317,-0.19015,0.19015,-0.96317,-0.35926,0.35926,-0.86132,-0.50378,0.50378,-0.70172,-0.61426,0.61426,-0.49536,-0.68352,0.68352,-0.25615,-0.70711,0.70711,0.0,-0.68352,0.68352,0.25615,-0.61426,0.61426,0.49536,-0.50378,0.50378,0.70172,-0.35926,0.35926,0.86132,-0.19015,0.19015,0.96317,-0.13445,0.23288,-0.96317,-0.25403,0.44,-0.86132,-0.35623,0.61701,-0.70172,-0.43434,0.75231,-0.49536,-0.48332,0.83713,-0.25615,-0.5,0.86603,0.0,-0.48332,0.83713,0.25615,-0.43434,0.75231,0.49536,-0.35623,0.61701,0.70172,-0.25403,0.44,0.86132,-0.13445,0.23288,0.96317,-0.0696,0.25975,-0.96317,-0.1315,0.49075,-0.86132,-0.1844,0.68818,-0.70172,-0.22483,0.83909,-0.49536,-0.25018,0.9337,-0.25615,-0.25882,0.96593,0.0,-0.25018,0.9337,0.25615,-0.22483,0.83909,0.49536,-0.1844,0.68818,0.70172,-0.1315,0.49075,0.86132,-0.0696,0.25975,0.96317,-0.0,0.26891,-0.96317,0.0,0.50807,-0.86132,0.0,0.71246,-0.70172,-0.0,0.86869,-0.49536,0.0,0.96664,-0.25615,0.0,1.0,0.0,-0.0,0.96664,0.25615,0.0,0.86869,0.49536,0.0,0.71246,0.70172,0.0,0.50807,0.86132,0.0,0.26891,0.96317,0.0696,0.25975,-0.96317,0.1315,0.49075,-0.86132,0.1844,0.68818,-0.70172,0.22483,0.83909,-0.49536,0.25018,0.9337,-0.25615,0.25882,0.96593,0.0,0.25018,0.9337,0.25615,0.22483,0.83909,0.49536,0.1844,0.68818,0.70172,0.1315,0.49075,0.86132,0.0696,0.25975,0.96317,0.13445,0.23288,-0.96317,0.25403,0.44,-0.86132,0.35623,0.61701,-0.70172,0.43434,0.75231,-0.49536,0.48332,0.83713,-0.25615,0.5,0.86603,0.0,0.48332,0.83713,0.25615,0.43434,0.75231,0.49536,0.35623,0.61701,0.70172,0.25403,0.44,0.86132,0.13445,0.23288,0.96317,0.0,0.0,-1.0,0.19015,0.19015,-0.96317,0.35926,0.35926,-0.86132,0.50378,0.50378,-0.70172,0.61426,0.61426,-0.49536,0.68352,0.68352,-0.25615,0.70711,0.70711,0.0,0.68352,0.68352,0.25615,0.61426,0.61426,0.49536,0.50378,0.50378,0.70172,0.35926,0.35926,0.86132,0.19015,0.19015,0.96317,0.23288,0.13445,-0.96317,0.44,0.25403,-0.86132,0.61701,0.35623,-0.70172,0.75231,0.43434,-0.49536,0.83713,0.48332,-0.25615,0.86603,0.5,0.0,0.83713,0.48332,0.25615,0.75231,0.43434,0.49536,0.61701,0.35623,0.70172,0.44,0.25403,0.86132,0.23288,0.13445,0.96317,0.0,-0.0,1.0,0.25975,0.0696,-0.96317,0.49075,0.1315,-0.86132,0.68818,0.1844,-0.70172,0.83909,0.22483,-0.49536,0.9337,0.25018,-0.25615,0.96593,0.25882,0.0,0.9337,0.25018,0.25615,0.83909,0.22483,0.49536,0.68818,0.1844,0.70172,0.49075,0.1315,0.86132,0.25975,0.0696,0.96317,0.26891,-0.0,-0.96317,0.50807,-0.0,-0.86132,0.71246,0.0,-0.70172,0.86869,0.0,-0.49536,0.96664,-0.0,-0.25615,1.0,-0.0,0.0,0.96664,0.0,0.25615,0.86869,0.0,0.49536,0.71246,-0.0,0.70172,0.50807,0.0,0.86132,0.26891,-0.0,0.96317,0.25975,-0.0696,-0.96317,0.49075,-0.1315,-0.86132,0.68818,-0.1844,-0.70172,0.83909,-0.22483,-0.49536,0.9337,-0.25018,-0.25615,0.96593,-0.25882,0.0,0.9337,-0.25018,0.25615,0.83909,-0.22483,0.49536,0.68818,-0.1844,0.70172,0.49075,-0.1315,0.86132,0.25975,-0.0696,0.96317,0.23288,-0.13445,-0.96317,0.44,-0.25403,-0.86132,0.61701,-0.35623,-0.70172,0.75231,-0.43434,-0.49536,0.83713,-0.48332,-0.25615,0.86603,-0.5,0.0,0.83713,-0.48332,0.25615,0.75231,-0.43434,0.49536,0.617,-0.35623,0.70172,0.44,-0.25403,0.86132,0.23288,-0.13445,0.96317,0.19015,-0.19015,-0.96317,0.35926,-0.35926,-0.86132,0.50378,-0.50378,-0.70172,0.61426,-0.61426,-0.49536,0.68352,-0.68352,-0.25615,0.70711,-0.70711,-0.0,0.68352,-0.68352,0.25615,0.61426,-0.61426,0.49536,0.50378,-0.50378,0.70172,0.35926,-0.35926,0.86132,0.19015,-0.19015,0.96317,0.13445,-0.23288,-0.96317,0.25403,-0.44,-0.86132,0.35623,-0.61701,-0.70172,0.43434,-0.75231,-0.49536,0.48332,-0.83713,-0.25615,0.5,-0.86603,0.0,0.48332,-0.83713,0.25615,0.43434,-0.75231,0.49536,0.35623,-0.617,0.70172,0.25403,-0.44,0.86132,0.13445,-0.23288,0.96317,0.0696,-0.25975,-0.96317,0.1315,-0.49075,-0.86132,0.1844,-0.68818,-0.70172,0.22483,-0.83909,-0.49536,0.25018,-0.9337,-0.25615,0.25882,-0.96593,0.0,0.25018,-0.9337,0.25615,0.22483,-0.83909,0.49536,0.1844,-0.68818,0.70172,0.1315,-0.49075,0.86132,0.0696,-0.25975,0.96317,0.0,-0.26891,-0.96317,0.0,-0.86869,-0.49536,0.0,-0.96664,-0.25615,0.0,-1.0,-0.0,0.0,-0.96664,0.25615,0.0,-0.86869,0.49536,0.0,-0.71246,0.70172,0.0,-0.50807,0.86132,0.0,-0.26891,0.96317];
iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
iron_data_Data.cachedLights = new haxe_ds_StringMap();
iron_data_Data.cachedCameras = new haxe_ds_StringMap();
iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
iron_data_Data.cachedParticles = new haxe_ds_StringMap();
iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
iron_data_Data.cachedShaders = new haxe_ds_StringMap();
iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
iron_data_Data.cachedImages = new haxe_ds_StringMap();
iron_data_Data.cachedSounds = new haxe_ds_StringMap();
iron_data_Data.assetsLoaded = 0;
iron_data_Data.loadingMeshes = new haxe_ds_StringMap();
iron_data_Data.loadingLights = new haxe_ds_StringMap();
iron_data_Data.loadingCameras = new haxe_ds_StringMap();
iron_data_Data.loadingMaterials = new haxe_ds_StringMap();
iron_data_Data.loadingParticles = new haxe_ds_StringMap();
iron_data_Data.loadingWorlds = new haxe_ds_StringMap();
iron_data_Data.loadingShaders = new haxe_ds_StringMap();
iron_data_Data.loadingSceneRaws = new haxe_ds_StringMap();
iron_data_Data.loadingBlobs = new haxe_ds_StringMap();
iron_data_Data.loadingImages = new haxe_ds_StringMap();
iron_data_Data.loadingSounds = new haxe_ds_StringMap();
iron_data_MaterialData.uidCounter = 0;
iron_data_MaterialContext.num = 0;
iron_math_Mat4.helpVec = new iron_math_Vec4();
iron_math_Mat4.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.m1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.m2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.vpos = new iron_math_Vec4();
iron_object_Animation.vpos2 = new iron_math_Vec4();
iron_object_Animation.vscl = new iron_math_Vec4();
iron_object_Animation.vscl2 = new iron_math_Vec4();
iron_object_Animation.q1 = new iron_math_Quat();
iron_object_Animation.q2 = new iron_math_Quat();
iron_object_Animation.q3 = new iron_math_Quat();
iron_object_Animation.vp = new iron_math_Vec4();
iron_object_Animation.vs = new iron_math_Vec4();
iron_object_BoneAnimation.skinMaxBones = 128;
iron_object_BoneAnimation.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.m1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.m2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_BoneAnimation.vpos = new iron_math_Vec4();
iron_object_BoneAnimation.vscl = new iron_math_Vec4();
iron_object_BoneAnimation.q1 = new iron_math_Quat();
iron_object_BoneAnimation.q2 = new iron_math_Quat();
iron_object_BoneAnimation.q3 = new iron_math_Quat();
iron_object_BoneAnimation.vpos2 = new iron_math_Vec4();
iron_object_BoneAnimation.vscl2 = new iron_math_Vec4();
iron_object_BoneAnimation.v1 = new iron_math_Vec4();
iron_object_BoneAnimation.v2 = new iron_math_Vec4();
iron_object_Object.uidCounter = 0;
iron_object_Object.seed = 1;
iron_object_CameraObject.temp = new iron_math_Vec4();
iron_object_CameraObject.sphereCenter = new iron_math_Vec4();
iron_object_CameraObject.vcenter = new iron_math_Vec4();
iron_object_CameraObject.vup = new iron_math_Vec4();
iron_object_LightObject.cascadeCount = 1;
iron_object_LightObject.cascadeSplitFactor = 0.8;
iron_object_LightObject.cascadeBounds = 1.0;
iron_object_LightObject.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_LightObject.eye = new iron_math_Vec4();
iron_object_Transform.temp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Transform.q = new iron_math_Quat();
iron_object_Uniforms.biasMat = new iron_math_Mat4(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat3 = new iron_math_Mat3(1,0,0,0,1,0,0,0,1);
iron_object_Uniforms.helpVec = new iron_math_Vec4();
iron_object_Uniforms.helpVec2 = new iron_math_Vec4();
iron_object_Uniforms.helpQuat = new iron_math_Quat();
iron_object_Uniforms.defaultFilter = 1;
iron_system_Input.occupied = false;
iron_system_Input.gamepads = [];
iron_system_Input.registered = false;
iron_system_Mouse.buttons = ["left","right","middle","side1","side2"];
iron_system_Keyboard.keys = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","space","backspace","tab","enter","shift","control","alt","capslock","win","escape","delete","up","down","left","right","back",",",".",":",";","<","=",">","?","!","\"","#","$","%","&","_","(",")","*","|","{","}","[","]","~","`","/","\\","@","+","-","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12"];
iron_system_Gamepad.buttonsPS = ["cross","circle","square","triangle","l1","r1","l2","r2","share","options","l3","r3","up","down","left","right","home","touchpad"];
iron_system_Gamepad.buttons = iron_system_Gamepad.buttonsPS;
iron_system_Time.scale = 1.0;
iron_system_Time.last = 0.0;
iron_system_Time.realDelta = 0.0;
kha_Display.instance = new kha_Display();
kha_LoaderImpl.dropFiles = new haxe_ds_StringMap();
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.Checker_mesh_fragData0 = "s2771:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwppbiBoaWdocCB2ZWMzIGJwb3NpdGlvbjsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yWzJdOwoKaGlnaHAgdmVjMyB0ZXhfY2hlY2tlcihoaWdocCB2ZWMzIGNvLCBoaWdocCB2ZWMzIGNvbDEsIGhpZ2hwIHZlYzMgY29sMiwgaGlnaHAgZmxvYXQgc2NhbGUpCnsKICAgIGhpZ2hwIHZlYzMgcCA9IChjbyArIHZlYzMoOS45OTk5ODk3NDI5MzcwMzIxMzMzNDA4MzU1NzEyODkxZS0wNykpICogc2NhbGU7CiAgICBoaWdocCBmbG9hdCB4aSA9IGFicyhmbG9vcihwLngpKTsKICAgIGhpZ2hwIGZsb2F0IHlpID0gYWJzKGZsb29yKHAueSkpOwogICAgaGlnaHAgZmxvYXQgemkgPSBhYnMoZmxvb3IocC56KSk7CiAgICBib29sIGNoZWNrID0gKG1vZCh4aSwgMi4wKSA9PSBtb2QoeWksIDIuMCkpID09IChtb2QoemksIDIuMCkgIT0gMC4wKTsKICAgIGJ2ZWMzIF8xMTAgPSBidmVjMyhjaGVjayk7CiAgICByZXR1cm4gdmVjMyhfMTEwLnggPyBjb2wxLnggOiBjb2wyLngsIF8xMTAueSA:IGNvbDEueSA6IGNvbDIueSwgXzExMC56ID8gY29sMS56IDogY29sMi56KTsKfQoKaGlnaHAgdmVjMiBvY3RhaGVkcm9uV3JhcChoaWdocCB2ZWMyIHYpCnsKICAgIHJldHVybiAodmVjMigxLjApIC0gYWJzKHYueXgpKSAqIHZlYzIoKHYueCA%PSAwLjApID8gMS4wIDogKC0xLjApLCAodi55ID49IDAuMCkgPyAxLjAgOiAoLTEuMCkpOwp9CgpoaWdocCBmbG9hdCBwYWNrRmxvYXRJbnQxNihoaWdocCBmbG9hdCBmLCB1aW50IGkpCnsKICAgIHVpbnQgYml0c0ludCA9IGkgPDwgMTJ1OwogICAgdWludCBiaXRzRmxvYXQgPSB1aW50KGYgKiA0MDk1LjApOwogICAgcmV0dXJuIGZsb2F0KGJpdHNJbnQgfCBiaXRzRmxvYXQpOwp9CgpoaWdocCBmbG9hdCBwYWNrRmxvYXQyKGhpZ2hwIGZsb2F0IGYxLCBoaWdocCBmbG9hdCBmMikKewogICAgcmV0dXJuIGZsb29yKGYxICogMjU1LjApICsgbWluKGYyLCAwLjk5MDAwMDAwOTUzNjc0MzE2NDA2MjUpOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICBoaWdocCB2ZWMzIENoZWNrZXJUZXh0dXJlX0NvbG9yX3JlcyA9IHRleF9jaGVja2VyKGJwb3NpdGlvbiwgdmVjMygwLjA5MTgzMjA3MTU0MjczOTg2ODE2NDA2MjUpLCB2ZWMzKDAuMjAwMDAwMDAyOTgwMjMyMjM4NzY5NTMxMjUpLCA1MC4wKTsKICAgIGhpZ2hwIHZlYzMgQ2hlY2tlclRleHR1cmVfMDAxX0NvbG9yX3JlcyA9IHRleF9jaGVja2VyKGJwb3NpdGlvbiwgdmVjMygwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSksIHZlYzMoMC4wKSwgNTAuMCk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSBDaGVja2VyVGV4dHVyZV9Db2xvcl9yZXM7CiAgICBoaWdocCBmbG9hdCByb3VnaG5lc3MgPSBkb3QoQ2hlY2tlclRleHR1cmVfMDAxX0NvbG9yX3JlcywgdmVjMygwLjIxMjU5OTk5Mjc1MjA3NTE5NTMxMjUsIDAuNzE1MjAwMDA2OTYxODIyNTA5NzY1NjI1LCAwLjA3MjIwMDAwMDI4NjEwMjI5NDkyMTg3NSkpOwogICAgaGlnaHAgZmxvYXQgbWV0YWxsaWMgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBvY2NsdXNpb24gPSAxLjA7CiAgICBoaWdocCBmbG9hdCBzcGVjdWxhciA9IDAuNTsKICAgIGhpZ2hwIHZlYzMgZW1pc3Npb25Db2wgPSB2ZWMzKDAuMCk7CiAgICBuIC89IHZlYzMoKGFicyhuLngpICsgYWJzKG4ueSkpICsgYWJzKG4ueikpOwogICAgaGlnaHAgdmVjMiBfMTY2OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzE2NiA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzE2NiA9IG9jdGFoZWRyb25XcmFwKG4ueHkpOwogICAgfQogICAgbiA9IHZlYzMoXzE2Ni54LCBfMTY2LnksIG4ueik7CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHJvdWdobmVzcywgcGFja0Zsb2F0SW50MTYobWV0YWxsaWMsIDB1KSk7CiAgICBmcmFnQ29sb3JbMV0gPSB2ZWM0KGJhc2Vjb2wsIHBhY2tGbG9hdDIob2NjbHVzaW9uLCBzcGVjdWxhcikpOwp9Cgo";
kha_Shaders.Checker_mesh_vertData0 = "s730:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBmbG9hdCBwb3NVbnBhY2s7CnVuaWZvcm0gdmVjMyBoZGltOwp1bmlmb3JtIHZlYzMgZGltOwp1bmlmb3JtIG1hdDQgV1ZQOwoKaW4gdmVjNCBwb3M7Cm91dCB2ZWMzIHdub3JtYWw7CmluIHZlYzIgbm9yOwpvdXQgdmVjMyBicG9zaXRpb247Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IHNwb3MgPSB2ZWM0KHBvcy54eXosIDEuMCk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiB2ZWMzKG5vciwgcG9zLncpKTsKICAgIGJwb3NpdGlvbiA9ICgoc3Bvcy54eXogKiBwb3NVbnBhY2spICsgaGRpbSkgLyBkaW07CiAgICBpZiAoZGltLnogPT0gMC4wKQogICAgewogICAgICAgIGJwb3NpdGlvbi56ID0gMC4wOwogICAgfQogICAgaWYgKGRpbS55ID09IDAuMCkKICAgIHsKICAgICAgICBicG9zaXRpb24ueSA9IDAuMDsKICAgIH0KICAgIGlmIChkaW0ueCA9PSAwLjApCiAgICB7CiAgICAgICAgYnBvc2l0aW9uLnggPSAwLjA7CiAgICB9CiAgICBnbF9Qb3NpdGlvbiA9IFdWUCAqIHNwb3M7Cn0KCg";
kha_Shaders.Checker_shadowmap_fragData0 = "s107:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.Checker_shadowmap_vertData0 = "s180:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmluIHZlYzQgcG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MueHl6LCAxLjApOwogICAgZ2xfUG9zaXRpb24gPSBMV1ZQICogc3BvczsKfQoK";
kha_Shaders.Material_002_mesh_fragData0 = "s1696:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdEludDE2KGhpZ2hwIGZsb2F0IGYsIHVpbnQgaSkKewogICAgdWludCBiaXRzSW50ID0gaSA8PCAxMnU7CiAgICB1aW50IGJpdHNGbG9hdCA9IHVpbnQoZiAqIDQwOTUuMCk7CiAgICByZXR1cm4gZmxvYXQoYml0c0ludCB8IGJpdHNGbG9hdCk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdDIoaGlnaHAgZmxvYXQgZjEsIGhpZ2hwIGZsb2F0IGYyKQp7CiAgICByZXR1cm4gZmxvb3IoZjEgKiAyNTUuMCkgKyBtaW4oZjIsIDAuOTkwMDAwMDA5NTM2NzQzMTY0MDYyNSk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzMgbiA9IG5vcm1hbGl6ZSh3bm9ybWFsKTsKICAgIGhpZ2hwIHZlYzMgYmFzZWNvbCA9IHZlYzMoMC43ODczNTIzMjM1MzIxMDQ0OTIxODc1LCAwLjEwNjQ0Nzg3NTQ5OTcyNTM0MTc5Njg3NSwgMC4xMTM2NDI0MDk0NDM4NTUyODU2NDQ1MzEyNSk7CiAgICBoaWdocCBmbG9hdCByb3VnaG5lc3MgPSAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNTsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjA7CiAgICBoaWdocCB2ZWMzIGVtaXNzaW9uQ29sID0gdmVjMygwLjApOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzEwNDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMDQgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMDQgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMDQueCwgXzEwNC55LCBuLnopOwogICAgZnJhZ0NvbG9yWzBdID0gdmVjNChuLnh5LCByb3VnaG5lc3MsIHBhY2tGbG9hdEludDE2KG1ldGFsbGljLCAwdSkpOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBwYWNrRmxvYXQyKG9jY2x1c2lvbiwgc3BlY3VsYXIpKTsKfQoK";
kha_Shaders.Material_002_mesh_vertData0 = "s303:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKCmluIHZlYzQgcG9zOwpvdXQgdmVjMyB3bm9ybWFsOwppbiB2ZWMyIG5vcjsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgc3BvcyA9IHZlYzQocG9zLnh5eiwgMS4wKTsKICAgIHdub3JtYWwgPSBub3JtYWxpemUoTiAqIHZlYzMobm9yLCBwb3MudykpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Material_003_mesh_fragData0 = "s1646:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKaW4gaGlnaHAgdmVjMyB3bm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3JbMl07CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdEludDE2KGhpZ2hwIGZsb2F0IGYsIHVpbnQgaSkKewogICAgdWludCBiaXRzSW50ID0gaSA8PCAxMnU7CiAgICB1aW50IGJpdHNGbG9hdCA9IHVpbnQoZiAqIDQwOTUuMCk7CiAgICByZXR1cm4gZmxvYXQoYml0c0ludCB8IGJpdHNGbG9hdCk7Cn0KCmhpZ2hwIGZsb2F0IHBhY2tGbG9hdDIoaGlnaHAgZmxvYXQgZjEsIGhpZ2hwIGZsb2F0IGYyKQp7CiAgICByZXR1cm4gZmxvb3IoZjEgKiAyNTUuMCkgKyBtaW4oZjIsIDAuOTkwMDAwMDA5NTM2NzQzMTY0MDYyNSk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzMgbiA9IG5vcm1hbGl6ZSh3bm9ybWFsKTsKICAgIGhpZ2hwIHZlYzMgYmFzZWNvbCA9IHZlYzMoMC4wKTsKICAgIGhpZ2hwIGZsb2F0IHJvdWdobmVzcyA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgaGlnaHAgZmxvYXQgc3BlY3VsYXIgPSAwLjA7CiAgICBoaWdocCB2ZWMzIGVtaXNzaW9uQ29sID0gdmVjMygxLjApOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIGhpZ2hwIHZlYzIgXzEwMDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMDAgPSBuLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8xMDAgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xMDAueCwgXzEwMC55LCBuLnopOwogICAgdWludCBtYXRpZCA9IDB1OwogICAgbWF0aWQgPSAxdTsKICAgIGJhc2Vjb2wgPSBlbWlzc2lvbkNvbDsKICAgIGZyYWdDb2xvclswXSA9IHZlYzQobi54eSwgcm91Z2huZXNzLCBwYWNrRmxvYXRJbnQxNihtZXRhbGxpYywgbWF0aWQpKTsKICAgIGZyYWdDb2xvclsxXSA9IHZlYzQoYmFzZWNvbCwgcGFja0Zsb2F0MihvY2NsdXNpb24sIHNwZWN1bGFyKSk7Cn0KCg";
kha_Shaders.World_World_fragData0 = "s1854:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIEg7CnVuaWZvcm0gaGlnaHAgdmVjMyBBOwp1bmlmb3JtIGhpZ2hwIHZlYzMgQjsKdW5pZm9ybSBoaWdocCB2ZWMzIEM7CnVuaWZvcm0gaGlnaHAgdmVjMyBEOwp1bmlmb3JtIGhpZ2hwIHZlYzMgRTsKdW5pZm9ybSBoaWdocCB2ZWMzIEY7CnVuaWZvcm0gaGlnaHAgdmVjMyBHOwp1bmlmb3JtIGhpZ2hwIHZlYzMgSTsKdW5pZm9ybSBoaWdocCB2ZWMzIGhvc2VrU3VuRGlyZWN0aW9uOwp1bmlmb3JtIGhpZ2hwIHZlYzMgWjsKdW5pZm9ybSBoaWdocCBmbG9hdCBlbnZtYXBTdHJlbmd0aDsKCmluIGhpZ2hwIHZlYzMgbm9ybWFsOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7CgpoaWdocCB2ZWMzIGhvc2VrV2lsa2llKGhpZ2hwIGZsb2F0IGNvc190aGV0YSwgaGlnaHAgZmxvYXQgZ2FtbWEsIGhpZ2hwIGZsb2F0IGNvc19nYW1tYSkKewogICAgaGlnaHAgdmVjMyBjaGkgPSB2ZWMzKDEuMCArIChjb3NfZ2FtbWEgKiBjb3NfZ2FtbWEpKSAvIHBvdygodmVjMygxLjApICsgKEggKiBIKSkgLSAoSCAqICgyLjAgKiBjb3NfZ2FtbWEpKSwgdmVjMygxLjUpKTsKICAgIHJldHVybiAodmVjMygxLjApICsgKEEgKiBleHAoQiAvIHZlYzMoY29zX3RoZXRhICsgMC4wMDk5OTk5OTk3NzY0ODI1ODIwOTIyODUxNTYyNSkpKSkgKiAoKCgoQyArIChEICogZXhwKEUgKiBnYW1tYSkpKSArIChGICogKGNvc19nYW1tYSAqIGNvc19nYW1tYSkpKSArIChHICogY2hpKSkgKyAoSSAqIHNxcnQoY29zX3RoZXRhKSkpOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUobm9ybWFsKTsKICAgIGhpZ2hwIHZlYzMgcG9zID0gLW47CiAgICBoaWdocCBmbG9hdCBjb3NfdGhldGEgPSBjbGFtcChwb3MueiwgMC4wLCAxLjApOwogICAgaGlnaHAgZmxvYXQgY29zX2dhbW1hID0gZG90KHBvcywgaG9zZWtTdW5EaXJlY3Rpb24pOwogICAgaGlnaHAgZmxvYXQgZ2FtbWFfdmFsID0gYWNvcyhjb3NfZ2FtbWEpOwogICAgaGlnaHAgZmxvYXQgcGFyYW0gPSBjb3NfdGhldGE7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gZ2FtbWFfdmFsOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMiA9IGNvc19nYW1tYTsKICAgIGhpZ2hwIHZlYzMgU2t5VGV4dHVyZV9Db2xvcl9yZXMgPSAoWiAqIGhvc2VrV2lsa2llKHBhcmFtLCBwYXJhbV8xLCBwYXJhbV8yKSkgKiBlbnZtYXBTdHJlbmd0aDsKICAgIGZyYWdDb2xvciA9IHZlYzQoU2t5VGV4dHVyZV9Db2xvcl9yZXMueCwgU2t5VGV4dHVyZV9Db2xvcl9yZXMueSwgU2t5VGV4dHVyZV9Db2xvcl9yZXMueiwgZnJhZ0NvbG9yLncpOwogICAgZnJhZ0NvbG9yLncgPSAwLjA7Cn0KCg";
kha_Shaders.World_World_vertData0 = "s258:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgU01WUDsKCm91dCB2ZWMzIG5vcm1hbDsKaW4gdmVjMyBub3I7CmluIHZlYzMgcG9zOwoKdm9pZCBtYWluKCkKewogICAgbm9ybWFsID0gbm9yOwogICAgdmVjNCBwb3NpdGlvbiA9IFNNVlAgKiB2ZWM0KHBvcywgMS4wKTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3NpdGlvbik7Cn0KCg";
kha_Shaders.blur_edge_pass_fragData0 = "s2671:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKY29uc3QgZmxvYXQgXzE0NFsxMF0gPSBmbG9hdFtdKDAuMTMyNTcxOTk1MjU4MzMxMjk4ODI4MTI1LCAwLjEyNTQ3MTk5NDI4MDgxNTEyNDUxMTcxODc1LCAwLjEwNjM3Mjk5NzE2NDcyNjI1NzMyNDIxODc1LCAwLjA4MDc3OTk5OTQ5NDU1MjYxMjMwNDY4NzUsIDAuMDU0OTQ5OTk4ODU1NTkwODIwMzEyNSwgMC4wMzM0ODIwMDAyMzE3NDI4NTg4ODY3MTg3NSwgMC4wMTgyNzUwMDAxNTQ5NzIwNzY0MTYwMTU2MjUsIDAuMDA4OTMzOTk5NTc1Njc0NTMzODQzOTk0MTQwNjI1LCAwLjAwMzkxMTk5OTk4NTU3NTY3NTk2NDM1NTQ2ODc1LCAwLjAwMTUzNTAwMDA0NjcxNTE0MDM0MjcxMjQwMjM0Mzc1KTsKCnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gaGlnaHAgdmVjMiBkaXJJbnY7CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgZmxvYXQgZnJhZ0NvbG9yOwoKaGlnaHAgdmVjMiBvY3RhaGVkcm9uV3JhcChoaWdocCB2ZWMyIHYpCnsKICAgIHJldHVybiAodmVjMigxLjApIC0gYWJzKHYueXgpKSAqIHZlYzIoKHYueCA%PSAwLjApID8gMS4wIDogKC0xLjApLCAodi55ID49IDAuMCkgPyAxLjAgOiAoLTEuMCkpOwp9CgpoaWdocCB2ZWMzIGdldE5vcihoaWdocCB2ZWMyIGVuYykKewogICAgaGlnaHAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhlbmMueCkpIC0gYWJzKGVuYy55KTsKICAgIGhpZ2hwIHZlYzIgXzUzOwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzUzID0gZW5jOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF81MyA9IG9jdGFoZWRyb25XcmFwKGVuYyk7CiAgICB9CiAgICBuID0gdmVjMyhfNTMueCwgXzUzLnksIG4ueik7CiAgICBuID0gbm9ybWFsaXplKG4pOwogICAgcmV0dXJuIG47Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzMgbm9yID0gZ2V0Tm9yKHRleHR1cmVMb2QoZ2J1ZmZlcjAsIHRleENvb3JkLCAwLjApLnh5KTsKICAgIGZyYWdDb2xvciA9IHRleHR1cmVMb2QodGV4LCB0ZXhDb29yZCwgMC4wKS54ICogMC4xMzI1NzE5OTUyNTgzMzEyOTg4MjgxMjU7CiAgICBoaWdocCBmbG9hdCB3ZWlnaHQgPSAwLjEzMjU3MTk5NTI1ODMzMTI5ODgyODEyNTsKICAgIGZvciAoaW50IGkgPSAxOyBpIDwgODsgaSsrKQogICAgewogICAgICAgIGhpZ2hwIGZsb2F0IHBvc2FkZCA9IGZsb2F0KGkpOwogICAgICAgIGhpZ2hwIHZlYzMgbm9yMiA9IGdldE5vcih0ZXh0dXJlTG9kKGdidWZmZXIwLCB0ZXhDb29yZCArIChkaXJJbnYgKiBmbG9hdChpKSksIDAuMCkueHkpOwogICAgICAgIGhpZ2hwIGZsb2F0IGluZmx1ZW5jZUZhY3RvciA9IHN0ZXAoMC45NDk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUsIGRvdChub3IyLCBub3IpKTsKICAgICAgICBoaWdocCBmbG9hdCBjb2wgPSB0ZXh0dXJlTG9kKHRleCwgdGV4Q29vcmQgKyAoZGlySW52ICogcG9zYWRkKSwgMC4wKS54OwogICAgICAgIGhpZ2hwIGZsb2F0IHcgPSBfMTQ0W2ldICogaW5mbHVlbmNlRmFjdG9yOwogICAgICAgIGZyYWdDb2xvciArPSAoY29sICogdyk7CiAgICAgICAgd2VpZ2h0ICs9IHc7CiAgICAgICAgbm9yMiA9IGdldE5vcih0ZXh0dXJlTG9kKGdidWZmZXIwLCB0ZXhDb29yZCAtIChkaXJJbnYgKiBmbG9hdChpKSksIDAuMCkueHkpOwogICAgICAgIGluZmx1ZW5jZUZhY3RvciA9IHN0ZXAoMC45NDk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUsIGRvdChub3IyLCBub3IpKTsKICAgICAgICBjb2wgPSB0ZXh0dXJlTG9kKHRleCwgdGV4Q29vcmQgLSAoZGlySW52ICogcG9zYWRkKSwgMC4wKS54OwogICAgICAgIHcgPSBfMTQ0W2ldICogaW5mbHVlbmNlRmFjdG9yOwogICAgICAgIGZyYWdDb2xvciArPSAoY29sICogdyk7CiAgICAgICAgd2VpZ2h0ICs9IHc7CiAgICB9CiAgICBmcmFnQ29sb3IgLz0gd2VpZ2h0Owp9Cgo";
kha_Shaders.compositor_pass_fragData0 = "s1019:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwoKaGlnaHAgdmVjMyB0b25lbWFwRmlsbWljKGhpZ2hwIHZlYzMgY29sb3IpCnsKICAgIGhpZ2hwIHZlYzMgeCA9IG1heCh2ZWMzKDAuMCksIGNvbG9yIC0gdmVjMygwLjAwNDAwMDAwMDE4OTk4OTgwNTIyMTU1NzYxNzE4NzUpKTsKICAgIHJldHVybiAoeCAqICgoeCAqIDYuMTk5OTk5ODA5MjY1MTM2NzE4NzUpICsgdmVjMygwLjUpKSkgLyAoKHggKiAoKHggKiA2LjE5OTk5OTgwOTI2NTEzNjcxODc1KSArIHZlYzMoMS43MDAwMDAwNDc2ODM3MTU4MjAzMTI1KSkpICsgdmVjMygwLjA1OTk5OTk5ODY1ODg5NTQ5MjU1MzcxMDkzNzUpKTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiB0ZXhDbyA9IHRleENvb3JkOwogICAgZnJhZ0NvbG9yID0gdGV4dHVyZUxvZCh0ZXgsIHRleENvLCAwLjApOwogICAgaGlnaHAgdmVjMyBfNjEgPSBtaW4oZnJhZ0NvbG9yLnh5eiwgdmVjMygzMjc1Mi4wKSk7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KF82MS54LCBfNjEueSwgXzYxLnosIGZyYWdDb2xvci53KTsKICAgIGhpZ2hwIHZlYzMgXzY2ID0gdG9uZW1hcEZpbG1pYyhmcmFnQ29sb3IueHl6KTsKICAgIGZyYWdDb2xvciA9IHZlYzQoXzY2LngsIF82Ni55LCBfNjYueiwgZnJhZ0NvbG9yLncpOwp9Cgo";
kha_Shaders.compositor_pass_vertData0 = "s203:I3ZlcnNpb24gMzAwIGVzCgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.deferred_light_fragData0 = "s24660:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgc2x0Y01hdDsKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0QXJlYTA7CnVuaWZvcm0gaGlnaHAgdmVjMyBsaWdodEFyZWExOwp1bmlmb3JtIGhpZ2hwIHZlYzMgbGlnaHRBcmVhMjsKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0QXJlYTM7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHNsdGNNYWc7CnVuaWZvcm0gaGlnaHAgbWF0NCBMV1ZQU3BvdFsxXTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkRTaGFkb3cgc2hhZG93TWFwU3BvdFsxXTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyQ3ViZVNoYWRvdyBzaGFkb3dNYXBQb2ludFsxXTsKdW5pZm9ybSBoaWdocCB2ZWMyIGxpZ2h0UHJvajsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGdidWZmZXIxOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyRDsKdW5pZm9ybSBoaWdocCB2ZWMzIGV5ZTsKdW5pZm9ybSBoaWdocCB2ZWMzIGV5ZUxvb2s7CnVuaWZvcm0gaGlnaHAgdmVjMiBjYW1lcmFQcm9qOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzZW52bWFwQnJkZjsKdW5pZm9ybSBoaWdocCB2ZWM0IHNoaXJyWzddOwp1bmlmb3JtIGludCBlbnZtYXBOdW1NaXBtYXBzOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzZW52bWFwUmFkaWFuY2U7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHNzYW90ZXg7CnVuaWZvcm0gaGlnaHAgdmVjMyBwb2ludFBvczsKdW5pZm9ybSBoaWdocCB2ZWMzIHBvaW50Q29sOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IHBvaW50QmlhczsKdW5pZm9ybSBoaWdocCB2ZWM0IGNhc0RhdGFbMjBdOwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjMyB2aWV3UmF5OwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7CmhpZ2hwIHZlYzMgTDA7CmhpZ2hwIHZlYzMgTDE7CmhpZ2hwIHZlYzMgTDI7CmhpZ2hwIHZlYzMgTDM7CmhpZ2hwIHZlYzMgTDQ7CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCnZvaWQgdW5wYWNrRmxvYXRJbnQxNihoaWdocCBmbG9hdCB2YWwsIG91dCBoaWdocCBmbG9hdCBmLCBvdXQgdWludCBpKQp7CiAgICB1aW50IGJpdHNWYWx1ZSA9IHVpbnQodmFsKTsKICAgIGkgPSBiaXRzVmFsdWUgPj4gMTJ1OwogICAgZiA9IGZsb2F0KGJpdHNWYWx1ZSAmIDQyOTQ5MDU4NTV1KSAvIDQwOTUuMDsKfQoKaGlnaHAgdmVjMiB1bnBhY2tGbG9hdDIoaGlnaHAgZmxvYXQgZikKewogICAgcmV0dXJuIHZlYzIoZmxvb3IoZikgLyAyNTUuMCwgZnJhY3QoZikpOwp9CgpoaWdocCB2ZWMzIHN1cmZhY2VBbGJlZG8oaGlnaHAgdmVjMyBiYXNlQ29sb3IsIGhpZ2hwIGZsb2F0IG1ldGFsbmVzcykKewogICAgcmV0dXJuIG1peChiYXNlQ29sb3IsIHZlYzMoMC4wKSwgdmVjMyhtZXRhbG5lc3MpKTsKfQoKaGlnaHAgdmVjMyBzdXJmYWNlRjAoaGlnaHAgdmVjMyBiYXNlQ29sb3IsIGhpZ2hwIGZsb2F0IG1ldGFsbmVzcykKewogICAgcmV0dXJuIG1peCh2ZWMzKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1KSwgYmFzZUNvbG9yLCB2ZWMzKG1ldGFsbmVzcykpOwp9CgpoaWdocCB2ZWMzIGdldFBvcyhoaWdocCB2ZWMzIGV5ZV8xLCBoaWdocCB2ZWMzIGV5ZUxvb2tfMSwgaGlnaHAgdmVjMyB2aWV3UmF5XzEsIGhpZ2hwIGZsb2F0IGRlcHRoLCBoaWdocCB2ZWMyIGNhbWVyYVByb2pfMSkKewogICAgaGlnaHAgZmxvYXQgbGluZWFyRGVwdGggPSBjYW1lcmFQcm9qXzEueSAvICgoKGRlcHRoICogMC41KSArIDAuNSkgLSBjYW1lcmFQcm9qXzEueCk7CiAgICBoaWdocCBmbG9hdCB2aWV3WkRpc3QgPSBkb3QoZXllTG9va18xLCB2aWV3UmF5XzEpOwogICAgaGlnaHAgdmVjMyB3cG9zaXRpb24gPSBleWVfMSArICh2aWV3UmF5XzEgKiAobGluZWFyRGVwdGggLyB2aWV3WkRpc3QpKTsKICAgIHJldHVybiB3cG9zaXRpb247Cn0KCmhpZ2hwIHZlYzMgc2hJcnJhZGlhbmNlKGhpZ2hwIHZlYzMgbm9yLCBoaWdocCB2ZWM0IHNoaXJyXzFbN10pCnsKICAgIGhpZ2hwIHZlYzMgY2wwMCA9IHZlYzMoc2hpcnJfMVswXS54LCBzaGlycl8xWzBdLnksIHNoaXJyXzFbMF0ueik7CiAgICBoaWdocCB2ZWMzIGNsMW0xID0gdmVjMyhzaGlycl8xWzBdLncsIHNoaXJyXzFbMV0ueCwgc2hpcnJfMVsxXS55KTsKICAgIGhpZ2hwIHZlYzMgY2wxMCA9IHZlYzMoc2hpcnJfMVsxXS56LCBzaGlycl8xWzFdLncsIHNoaXJyXzFbMl0ueCk7CiAgICBoaWdocCB2ZWMzIGNsMTEgPSB2ZWMzKHNoaXJyXzFbMl0ueSwgc2hpcnJfMVsyXS56LCBzaGlycl8xWzJdLncpOwogICAgaGlnaHAgdmVjMyBjbDJtMiA9IHZlYzMoc2hpcnJfMVszXS54LCBzaGlycl8xWzNdLnksIHNoaXJyXzFbM10ueik7CiAgICBoaWdocCB2ZWMzIGNsMm0xID0gdmVjMyhzaGlycl8xWzNdLncsIHNoaXJyXzFbNF0ueCwgc2hpcnJfMVs0XS55KTsKICAgIGhpZ2hwIHZlYzMgY2wyMCA9IHZlYzMoc2hpcnJfMVs0XS56LCBzaGlycl8xWzRdLncsIHNoaXJyXzFbNV0ueCk7CiAgICBoaWdocCB2ZWMzIGNsMjEgPSB2ZWMzKHNoaXJyXzFbNV0ueSwgc2hpcnJfMVs1XS56LCBzaGlycl8xWzVdLncpOwogICAgaGlnaHAgdmVjMyBjbDIyID0gdmVjMyhzaGlycl8xWzZdLngsIHNoaXJyXzFbNl0ueSwgc2hpcnJfMVs2XS56KTsKICAgIHJldHVybiAoKCgoKCgoKCgoY2wyMiAqIDAuNDI5MDQyOTk0OTc2MDQzNzAxMTcxODc1KSAqICgobm9yLnkgKiBub3IueSkgLSAoKC1ub3IueikgKiAoLW5vci56KSkpKSArICgoKGNsMjAgKiAwLjc0MzEyNTAyMTQ1NzY3MjExOTE0MDYyNSkgKiBub3IueCkgKiBub3IueCkpICsgKGNsMDAgKiAwLjg4NjIyNzAxMTY4MDYwMzAyNzM0Mzc1KSkgLSAoY2wyMCAqIDAuMjQ3NzA3OTkyNzkyMTI5NTE2NjAxNTYyNSkpICsgKCgoY2wybTIgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1KSAqIG5vci55KSAqICgtbm9yLnopKSkgKyAoKChjbDIxICogMC44NTgwODU5ODk5NTIwODc0MDIzNDM3NSkgKiBub3IueSkgKiBub3IueCkpICsgKCgoY2wybTEgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1KSAqICgtbm9yLnopKSAqIG5vci54KSkgKyAoKGNsMTEgKiAxLjAyMzMyNzk0NjY2MjkwMjgzMjAzMTI1KSAqIG5vci55KSkgKyAoKGNsMW0xICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNSkgKiAoLW5vci56KSkpICsgKChjbDEwICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNSkgKiBub3IueCk7Cn0KCmhpZ2hwIGZsb2F0IGdldE1pcEZyb21Sb3VnaG5lc3MoaGlnaHAgZmxvYXQgcm91Z2huZXNzLCBoaWdocCBmbG9hdCBudW1NaXBtYXBzKQp7CiAgICByZXR1cm4gcm91Z2huZXNzICogbnVtTWlwbWFwczsKfQoKaGlnaHAgdmVjMiBlbnZNYXBFcXVpcmVjdChoaWdocCB2ZWMzIG5vcm1hbCkKewogICAgaGlnaHAgZmxvYXQgcGhpID0gYWNvcyhub3JtYWwueik7CiAgICBoaWdocCBmbG9hdCB0aGV0YSA9IGF0YW4oLW5vcm1hbC55LCBub3JtYWwueCkgKyAzLjE0MTU5Mjc0MTAxMjU3MzI0MjE4NzU7CiAgICByZXR1cm4gdmVjMih0aGV0YSAvIDYuMjgzMTg1NDgyMDI1MTQ2NDg0Mzc1LCBwaGkgLyAzLjE0MTU5Mjc0MTAxMjU3MzI0MjE4NzUpOwp9CgppbnQgY2xpcFF1YWRUb0hvcml6b24oKQp7CiAgICBpbnQgbiA9IDA7CiAgICBpbnQgY29uZmlnID0gMDsKICAgIGlmIChMMC56ID4gMC4wKQogICAgewogICAgICAgIGNvbmZpZysrOwogICAgfQogICAgaWYgKEwxLnogPiAwLjApCiAgICB7CiAgICAgICAgY29uZmlnICs9IDI7CiAgICB9CiAgICBpZiAoTDIueiA%%";
kha_Shaders.painter_colored_fragData0 = "s223:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData0 = "s311:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData0 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData0 = "s372:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHZlcnRleFVWOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHZlcnRleFVWOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_fragData0 = "s367:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KGZyYWdtZW50Q29sb3IueHl6LCB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_vertData0 = "s394:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHZlcnRleFVWOwpvdXQgdmVjNCBmcmFnbWVudENvbG9yOwppbiB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdmVydGV4VVY7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_video_fragData0 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData0 = "s372:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHZlcnRleFVWOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHZlcnRleFVWOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.pass_copy_fragData0 = "s279:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgZnJhZ0NvbG9yID0gdGV4dHVyZUxvZCh0ZXgsIHRleENvb3JkLCAwLjApOwp9Cgo";
kha_Shaders.pass_vertData0 = "s203:I3ZlcnNpb24gMzAwIGVzCgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.pass_viewray_vertData0 = "s504:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgaW52VlA7CnVuaWZvcm0gdmVjMyBleWU7CgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cm91dCB2ZWMzIHZpZXdSYXk7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwogICAgdmVjNCB2ID0gdmVjNChwb3MueCwgcG9zLnksIDEuMCwgMS4wKTsKICAgIHYgPSB2ZWM0KGludlZQICogdik7CiAgICB2ZWMzIF82MiA9IHYueHl6IC8gdmVjMyh2LncpOwogICAgdiA9IHZlYzQoXzYyLngsIF82Mi55LCBfNjIueiwgdi53KTsKICAgIHZpZXdSYXkgPSB2Lnh5eiAtIGV5ZTsKfQoK";
kha_Shaders.smaa_blend_weight_fragData0 = "s23918:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHNjcmVlblNpemVJbnY7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGVkZ2VzVGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBhcmVhVGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzZWFyY2hUZXg7CnVuaWZvcm0gaGlnaHAgdmVjMiBzY3JlZW5TaXplOwoKaW4gaGlnaHAgdmVjNCBvZmZzZXQwOwppbiBoaWdocCB2ZWM0IG9mZnNldDI7CmluIGhpZ2hwIHZlYzQgb2Zmc2V0MTsKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWMyIHRleENvb3JkOwppbiBoaWdocCB2ZWMyIHBpeGNvb3JkOwpoaWdocCB2ZWMyIGNkd19lbmQ7CgpoaWdocCB2ZWM0IHRleHR1cmVMb2RBKGhpZ2hwIHNhbXBsZXIyRCB0ZXgsIGhpZ2hwIHZlYzIgY29vcmQsIGhpZ2hwIGZsb2F0IGxvZCkKewogICAgcmV0dXJuIHRleHR1cmVMb2QodGV4LCBjb29yZCwgbG9kKTsKfQoKaGlnaHAgdmVjMiBTTUFBU2VhcmNoRGlhZzEoaGlnaHAgdmVjMiB0ZXhjb29yZCwgaGlnaHAgdmVjMiBkaXIpCnsKICAgIGhpZ2hwIHZlYzQgY29vcmQgPSB2ZWM0KHRleGNvb3JkLCAtMS4wLCAxLjApOwogICAgaGlnaHAgdmVjMyB0ID0gdmVjMyhzY3JlZW5TaXplSW52LCAxLjApOwogICAgaGlnaHAgZmxvYXQgY3cgPSBjb29yZC53OwogICAgd2hpbGUgKChjb29yZC56IDwgNy4wKSAmJiAoY3cgPiAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1KSkKICAgIHsKICAgICAgICBoaWdocCB2ZWMzIF8xODEgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgICAgICBjb29yZCA9IHZlYzQoXzE4MS54LCBfMTgxLnksIF8xODEueiwgY29vcmQudyk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IGNvb3JkLnh5OwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEgPSAwLjA7CiAgICAgICAgY2R3X2VuZCA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbSwgcGFyYW1fMSkueHk7CiAgICAgICAgY3cgPSBkb3QoY2R3X2VuZCwgdmVjMigwLjUpKTsKICAgIH0KICAgIGNvb3JkLncgPSBjdzsKICAgIHJldHVybiBjb29yZC56dzsKfQoKaGlnaHAgdmVjNCBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKGlub3V0IGhpZ2hwIHZlYzQgZSkKewogICAgaGlnaHAgdmVjMiBfMTI5ID0gZS54eiAqIGFicygoZS54eiAqIDUuMCkgLSB2ZWMyKDMuNzUpKTsKICAgIGUgPSB2ZWM0KF8xMjkueCwgZS55LCBfMTI5LnksIGUudyk7CiAgICByZXR1cm4gZmxvb3IoZSArIHZlYzQoMC41KSk7Cn0KCmhpZ2hwIHZlYzIgU01BQUFyZWFEaWFnKGhpZ2hwIHZlYzIgZGlzdCwgaGlnaHAgdmVjMiBlLCBoaWdocCBmbG9hdCBvZmZzZXQpCnsKICAgIGhpZ2hwIHZlYzIgdGV4Y29vcmQgPSAodmVjMigyMC4wKSAqIGUpICsgZGlzdDsKICAgIHRleGNvb3JkID0gKHZlYzIoMC4wMDYyNTAwMDAwOTMxMzIyNTc0NjE1NDc4NTE1NjI1LCAwLjAwMTc4NTcxNDI5NTY5Mjc0MTg3MDg4MDEyNjk1MzEyNSkgKiB0ZXhjb29yZCkgKyB2ZWMyKDAuMDAzMTI1MDAwMDQ2NTY2MTI4NzMwNzczOTI1NzgxMjUsIDAuMDAwODkyODU3MTQ3ODQ2MzcwOTM1NDQwMDYzNDc2NTYyNSk7CiAgICB0ZXhjb29yZC54ICs9IDAuNTsKICAgIHRleGNvb3JkLnkgKz0gKDAuMTQyODU3MTQ5MjQzMzU0Nzk3MzYzMjgxMjUgKiBvZmZzZXQpOwogICAgcmV0dXJuIHRleHR1cmVMb2QoYXJlYVRleCwgdGV4Y29vcmQsIDAuMCkueHk7Cn0KCmhpZ2hwIHZlYzIgU01BQURlY29kZURpYWdCaWxpbmVhckFjY2Vzcyhpbm91dCBoaWdocCB2ZWMyIGUpCnsKICAgIGUueCAqPSBhYnMoKDUuMCAqIGUueCkgLSAzLjc1KTsKICAgIHJldHVybiBmbG9vcihlICsgdmVjMigwLjUpKTsKfQoKaGlnaHAgdmVjMiBTTUFBU2VhcmNoRGlhZzIoaGlnaHAgdmVjMiB0ZXhjb29yZCwgaGlnaHAgdmVjMiBkaXIpCnsKICAgIGhpZ2hwIHZlYzQgY29vcmQgPSB2ZWM0KHRleGNvb3JkLCAtMS4wLCAxLjApOwogICAgY29vcmQueCArPSAoMC4yNSAqIHNjcmVlblNpemVJbnYueCk7CiAgICBoaWdocCB2ZWMzIHQgPSB2ZWMzKHNjcmVlblNpemVJbnYsIDEuMCk7CiAgICBoaWdocCBmbG9hdCBjdyA9IGNvb3JkLnc7CiAgICB3aGlsZSAoKGNvb3JkLnogPCA3LjApICYmIChjdyA%IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUpKQogICAgewogICAgICAgIGhpZ2hwIHZlYzMgXzI0NCA9ICh0ICogdmVjMyhkaXIsIDEuMCkpICsgY29vcmQueHl6OwogICAgICAgIGNvb3JkID0gdmVjNChfMjQ0LngsIF8yNDQueSwgXzI0NC56LCBjb29yZC53KTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtID0gY29vcmQueHk7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgICAgICBjZHdfZW5kID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS54eTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSBjZHdfZW5kOwogICAgICAgIGhpZ2hwIHZlYzIgXzI1NSA9IFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MocGFyYW1fMik7CiAgICAgICAgY2R3X2VuZCA9IF8yNTU7CiAgICAgICAgY3cgPSBkb3QoY2R3X2VuZCwgdmVjMigwLjUpKTsKICAgIH0KICAgIGNvb3JkLncgPSBjdzsKICAgIHJldHVybiBjb29yZC56dzsKfQoKaGlnaHAgdmVjMiBTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHMoaGlnaHAgdmVjMiB0ZXhjb29yZCwgaGlnaHAgdmVjMiBlLCBoaWdocCB2ZWM0IHN1YnNhbXBsZUluZGljZXMpCnsKICAgIGhpZ2hwIHZlYzIgd2VpZ2h0cyA9IHZlYzIoMC4wKTsKICAgIGhpZ2hwIHZlYzQgZDsKICAgIGlmIChlLnggPiAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMSA9IHZlYzIoLTEuMCwgMS4wKTsKICAgICAgICBoaWdocCB2ZWMyIF8zMTEgPSBTTUFBU2VhcmNoRGlhZzEocGFyYW0sIHBhcmFtXzEpOwogICAgICAgIGQgPSB2ZWM0KF8zMTEueCwgZC55LCBfMzExLnksIGQudyk7CiAgICAgICAgaGlnaHAgZmxvYXQgZGFkZCA9IGZsb2F0KGNkd19lbmQueSA%IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUpOwogICAgICAgIGQueCArPSBkYWRkOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGQgPSB2ZWM0KHZlYzIoMC4wKS54LCBkLnksIHZlYzIoMC4wKS55LCBkLncpOwogICAgfQogICAgaGlnaHAgdmVjMiBwYXJhbV8yID0gdGV4Y29vcmQ7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzMgPSB2ZWMyKDEuMCwgLTEuMCk7CiAgICBoaWdocCB2ZWMyIF8zMzIgPSBTTUFBU2VhcmNoRGlhZzEocGFyYW1fMiwgcGFyYW1fMyk7CiAgICBkID0gdmVjNChkLngsIF8zMzIueCwgZC56LCBfMzMyLnkpOwogICAgaWYgKChkLnggKyBkLnkpID4gMi4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzQgY29vcmRzID0gKHZlYzQoKC1kLngpICsgMC4yNSwgZC54LCBkLnksICgtZC55KSAtIDAuMjUpICogc2NyZWVuU2l6ZUludi54eXh5KSArIHRleGNvb3JkLnh5eHk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV80ID0gY29vcmRzLnh5ICsgKHZlYzIoLTEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzUgPSAwLjA7CiAgICAgICAgaGlnaHAgdmVjMiBfMzc0ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzQsIHBhcmFtXzUpLnh5OwogICAgICAgIGhpZ2hwIHZlYzQgYzsKICAgICAgICBjID0gdmVjNChfMzc0LngsIF8zNzQueSwgYy56LCBjLncpOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fNiA9IGNvb3Jkcy56dyArICh2ZWMyKDEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzcgPSAwLjA7CiAgICAgICAgaGlnaHAgdmVjMiBfMzg2ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzYsIHBhcmFtXzcpLnh5OwogICAgICAgIGMgPSB2ZWM0KGMueCwgYy55LCBfMzg2LngsIF8zODYueSk7CiAgICAgICAgaGlnaHAgdmVjNCBwYXJhbV84ID0gYzsKICAgICAgICBoaWdocCB2ZWM0IF8zOTEgPSBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKHBhcmFtXzgpOwogICAgICAgIGMgPSB2ZWM0KF8zOTEueSwgXzM5MS54LCBfMzkxLncsIF8zOTEueik7CiAgICAgICAgaGlnaHAgdmVjMiBjYyA9ICh2ZWMyKDIuMCkgKiBjLnh6KSArIGMueXc7CiAgICAgICAgaGlnaHAgZmxvYXQgYTFjb25keCA9IHN0ZXAoMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSwgZC56KTsKICAgICAgICBoaWdocCBmbG9hdCBhMWNvbmR5ID0gc3RlcCgwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1LCBkLncpOwogICAgICAgIGlmIChhMWNvbmR4ID09IDEuMCkKICAgICAgICB7CiAgICAgICAgICAgIGNjLnggPSAwLjA7CiAgICAgICAgfQogICAgICAgIGlmIChhMWNvbmR5ID09IDEuMCkKICAgICAgICB7CiAgICAgICAgICAgIGNjLnkgPSAwLjA7CiAgICAgICAgfQogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fOSA9IGQueHk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xMCA9IGNjOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzExID0gc3Vic2FtcGxlSW5kaWNlcy56OwogICAgICAgIHdlaWdodHMgKz0gU01BQUFyZWFEaWFnKHBhcmFtXzksIHBhcmFtXzEwLCBwYXJhbV8xMSk7CiAgICB9CiAgICBoaWdocCB2ZWMyIHBhcmFtXzEyID0gdGV4Y29vcmQ7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzEzID0gdmVjMigtMS4wKTsKICAgIGhpZ2hwIHZlYzIgXzQzNSA9IFNNQUFTZWFyY2hEaWFnMihwYXJhbV8xMiwgcGFyYW1fMTMpOwogICAgZCA9IHZlYzQoXzQzNS54LCBkLnksIF80MzUueSwgZC53KTsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTQgPSB0ZXhjb29yZCArICh2ZWMyKDEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMTUgPSAwLjA7CiAgICBpZiAodGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzE0LCBwYXJhbV8xNSkueCA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE2ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xNyA9IHZlYzIoMS4wKTsKICAgICAgICBoaWdocCB2ZWMyIF80NTMgPSBTTUFBU2VhcmNoRGlhZzIocGFyYW1fMTYsIHBhcmFtXzE3KTsKICAgICAgICBkID0gdmVjNChkLngsIF80NTMueCwgZC56LCBfNDUzLnkpOwogICAgICAgIGhpZ2hwIGZsb2F0IGRhZGRfMSA9IGZsb2F0KGNkd19lbmQueSA%IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUpOwogICAgICAgIGQueSArPSBkYWRkXzE7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgZCA9IHZlYzQoZC54LCB2ZWMyKDAuMCkueCwgZC56LCB2ZWMyKDAuMCkueSk7CiAgICB9CiAgICBpZiAoKGQueCArIGQueSkgPiAyLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjNCBjb29yZHNfMSA9ICh2ZWM0KC1kLngsIC1kLngsIGQueSwgZC55KSAqIHNjcmVlblNpemVJbnYueHl4eSkgKyB0ZXhjb29yZC54eXh5OwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTggPSBjb29yZHNfMS54eSArICh2ZWMyKC0xLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8xOSA9IDAuMDsKICAgICAgICBoaWdocCB2ZWM0IGNfMTsKICAgICAgICBjXzEueCA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbV8xOCwgcGFyYW1fMTkpLnk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yMCA9IGNvb3Jkc18xLnh5ICsgKHZlYzIoMC4wLCAtMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzIxID0gMC4wOwogICAgICAgIGNfMS55ID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzIwLCBwYXJhbV8yMSkueDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIyID0gY29vcmRzXzEuencgKyAodmVjMigxLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8yMyA9IDAuMDsKICAgICAgICBoaWdocCB2ZWMyIF81MjUgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgcGFyYW1fMjIsIHBhcmFtXzIzKS55eDsKICAgICAgICBjXzEgPSB2ZWM0KGNfMS54LCBjXzEueSwgXzUyNS54LCBfNTI1LnkpOwogICAgICAgIGhpZ2hwIHZlYzIgY2NfMSA9ICh2ZWMyKDIuMCkgKiBjXzEueHopICsgY18xLnl3OwogICAgICAgIGhpZ2hwIGZsb2F0IGExY29uZHhfMSA9IHN0ZXAoMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSwgZC56KTsKICAgICAgICBoaWdocCBmbG9hdCBhMWNvbmR5XzEgPSBzdGVwKDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUsIGQudyk7CiAgICAgICAgaWYgKGExY29uZHhfMSA9PSAxLjApCiAgICAgICAgewogICAgICAgICAgICBjY18xLnggPSAwLjA7CiAgICAgICAgfQogICAgICAgIGlmIChhMWNvbmR5XzEgPT0gMS4wKQogICAgICAgIHsKICAgICAgICAgICAgY2NfMS55ID0gMC4wOwogICAgICAgIH0KICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzI0ID0gZC54eTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzI1ID0gY2NfMTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8yNiA9IHN1YnNhbXBsZUluZGljZXMudzsKICAgICAgICB3ZWlnaHRzICs9IFNNQUFBcmVhRGlhZyhwYXJhbV8yNCwgcGFyYW1fMjUsIHBhcmFtXzI2KS55eDsKICAgIH0KICAgIHJldHVybiB3ZWlnaHRzOwp9CgpoaWdocCBmbG9hdCBTTUFBU2VhcmNoTGVuZ3RoKGhpZ2hwIHZlYzIgZSwgaGlnaHAgZmxvYXQgb2Zmc2V0KQp7CiAgICBoaWdocCB2ZWMyIHNjYWxlID0gdmVjMigzMy4wLCAtMzMuMCk7CiAgICBoaWdocCB2ZWMyIGJpYXMgPSB2ZWMyKDY2LjAsIDMzLjApICogdmVjMihvZmZzZXQsIDEuMCk7CiAgICBzY2FsZSArPSB2ZWMyKC0xLjAsIDEuMCk7CiAgICBiaWFzICs9IHZlYzIoMC41LCAtMC41KTsKICAgIHNjYWxlICo9IHZlYzIoMC4wMTU2MjUsIDAuMDYyNSk7CiAgICBiaWFzICo9IHZlYzIoMC4wMTU2MjUsIDAuMDYyNSk7CiAgICBoaWdocCB2ZWMyIGNvb3JkID0gKHNjYWxlICogZSkgKyBiaWFzOwogICAgcmV0dXJuIHRleHR1cmVMb2Qoc2VhcmNoVGV4LCBjb29yZCwgMC4wKS54Owp9CgpoaWdocCBmbG9hdCBTTUFBU2VhcmNoWExlZnQoaW5vdXQgaGlnaHAgdmVjMiB0ZXhjb29yZCwgaGlnaHAgZmxvYXQgZW5kKQp7CiAgICBoaWdocCB2ZWMyIGUgPSB2ZWMyKDAuMCwgMS4wKTsKICAgIGZvciAoOzspCiAgICB7CiAgICAgICAgYm9vbCBfNjE0ID0gdGV4Y29vcmQueCA%IGVuZDsKICAgICAgICBib29sIF82MjE7CiAgICAgICAgaWYgKF82MTQpCiAgICAgICAgewogICAgICAgICAgICBfNjIxID0gZS55ID4gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjU7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIF82MjEgPSBfNjE0OwogICAgICAgIH0KICAgICAgICBib29sIF82Mjc7CiAgICAgICAgaWYgKF82MjEpCiAgICAgICAgewogICAgICAgICAgICBfNjI3ID0gZS54ID09IDAuMDsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgXzYyNyA9IF82MjE7CiAgICAgICAgfQogICAgICAgIGlmIChfNjI3KQogICAgICAgIHsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gMC4wOwogICAgICAgICAgICBlID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS54eTsKICAgICAgICAgICAgdGV4Y29vcmQgPSAodmVjMigtMi4wLCAtMC4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CiAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSBlOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMyA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IG9mZnNldCA9ICgoLTIuMDA3ODc0MDExOTkzNDA4MjAzMTI1KSAqIFNNQUFTZWFyY2hMZW5ndGgocGFyYW1fMiwgcGFyYW1fMykpICsgMy4yNTsKICAgIHJldHVybiAoc2NyZWVuU2l6ZUludi54ICogb2Zmc2V0KSArIHRleGNvb3JkLng7Cn0KCmhpZ2hwIGZsb2F0IFNNQUFTZWFyY2hYUmlnaHQoaW5vdXQgaGlnaHAgdmVjMiB0ZXhjb29yZCwgaGlnaHAgZmxvYXQgZW5kKQp7CiAgICBoaWdocCB2ZWMyIGUgPSB2ZWMyKDAuMCwgMS4wKTsKICAgIGZvciAoOzspCiAgICB7CiAgICAgICAgYm9vbCBfNjY3ID0gdGV4Y29vcmQueCA8IGVuZDsKICAgICAgICBib29sIF82NzM7CiAgICAgICAgaWYgKF82NjcpCiAgICAgICAgewogICAgICAgICAgICBfNjczID0gZS55ID4gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjU7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIF82NzMgPSBfNjY3OwogICAgICAgIH0KICAgICAgICBib29sIF82Nzk7CiAgICAgICAgaWYgKF82NzMpCiAgICAgICAgewogICAgICAgICAgICBfNjc5ID0gZS54ID09IDAuMDsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgXzY3OSA9IF82NzM7CiAgICAgICAgfQogICAgICAgIGlmIChfNjc5KQogICAgICAgIHsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gMC4wOwogICAgICAgICAgICBlID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS54eTsKICAgICAgICAgICAgdGV4Y29vcmQgPSAodmVjMigyLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgfQogICAgaGlnaHAgdmVjMiBwYXJhbV8yID0gZTsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMgPSAwLjU7CiAgICBoaWdocCBmbG9hdCBvZmZzZXQgPSAoKC0yLjAwNzg3NDAxMTk5MzQwODIwMzEyNSkgKiBTTUFBU2VhcmNoTGVuZ3RoKHBhcmFtXzIsIHBhcmFtXzMpKSArIDMuMjU7CiAgICByZXR1cm4gKCgtc2NyZWVuU2l6ZUludi54KSAqIG9mZnNldCkgKyB0ZXhjb29yZC54Owp9CgpoaWdocCB2ZWMyIFNNQUFBcmVhKGhpZ2hwIHZlYzIgZGlzdCwgaGlnaHAgZmxvYXQgZTEsIGhpZ2hwIGZsb2F0IGUyLCBoaWdocCBmbG9hdCBvZmZzZXQpCnsKICAgIGhpZ2hwIHZlYzIgdGV4Y29vcmQgPSAodmVjMigxNi4wKSAqIGZsb29yKCh2ZWMyKGUxLCBlMikgKiA0LjApICsgdmVjMigwLjUpKSkgKyBkaXN0OwogICAgdGV4Y29vcmQgPSAodmVjMigwLjAwNjI1MDAwMDA5MzEzMjI1NzQ2MTU0Nzg1MTU2MjUsIDAuMDAxNzg1NzE0Mjk1NjkyNzQxODcwODgwMTI2OTUzMTI1KSAqIHRleGNvb3JkKSArIHZlYzIoMC4wMDMxMjUwMDAwNDY1NjYxMjg3MzA3NzM5MjU3ODEyNSwgMC4wMDA4OTI4NTcxNDc4NDYzNzA5MzU0NDAwNjM0NzY1NjI1KTsKICAgIHRleGNvb3JkLnkgPSAoMC4xNDI4NTcxNDkyNDMzNTQ3OTczNjMyODEyNSAqIG9mZnNldCkgKyB0ZXhjb29yZC55OwogICAgcmV0dXJuIHRleHR1cmVMb2QoYXJlYVRleCwgdGV4Y29vcmQsIDAuMCkueHk7Cn0KCmhpZ2hwIHZlYzIgU01BQURldGVjdEhvcml6b250YWxDb3JuZXJQYXR0ZXJuKGlub3V0IGhpZ2hwIHZlYzIgd2VpZ2h0cywgaGlnaHAgdmVjNCB0ZXhjb29yZCwgaGlnaHAgdmVjMiBkKQp7CiAgICBoaWdocCB2ZWMyIGxlZnRSaWdodCA9IHN0ZXAoZCwgZC55eCk7CiAgICBoaWdocCB2ZWMyIHJvdW5kaW5nID0gbGVmdFJpZ2h0ICogMC43NTsKICAgIHJvdW5kaW5nIC89IHZlYzIobGVmdFJpZ2h0LnggKyBsZWZ0UmlnaHQueSk7CiAgICBoaWdocCB2ZWMyIGZhY3RvciA9IHZlYzIoMS4wKTsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhjb29yZC54eSArICh2ZWMyKDAuMCwgMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy54ICogdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS54KTsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IHRleGNvb3JkLnp3ICsgKHZlYzIoMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMyA9IDAuMDsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy55ICogdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzIsIHBhcmFtXzMpLngpOwogICAgaGlnaHAgdmVjMiBwYXJhbV80ID0gdGV4Y29vcmQueHkgKyAodmVjMigwLjAsIC0yLjApICogc2NyZWVuU2l6ZUludik7CiAgICBoaWdocCBmbG9hdCBwYXJhbV81ID0gMC4wOwogICAgZmFjdG9yLnkgLT0gKHJvdW5kaW5nLnggKiB0ZXh0dXJlTG9kQShlZGdlc1RleCwgcGFyYW1fNCwgcGFyYW1fNSkueCk7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzYgPSB0ZXhjb29yZC56dyArICh2ZWMyKDEuMCwgLTIuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzcgPSAwLjA7CiAgICBmYWN0b3IueSAtPSAocm91bmRpbmcueSAqIHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbV82LCBwYXJhbV83KS54KTsKICAgIHdlaWdodHMgKj0gY2xhbXAoZmFjdG9yLCB2ZWMyKDAuMCksIHZlYzIoMS4wKSk7CiAgICByZXR1cm4gd2VpZ2h0czsKfQoKaGlnaHAgZmxvYXQgU01BQVNlYXJjaFlVcChpbm91dCBoaWdocCB2ZWMyIHRleGNvb3JkLCBoaWdocCBmbG9hdCBlbmQpCnsKICAgIGhpZ2hwIHZlYzIgZSA9IHZlYzIoMS4wLCAwLjApOwogICAgZm9yICg7OykKICAgIHsKICAgICAgICBib29sIF83MTYgPSB0ZXhjb29yZC55ID4gZW5kOwogICAgICAgIGJvb2wgXzcyMjsKICAgICAgICBpZiAoXzcxNikKICAgICAgICB7CiAgICAgICAgICAgIF83MjIgPSBlLnggPiAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgXzcyMiA9IF83MTY7CiAgICAgICAgfQogICAgICAgIGJvb2wgXzcyODsKICAgICAgICBpZiAoXzcyMikKICAgICAgICB7CiAgICAgICAgICAgIF83MjggPSBlLnkgPT0gMC4wOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNzI4ID0gXzcyMjsKICAgICAgICB9CiAgICAgICAgaWYgKF83MjgpCiAgICAgICAgewogICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzEgPSAwLjA7CiAgICAgICAgICAgIGUgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgcGFyYW0sIHBhcmFtXzEpLnh5OwogICAgICAgICAgICB0ZXhjb29yZCA9ICh2ZWMyKC0wLjAsIC0yLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgIH0KICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IGUueXg7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8zID0gMC4wOwogICAgaGlnaHAgZmxvYXQgb2Zmc2V0ID0gKCgtMi4wMDc4NzQwMTE5OTM0MDgyMDMxMjUpICogU01BQVNlYXJjaExlbmd0aChwYXJhbV8yLCBwYXJhbV8zKSkgKyAzLjI1OwogICAgcmV0dXJuIChzY3JlZW5TaXplSW52LnkgKiBvZmZzZXQpICsgdGV4Y29vcmQueTsKfQoKaGlnaHAgZmxvYXQgU01BQVNlYXJjaFlEb3duKGlub3V0IGhpZ2hwIHZlYzIgdGV4Y29vcmQsIGhpZ2hwIGZsb2F0IGVuZCkKewogICAgaGlnaHAgdmVjMiBlID0gdmVjMigxLjAsIDAuMCk7CiAgICBmb3IgKDs7KQogICAgewogICAgICAgIGJvb2wgXzc2NSA9IHRleGNvb3JkLnkgPCBlbmQ7CiAgICAgICAgYm9vbCBfNzcxOwogICAgICAgIGlmIChfNzY1KQogICAgICAgIHsKICAgICAgICAgICAgXzc3MSA9IGUueCA%IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1OwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBfNzcxID0gXzc2NTsKICAgICAgICB9CiAgICAgICAgYm9vbCBfNzc3OwogICAgICAgIGlmIChfNzcxKQogICAgICAgIHsKICAgICAgICAgICAgXzc3NyA9IGUueSA9PSAwLjA7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIF83NzcgPSBfNzcxOwogICAgICAgIH0KICAgICAgICBpZiAoXzc3NykKICAgICAgICB7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhjb29yZDsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgICAgICAgICAgZSA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbSwgcGFyYW1fMSkueHk7CiAgICAgICAgICAgIHRleGNvb3JkID0gKHZlYzIoMC4wLCAyLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgIH0KICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IGUueXg7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8zID0gMC41OwogICAgaGlnaHAgZmxvYXQgb2Zmc2V0ID0gKCgtMi4wMDc4NzQwMTE5OTM0MDgyMDMxMjUpICogU01BQVNlYXJjaExlbmd0aChwYXJhbV8yLCBwYXJhbV8zKSkgKyAzLjI1OwogICAgcmV0dXJuICgoLXNjcmVlblNpemVJbnYueSkgKiBvZmZzZXQpICsgdGV4Y29vcmQueTsKfQoKaGlnaHAgdmVjMiBTTUFBRGV0ZWN0VmVydGljYWxDb3JuZXJQYXR0ZXJuKGlub3V0IGhpZ2hwIHZlYzIgd2VpZ2h0cywgaGlnaHAgdmVjNCB0ZXhjb29yZCwgaGlnaHAgdmVjMiBkKQp7CiAgICBoaWdocCB2ZWMyIGxlZnRSaWdodCA9IHN0ZXAoZCwgZC55eCk7CiAgICBoaWdocCB2ZWMyIHJvdW5kaW5nID0gbGVmdFJpZ2h0ICogMC43NTsKICAgIHJvdW5kaW5nIC89IHZlYzIobGVmdFJpZ2h0LnggKyBsZWZ0UmlnaHQueSk7CiAgICBoaWdocCB2ZWMyIGZhY3RvciA9IHZlYzIoMS4wKTsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhjb29yZC54eSArICh2ZWMyKDEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy54ICogdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS55KTsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IHRleGNvb3JkLnp3ICsgKHZlYzIoMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgaGlnaHAgZmxvYXQgcGFyYW1fMyA9IDAuMDsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy55ICogdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzIsIHBhcmFtXzMpLnkpOwogICAgaGlnaHAgdmVjMiBwYXJhbV80ID0gdGV4Y29vcmQueHkgKyAodmVjMigtMi4wLCAwLjApICogc2NyZWVuU2l6ZUludik7CiAgICBoaWdocCBmbG9hdCBwYXJhbV81ID0gMC4wOwogICAgZmFjdG9yLnkgLT0gKHJvdW5kaW5nLnggKiB0ZXh0dXJlTG9kQShlZGdlc1RleCwgcGFyYW1fNCwgcGFyYW1fNSkueSk7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzYgPSB0ZXhjb29yZC56dyArICh2ZWMyKC0yLjAsIDEuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzcgPSAwLjA7CiAgICBmYWN0b3IueSAtPSAocm91bmRpbmcueSAqIHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbV82LCBwYXJhbV83KS55KTsKICAgIHdlaWdodHMgKj0gY2xhbXAoZmFjdG9yLCB2ZWMyKDAuMCksIHZlYzIoMS4wKSk7CiAgICByZXR1cm4gd2VpZ2h0czsKfQoKaGlnaHAgdmVjNCBTTUFBQmxlbmRpbmdXZWlnaHRDYWxjdWxhdGlvblBTKGhpZ2hwIHZlYzIgdGV4Y29vcmQsIGhpZ2hwIHZlYzIgcGl4Y29vcmRfMSwgaGlnaHAgdmVjNCBzdWJzYW1wbGVJbmRpY2VzKQp7CiAgICBoaWdocCB2ZWM0IHdlaWdodHMgPSB2ZWM0KDAuMCk7CiAgICBoaWdocCB2ZWMyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICBoaWdocCBmbG9hdCBwYXJhbV8xID0gMC4wOwogICAgaGlnaHAgdmVjMiBlID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtLCBwYXJhbV8xKS54eTsKICAgIGlmIChlLnkgPiAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8zID0gZTsKICAgICAgICBoaWdocCB2ZWM0IHBhcmFtXzQgPSBzdWJzYW1wbGVJbmRpY2VzOwogICAgICAgIGhpZ2hwIHZlYzIgXzEwMzkgPSBTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHMocGFyYW1fMiwgcGFyYW1fMywgcGFyYW1fNCk7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQoXzEwMzkueCwgXzEwMzkueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgIGlmICh3ZWlnaHRzLnggPT0gKC13ZWlnaHRzLnkpKQogICAgICAgIHsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV81ID0gb2Zmc2V0MC54eTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fNiA9IG9mZnNldDIueDsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgXzEwNjEgPSBTTUFBU2VhcmNoWExlZnQocGFyYW1fNSwgcGFyYW1fNik7CiAgICAgICAgICAgIGhpZ2hwIHZlYzMgY29vcmRzOwogICAgICAgICAgICBjb29yZHMueCA9IF8xMDYxOwogICAgICAgICAgICBjb29yZHMueSA9IG9mZnNldDEueTsKICAgICAgICAgICAgaGlnaHAgdmVjMiBkOwogICAgICAgICAgICBkLnggPSBjb29yZHMueDsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV83ID0gY29vcmRzLnh5OwogICAgICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV84ID0gMC4wOwogICAgICAgICAgICBoaWdocCBmbG9hdCBlMSA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbV83LCBwYXJhbV84KS54OwogICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzkgPSBvZmZzZXQwLnp3OwogICAgICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8xMCA9IG9mZnNldDIueTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgXzEwODQgPSBTTUFBU2VhcmNoWFJpZ2h0KHBhcmFtXzksIHBhcmFtXzEwKTsKICAgICAgICAgICAgY29vcmRzLnogPSBfMTA4NDsKICAgICAgICAgICAgZC55ID0gY29vcmRzLno7CiAgICAgICAgICAgIGQgPSBhYnMoZmxvb3IoKChzY3JlZW5TaXplLnh4ICogZCkgKyAoLXBpeGNvb3JkXzEueHgpKSArIHZlYzIoMC41KSkpOwogICAgICAgICAgICBoaWdocCB2ZWMyIHNxcnRfZCA9IHNxcnQoZCk7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTEgPSBjb29yZHMuenkgKyAodmVjMigxLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTIgPSAwLjA7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IGUyID0gdGV4dHVyZUxvZEEoZWRnZXNUZXgsIHBhcmFtXzExLCBwYXJhbV8xMikueDsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xMyA9IHNxcnRfZDsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTQgPSBlMTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTUgPSBlMjsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTYgPSBzdWJzYW1wbGVJbmRpY2VzLnk7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgXzExMjQgPSBTTUFBQXJlYShwYXJhbV8xMywgcGFyYW1fMTQsIHBhcmFtXzE1LCBwYXJhbV8xNik7CiAgICAgICAgICAgIHdlaWdodHMgPSB2ZWM0KF8xMTI0LngsIF8xMTI0LnksIHdlaWdodHMueiwgd2VpZ2h0cy53KTsKICAgICAgICAgICAgY29vcmRzLnkgPSB0ZXhjb29yZC55OwogICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE3ID0gd2VpZ2h0cy54eTsKICAgICAgICAgICAgaGlnaHAgdmVjNCBwYXJhbV8xOCA9IGNvb3Jkcy54eXp5OwogICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE5ID0gZDsKICAgICAgICAgICAgaGlnaHAgdmVjMiBfMTEzOCA9IFNNQUFEZXRlY3RIb3Jpem9udGFsQ29ybmVyUGF0dGVybihwYXJhbV8xNywgcGFyYW1fMTgsIHBhcmFtXzE5KTsKICAgICAgICAgICAgd2VpZ2h0cyA9IHZlYzQoXzExMzgueCwgXzExMzgueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBlLnggPSAwLjA7CiAgICAgICAgfQogICAgfQogICAgaWYgKGUueCA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIwID0gb2Zmc2V0MS54eTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8yMSA9IG9mZnNldDIuejsKICAgICAgICBoaWdocCBmbG9hdCBfMTE1NSA9IFNNQUFTZWFyY2hZVXAocGFyYW1fMjAsIHBhcmFtXzIxKTsKICAgICAgICBoaWdocCB2ZWMzIGNvb3Jkc18xOwogICAgICAgIGNvb3Jkc18xLnkgPSBfMTE1NTsKICAgICAgICBjb29yZHNfMS54ID0gb2Zmc2V0MC54OwogICAgICAgIGhpZ2hwIHZlYzIgZF8xOwogICAgICAgIGRfMS54ID0gY29vcmRzXzEueTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIyID0gY29vcmRzXzEueHk7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMjMgPSAwLjA7CiAgICAgICAgaGlnaHAgZmxvYXQgZTFfMSA9IHRleHR1cmVMb2RBKGVkZ2VzVGV4LCBwYXJhbV8yMiwgcGFyYW1fMjMpLnk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yNCA9IG9mZnNldDEuenc7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMjUgPSBvZmZzZXQyLnc7CiAgICAgICAgaGlnaHAgZmxvYXQgXzExNzcgPSBTTUFBU2VhcmNoWURvd24ocGFyYW1fMjQsIHBhcmFtXzI1KTsKICAgICAgICBjb29yZHNfMS56ID0gXzExNzc7CiAgICAgICAgZF8xLnkgPSBjb29yZHNfMS56OwogICAgICAgIGRfMSA9IGFicyhmbG9vcigoKHNjcmVlblNpemUueXkgKiBkXzEpICsgKC1waXhjb29yZF8xLnl5KSkgKyB2ZWMyKDAuNSkpKTsKICAgICAgICBoaWdocCB2ZWMyIHNxcnRfZF8xID0gc3FydChkXzEpOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjYgPSBjb29yZHNfMS54eiArICh2ZWMyKDAuMCwgMS4wKSAqIHNjcmVlblNpemVJbnYpOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzI3ID0gMC4wOwogICAgICAgIGhpZ2hwIGZsb2F0IGUyXzEgPSB0ZXh0dXJlTG9kQShlZGdlc1RleCwgcGFyYW1fMjYsIHBhcmFtXzI3KS55OwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjggPSBzcXJ0X2RfMTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8yOSA9IGUxXzE7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMzAgPSBlMl8xOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMxID0gc3Vic2FtcGxlSW5kaWNlcy54OwogICAgICAgIGhpZ2hwIHZlYzIgXzEyMTYgPSBTTUFBQXJlYShwYXJhbV8yOCwgcGFyYW1fMjksIHBhcmFtXzMwLCBwYXJhbV8zMSk7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQod2VpZ2h0cy54LCB3ZWlnaHRzLnksIF8xMjE2LngsIF8xMjE2LnkpOwogICAgICAgIGNvb3Jkc18xLnggPSB0ZXhjb29yZC54OwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMzIgPSB3ZWlnaHRzLnp3OwogICAgICAgIGhpZ2hwIHZlYzQgcGFyYW1fMzMgPSBjb29yZHNfMS54eXh6OwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMzQgPSBkXzE7CiAgICAgICAgaGlnaHAgdmVjMiBfMTIzMCA9IFNNQUFEZXRlY3RWZXJ0aWNhbENvcm5lclBhdHRlcm4ocGFyYW1fMzIsIHBhcmFtXzMzLCBwYXJhbV8zNCk7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQod2VpZ2h0cy54LCB3ZWlnaHRzLnksIF8xMjMwLngsIF8xMjMwLnkpOwogICAgfQogICAgcmV0dXJuIHdlaWdodHM7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMSA9IHBpeGNvb3JkOwogICAgaGlnaHAgdmVjNCBwYXJhbV8yID0gdmVjNCgwLjApOwogICAgaGlnaHAgdmVjNCBfMTI0NiA9IFNNQUFCbGVuZGluZ1dlaWdodENhbGN1bGF0aW9uUFMocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgZnJhZ0NvbG9yID0gXzEyNDY7Cn0KCg";
kha_Shaders.smaa_blend_weight_vertData0 = "s791:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZTsKdW5pZm9ybSB2ZWMyIHNjcmVlblNpemVJbnY7CgpvdXQgdmVjMiB0ZXhDb29yZDsKaW4gdmVjMiBwb3M7Cm91dCB2ZWMyIHBpeGNvb3JkOwpvdXQgdmVjNCBvZmZzZXQwOwpvdXQgdmVjNCBvZmZzZXQxOwpvdXQgdmVjNCBvZmZzZXQyOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIHBpeGNvb3JkID0gdGV4Q29vcmQgKiBzY3JlZW5TaXplOwogICAgb2Zmc2V0MCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KC0wLjI1LCAtMC4xMjUsIDEuMjUsIC0wLjEyNSkpICsgdGV4Q29vcmQueHl4eTsKICAgIG9mZnNldDEgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgtMC4xMjUsIC0wLjI1LCAtMC4xMjUsIDEuMjUpKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQyID0gKHNjcmVlblNpemVJbnYueHh5eSAqIHZlYzQoLTMyLjAsIDMyLjAsIC0zMi4wLCAzMi4wKSkgKyB2ZWM0KG9mZnNldDAueHosIG9mZnNldDEueXcpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.smaa_edge_detect_fragData0 = "s2311:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgY29sb3JUZXg7CgppbiBoaWdocCB2ZWM0IG9mZnNldDA7CmluIGhpZ2hwIHZlYzQgb2Zmc2V0MTsKaW4gaGlnaHAgdmVjNCBvZmZzZXQyOwpvdXQgaGlnaHAgdmVjNCBmcmFnQ29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7CgpoaWdocCB2ZWMyIFNNQUFDb2xvckVkZ2VEZXRlY3Rpb25QUyhoaWdocCB2ZWMyIHRleGNvb3JkKQp7CiAgICBoaWdocCB2ZWMyIHRocmVzaG9sZCA9IHZlYzIoMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgaGlnaHAgdmVjMyBDID0gdGV4dHVyZUxvZChjb2xvclRleCwgdGV4Y29vcmQsIDAuMCkueHl6OwogICAgaGlnaHAgdmVjMyBDbGVmdCA9IHRleHR1cmVMb2QoY29sb3JUZXgsIG9mZnNldDAueHksIDAuMCkueHl6OwogICAgaGlnaHAgdmVjMyB0ID0gYWJzKEMgLSBDbGVmdCk7CiAgICBoaWdocCB2ZWM0IGRlbHRhOwogICAgZGVsdGEueCA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDdG9wID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0MC56dywgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDdG9wKTsKICAgIGRlbHRhLnkgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGhpZ2hwIHZlYzIgZWRnZXMgPSBzdGVwKHRocmVzaG9sZCwgZGVsdGEueHkpOwogICAgaWYgKGRvdChlZGdlcywgdmVjMigxLjApKSA9PSAwLjApCiAgICB7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGhpZ2hwIHZlYzMgQ3JpZ2h0ID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0MS54eSwgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDcmlnaHQpOwogICAgZGVsdGEueiA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDYm90dG9tID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0MS56dywgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDYm90dG9tKTsKICAgIGRlbHRhLncgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGhpZ2hwIHZlYzIgbWF4RGVsdGEgPSBtYXgoZGVsdGEueHksIGRlbHRhLnp3KTsKICAgIGhpZ2hwIHZlYzMgQ2xlZnRsZWZ0ID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0Mi54eSwgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDbGVmdGxlZnQpOwogICAgZGVsdGEueiA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDdG9wdG9wID0gdGV4dHVyZUxvZChjb2xvclRleCwgb2Zmc2V0Mi56dywgMC4wKS54eXo7CiAgICB0ID0gYWJzKEMgLSBDdG9wdG9wKTsKICAgIGRlbHRhLncgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIG1heERlbHRhID0gbWF4KG1heERlbHRhLCBkZWx0YS56dyk7CiAgICBoaWdocCBmbG9hdCBmaW5hbERlbHRhID0gbWF4KG1heERlbHRhLngsIG1heERlbHRhLnkpOwogICAgZWRnZXMgKj0gc3RlcCh2ZWMyKGZpbmFsRGVsdGEpLCBkZWx0YS54eSAqIDIuMCk7CiAgICByZXR1cm4gZWRnZXM7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIHZlYzIgXzIwNCA9IFNNQUFDb2xvckVkZ2VEZXRlY3Rpb25QUyhwYXJhbSk7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KF8yMDQueCwgXzIwNC55LCBmcmFnQ29sb3IueiwgZnJhZ0NvbG9yLncpOwp9Cgo";
kha_Shaders.smaa_edge_detect_vertData0 = "s635:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZUludjsKCm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHBvczsKb3V0IHZlYzQgb2Zmc2V0MDsKb3V0IHZlYzQgb2Zmc2V0MTsKb3V0IHZlYzQgb2Zmc2V0MjsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBvZmZzZXQwID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoLTEuMCwgMC4wLCAwLjAsIC0xLjApKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQxID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoMS4wLCAwLjAsIDAuMCwgMS4wKSkgKyB0ZXhDb29yZC54eXh5OwogICAgb2Zmc2V0MiA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KC0yLjAsIDAuMCwgMC4wLCAtMi4wKSkgKyB0ZXhDb29yZC54eXh5OwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.smaa_neighborhood_blend_fragData0 = "s2608:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgYmxlbmRUZXg7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGNvbG9yVGV4Owp1bmlmb3JtIGhpZ2hwIHZlYzIgc2NyZWVuU2l6ZUludjsKCm91dCBoaWdocCB2ZWM0IGZyYWdDb2xvcjsKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBvZmZzZXQ7CgpoaWdocCB2ZWM0IHRleHR1cmVMb2RBKGhpZ2hwIHNhbXBsZXIyRCB0ZXgsIGhpZ2hwIHZlYzIgY29vcmRzLCBoaWdocCBmbG9hdCBsb2QpCnsKICAgIHJldHVybiB0ZXh0dXJlTG9kKHRleCwgY29vcmRzLCBsb2QpOwp9CgpoaWdocCB2ZWM0IFNNQUFOZWlnaGJvcmhvb2RCbGVuZGluZ1BTKGhpZ2hwIHZlYzIgdGV4Y29vcmQsIGhpZ2hwIHZlYzQgb2Zmc2V0XzEpCnsKICAgIGhpZ2hwIHZlYzQgYTsKICAgIGEueCA9IHRleHR1cmVMb2QoYmxlbmRUZXgsIG9mZnNldF8xLnh5LCAwLjApLnc7CiAgICBhLnkgPSB0ZXh0dXJlTG9kKGJsZW5kVGV4LCBvZmZzZXRfMS56dywgMC4wKS55OwogICAgaGlnaHAgdmVjMiBfNTQgPSB0ZXh0dXJlTG9kKGJsZW5kVGV4LCB0ZXhjb29yZCwgMC4wKS54ejsKICAgIGEgPSB2ZWM0KGEueCwgYS55LCBfNTQueSwgXzU0LngpOwogICAgaWYgKGRvdChhLCB2ZWM0KDEuMCkpIDwgOS45OTk5OTk3NDczNzg3NTE2MzU1NTE0NTI2MzY3MTg4ZS0wNikKICAgIHsKICAgICAgICBoaWdocCB2ZWM0IGNvbG9yID0gdGV4dHVyZUxvZChjb2xvclRleCwgdGV4Y29vcmQsIDAuMCk7CiAgICAgICAgcmV0dXJuIGNvbG9yOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGJvb2wgaCA9IG1heChhLngsIGEueikgPiBtYXgoYS55LCBhLncpOwogICAgICAgIGhpZ2hwIHZlYzQgYmxlbmRpbmdPZmZzZXQgPSB2ZWM0KDAuMCwgYS55LCAwLjAsIGEudyk7CiAgICAgICAgaGlnaHAgdmVjMiBibGVuZGluZ1dlaWdodCA9IGEueXc7CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ09mZnNldC54ID0gYS54OwogICAgICAgICAgICBibGVuZGluZ09mZnNldC55ID0gMC4wOwogICAgICAgICAgICBibGVuZGluZ09mZnNldC56ID0gYS56OwogICAgICAgICAgICBibGVuZGluZ09mZnNldC53ID0gMC4wOwogICAgICAgICAgICBibGVuZGluZ1dlaWdodC54ID0gYS54OwogICAgICAgICAgICBibGVuZGluZ1dlaWdodC55ID0gYS56OwogICAgICAgIH0KICAgICAgICBibGVuZGluZ1dlaWdodCAvPSB2ZWMyKGRvdChibGVuZGluZ1dlaWdodCwgdmVjMigxLjApKSk7CiAgICAgICAgaGlnaHAgdmVjMiB0YyA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzQgYmxlbmRpbmdDb29yZCA9IChibGVuZGluZ09mZnNldCAqIHZlYzQoc2NyZWVuU2l6ZUludiwgLXNjcmVlblNpemVJbnYpKSArIHRjLnh5eHk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IGJsZW5kaW5nQ29vcmQueHk7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMSA9IDAuMDsKICAgICAgICBoaWdocCB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlTG9kQShjb2xvclRleCwgcGFyYW0sIHBhcmFtXzEpICogYmxlbmRpbmdXZWlnaHQueDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSBibGVuZGluZ0Nvb3JkLnp3OwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzMgPSAwLjA7CiAgICAgICAgY29sb3JfMSArPSAodGV4dHVyZUxvZEEoY29sb3JUZXgsIHBhcmFtXzIsIHBhcmFtXzMpICogYmxlbmRpbmdXZWlnaHQueSk7CiAgICAgICAgcmV0dXJuIGNvbG9yXzE7CiAgICB9Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIHZlYzQgcGFyYW1fMSA9IG9mZnNldDsKICAgIGZyYWdDb2xvciA9IFNNQUFOZWlnaGJvcmhvb2RCbGVuZGluZ1BTKHBhcmFtLCBwYXJhbV8xKTsKfQoK";
kha_Shaders.smaa_neighborhood_blend_vertData0 = "s368:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZUludjsKCm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHBvczsKb3V0IHZlYzQgb2Zmc2V0OwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIG9mZnNldCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KDEuMCwgMC4wLCAwLjAsIDEuMCkpICsgdGV4Q29vcmQueHl4eTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.ssao_pass_fragData0 = "s3547:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIGhpZ2hwIHZlYzMgZXllTG9vazsKdW5pZm9ybSBoaWdocCB2ZWMyIGNhbWVyYVByb2o7CnVuaWZvcm0gaGlnaHAgdmVjMiBzY3JlZW5TaXplOwp1bmlmb3JtIGhpZ2hwIHZlYzMgZXllOwp1bmlmb3JtIGhpZ2hwIG1hdDQgaW52VlA7CgppbiBoaWdocCB2ZWMyIHRleENvb3JkOwpvdXQgaGlnaHAgZmxvYXQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWMzIHZpZXdSYXk7CgpoaWdocCB2ZWMyIG9jdGFoZWRyb25XcmFwKGhpZ2hwIHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAoLTEuMCksICh2LnkgPj0gMC4wKSA:IDEuMCA6ICgtMS4wKSk7Cn0KCmhpZ2hwIHZlYzMgZ2V0UG9zTm9FeWUoaGlnaHAgdmVjMyBleWVMb29rXzEsIGhpZ2hwIHZlYzMgdmlld1JheV8xLCBoaWdocCBmbG9hdCBkZXB0aCwgaGlnaHAgdmVjMiBjYW1lcmFQcm9qXzEpCnsKICAgIGhpZ2hwIGZsb2F0IGxpbmVhckRlcHRoID0gY2FtZXJhUHJval8xLnkgLyAoKChkZXB0aCAqIDAuNSkgKyAwLjUpIC0gY2FtZXJhUHJval8xLngpOwogICAgaGlnaHAgZmxvYXQgdmlld1pEaXN0ID0gZG90KGV5ZUxvb2tfMSwgdmlld1JheV8xKTsKICAgIGhpZ2hwIHZlYzMgd3Bvc2l0aW9uID0gdmlld1JheV8xICogKGxpbmVhckRlcHRoIC8gdmlld1pEaXN0KTsKICAgIHJldHVybiB3cG9zaXRpb247Cn0KCmhpZ2hwIHZlYzMgZ2V0UG9zMk5vRXllKGhpZ2hwIHZlYzMgZXllXzEsIGhpZ2hwIG1hdDQgaW52VlBfMSwgaGlnaHAgZmxvYXQgZGVwdGgsIGhpZ2hwIHZlYzIgY29vcmQpCnsKICAgIGhpZ2hwIHZlYzQgcG9zID0gdmVjNCgoY29vcmQgKiAyLjApIC0gdmVjMigxLjApLCBkZXB0aCwgMS4wKTsKICAgIHBvcyA9IGludlZQXzEgKiBwb3M7CiAgICBoaWdocCB2ZWMzIF84NyA9IHBvcy54eXogLyB2ZWMzKHBvcy53KTsKICAgIHBvcyA9IHZlYzQoXzg3LngsIF84Ny55LCBfODcueiwgcG9zLncpOwogICAgcmV0dXJuIHBvcy54eXogLSBleWVfMTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgZmxvYXQgZGVwdGggPSAodGV4dHVyZUxvZChnYnVmZmVyRCwgdGV4Q29vcmQsIDAuMCkueCAqIDIuMCkgLSAxLjA7CiAgICBpZiAoZGVwdGggPT0gMS4wKQogICAgewogICAgICAgIGZyYWdDb2xvciA9IDEuMDsKICAgICAgICByZXR1cm47CiAgICB9CiAgICBoaWdocCB2ZWMyIGVuYyA9IHRleHR1cmVMb2QoZ2J1ZmZlcjAsIHRleENvb3JkLCAwLjApLnh5OwogICAgaGlnaHAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhlbmMueCkpIC0gYWJzKGVuYy55KTsKICAgIGhpZ2hwIHZlYzIgXzEzNjsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xMzYgPSBlbmM7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzEzNiA9IG9jdGFoZWRyb25XcmFwKGVuYyk7CiAgICB9CiAgICBuID0gdmVjMyhfMTM2LngsIF8xMzYueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICBoaWdocCB2ZWMzIHZyYXkgPSBub3JtYWxpemUodmlld1JheSk7CiAgICBoaWdocCB2ZWMzIGN1cnJlbnRQb3MgPSBnZXRQb3NOb0V5ZShleWVMb29rLCB2cmF5LCBkZXB0aCwgY2FtZXJhUHJvaik7CiAgICBoaWdocCBmbG9hdCBjdXJyZW50RGlzdGFuY2UgPSBsZW5ndGgoY3VycmVudFBvcyk7CiAgICBoaWdocCBmbG9hdCBjdXJyZW50RGlzdGFuY2VBID0gKGN1cnJlbnREaXN0YW5jZSAqIDIwLjApICogMS4wOwogICAgaGlnaHAgZmxvYXQgY3VycmVudERpc3RhbmNlQiA9IGN1cnJlbnREaXN0YW5jZSAqIDAuMDAwNTAwMDAwMDIzNzQ4NzI1NjUyNjk0NzAyMTQ4NDM3NTsKICAgIGl2ZWMyIHB4ID0gaXZlYzIodGV4Q29vcmQgKiBzY3JlZW5TaXplKTsKICAgIGhpZ2hwIGZsb2F0IHBoaSA9IGZsb2F0KCgoMyAqIHB4LngpIF4gKHB4LnkgKyAocHgueCAqIHB4LnkpKSkgKiAxMCk7CiAgICBmcmFnQ29sb3IgPSAwLjA7CiAgICBmb3IgKGludCBpID0gMDsgaSA8IDg7IGkrKykKICAgIHsKICAgICAgICBoaWdocCBmbG9hdCB0aGV0YSA9ICgwLjc4NTM5ODE4NTI1MzE0MzMxMDU0Njg3NSAqIChmbG9hdChpKSArIDAuNSkpICsgcGhpOwogICAgICAgIGhpZ2hwIHZlYzIgayA9IHZlYzIoY29zKHRoZXRhKSwgc2luKHRoZXRhKSkgLyB2ZWMyKGN1cnJlbnREaXN0YW5jZUEpOwogICAgICAgIGRlcHRoID0gKHRleHR1cmVMb2QoZ2J1ZmZlckQsIHRleENvb3JkICsgaywgMC4wKS54ICogMi4wKSAtIDEuMDsKICAgICAgICBoaWdocCB2ZWMzIHBvcyA9IGdldFBvczJOb0V5ZShleWUsIGludlZQLCBkZXB0aCwgdGV4Q29vcmQgKyBrKSAtIGN1cnJlbnRQb3M7CiAgICAgICAgZnJhZ0NvbG9yICs9IChtYXgoMC4wLCBkb3QocG9zLCBuKSAtIGN1cnJlbnREaXN0YW5jZUIpIC8gKGRvdChwb3MsIHBvcykgKyAwLjAxNDk5OTk5OTY2NDcyMzg3MzEzODQyNzczNDM3NSkpOwogICAgfQogICAgZnJhZ0NvbG9yICo9IDAuMDM3NTAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1OwogICAgZnJhZ0NvbG9yID0gMS4wIC0gZnJhZ0NvbG9yOwp9Cgo";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.resumeListeners = [];
kha_System.pauseListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_System.dropFilesListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.ios = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.firefox = false;
kha_SystemImpl.safari = false;
kha_SystemImpl.ie = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.estimatedRefreshRate = 60;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.lastCanvasClientWidth = -1;
kha_SystemImpl.lastCanvasClientHeight = -1;
kha_SystemImpl.iosSoundEnabled = false;
kha_SystemImpl.soundEnabled = false;
kha_SystemImpl.iosTouchs = [];
kha_Window.windows = [];
kha_Window.resizeCallbacks = [];
kha_arrays_ByteArray.LITTLE_ENDIAN = new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x78;
kha_audio2_Audio.disableGcInteractions = false;
kha_audio2_Audio.intBox = new kha_internal_IntBox(0);
kha_audio2_Audio.virtualChannels = [];
kha_audio2_Audio1.lastAllocationCount = 0;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_input_Gamepad.__meta__ = { statics : { sendConnectEvent : { input : null}, sendDisconnectEvent : { input : null}}, fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Gamepad.connectListeners = [];
kha_input_Gamepad.disconnectListeners = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Keyboard.keyBehavior = kha_input_BlockInterventions.Default;
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_input_Mouse.wheelEventBlockBehavior = kha_input_MouseEventBlockBehavior.Full;
kha_input_Surface.touchDownEventBlockBehavior = kha_input_TouchDownEventBlockBehavior.Full;
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_Sound.loading = [];
kha_js_graphics4_Graphics.useVertexAttributes = 0;
kha_js_graphics4_Graphics.matrixCache = new Float32Array(16);
kha_js_graphics4_Graphics.matrix3Cache = new Float32Array(9);
kha_netsync_ControllerBuilder.nextId = 0;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
